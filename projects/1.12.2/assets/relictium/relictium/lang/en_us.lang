relictium.option_impact.low=Low
relictium.option_impact.medium=Medium
relictium.option_impact.high=High
relictium.option_impact.extreme=Extreme
relictium.option_impact.varies=Varies
relictium.options.pages.quality=Quality
relictium.options.pages.performance=Performance
relictium.options.pages.advanced=Advanced
relictium.options.view_distance.tooltip=The render distance controls how far away terrain will be rendered. Shorter distances mean that less terrain will be rendered, improving frame rates.
relictium.options.simulation_distance.tooltip=The simulation distance controls how far away terrain and entities will be loaded and ticked. Shorter distances can reduce the internal server's load and may improve frame rates.
relictium.options.brightness.tooltip=Controls the brightness (gamma) of the game.
relictium.options.clouds.name=Clouds
relictium.options.clouds.tooltip=Controls whether or not clouds will be visible.
relictium.options.gui_scale.tooltip=Sets the maximum scale factor to be used for the user interface. If 'auto' is used, then the largest scale factor will always be used.
relictium.options.fullscreen.tooltip=If enabled, the game will display in full-screen (if supported).
relictium.options.v_sync.tooltip=If enabled, the game's frame rate will be synchronized to the monitor's refresh rate, making for a generally smoother experience at the expense of overall input latency. This setting might reduce performance if your system is too slow.
relictium.options.fps_limit.tooltip=Limits the maximum number of frames per second. This can help reduce battery usage and general system load when multi-tasking. If V-Sync is enabled, this option will be ignored unless it is lower than your display's refresh rate.
relictium.options.view_bobbing.tooltip=If enabled, the player's view will sway and bob when moving around. Players who experience motion sickness while playing can benefit from disabling this.
relictium.options.attack_indicator.tooltip=Controls where the Attack Indicator is displayed on screen.
relictium.options.autosave_indicator.tooltip=If enabled, an indicator will be shown when the game is saving the world to disk.
relictium.options.graphics_quality.tooltip=The default graphics quality controls some legacy options and is necessary for mod compatibility. If the options below are left to \"Default\ they will use this setting.
relictium.options.clouds_quality.tooltip=Controls the quality of rendered clouds in the sky.
relictium.options.weather_quality.tooltip=Controls the quality of rain and snow effects.
relictium.options.leaves_quality.name=Leaves Quality
relictium.options.leaves_quality.tooltip=Controls the quality of leaves.
relictium.options.particle_quality.name=Particle Quality
relictium.options.particle_quality.tooltip=Controls the maximum number of particles which can be present on screen at any one time.
relictium.options.smooth_lighting.tooltip=Controls whether blocks will be smoothly lit and shaded. This slightly increases the amount of time needed to re-build a chunk, but doesn't affect frame rates.
relictium.options.biome_blend.name=Biome Blend
relictium.options.biome_blend.value=%s block(s)
relictium.options.biome_blend.tooltip=Controls the range which biomes will be sampled for block colorization. Higher values greatly increase the amount of time it takes to build chunks for diminishing improvements in quality.
relictium.options.entity_distance.name=Entity Distance
relictium.options.entity_distance.tooltip=Controls how far away entities can render from the player. Higher values increase the render distance at the expense of frame rates.
relictium.options.entity_shadows.tooltip=If enabled, basic shadows will be rendered beneath mobs and other entities.
relictium.options.vignette.name=Vignette
relictium.options.vignette.tooltip=If enabled, a vignette effect will be rendered on the player's view. This is very unlikely to make a difference to frame rates unless you are fill-rate limited.
relictium.options.mipmap_levels.tooltip=Controls the number of mipmaps which will be used for block model textures. Higher values provide better rendering of blocks in the distance, but may adversely affect performance with many animated textures.
relictium.options.use_chunk_multidraw.name=Use Chunk Multi-Draw
relictium.options.use_chunk_multidraw.tooltip=Multi-draw allows multiple chunks to be rendered with fewer draw calls, greatly reducing CPU overhead when rendering the world while also potentially allowing for more efficient GPU utilization. This optimization may cause issues with some graphics drivers, so you should try disabling it if you are experiencing glitches.
relictium.options.use_vertex_objects.name=Use Vertex Array Objects
relictium.options.use_vertex_objects.tooltip=Helps to improve performance by moving information about how vertex data should be rendered into the driver, allowing it to better optimize for repeated rendering of the same objects. There is generally no reason to disable this unless you're using incompatible mods.
relictium.options.use_block_face_culling.name=Use Block Face Culling
relictium.options.use_block_face_culling.tooltip=If enabled, only the sides of blocks which are facing the camera will be submitted for rendering. This can eliminate a large number of block faces very early in the rendering process, saving memory bandwidth and time on the GPU. Some resource packs may have issues with this option, so try disabling it if you're seeing holes in blocks.
relictium.options.use_compact_vertex_format.name=Use Compact Vertex Format
relictium.options.use_compact_vertex_format.tooltip=If enabled, a more compact vertex format will be used for rendering chunks. This can reduce graphics memory usage and bandwidth requirements significantly, especially for integrated graphics cards, but can cause z-fighting with some resource packs due to how it reduces the precision of position and texture coordinate attributes.
relictium.options.use_fog_occlusion.name=Use Fog Occlusion
relictium.options.use_fog_occlusion.tooltip=If enabled, chunks which are determined to be fully hidden by fog effects will not be rendered, helping to improve performance. The improvement can be more dramatic when fog effects are heavier (such as while underwater), but it may cause undesirable visual artifacts between the sky and fog in some scenarios.
relictium.options.use_entity_culling.name=Use Entity Culling
relictium.options.use_entity_culling.tooltip=If enabled, entities determined not to be in any visible chunks will be skipped during rendering. This can help improve performance by avoiding the rendering of entities located underground or behind walls.
relictium.options.use_particle_culling.name=Use Particle Culling
relictium.options.use_particle_culling.tooltip=If enabled, only particles which are determined to be visible will be rendered. This can provide a significant improvement to frame rates when many particles are nearby.
relictium.options.animate_only_visible_textures.name=Animate Only Visible Textures
relictium.options.animate_only_visible_textures.tooltip=If enabled, only animated textures determined to be visible will be updated. This can provide a significant boost to frame rates on some hardware, especially with heavier resource packs. If you experience issues with some textures not being animated, try disabling this option.
relictium.options.translucency_sorting.name=Translucency Sorting
relictium.options.translucency_sorting.tooltip=If enabled, translucent blocks will be sorted correctly from back to front to provide better rendering, especially when multiple translucent blocks are in view and layered.  This is a bit of an expensive operation.
relictium.options.cpu_render_ahead_limit.name=CPU Render-Ahead Limit
relictium.options.cpu_render_ahead_limit.tooltip=Specifies the maximum number of frames the CPU can be waiting on the GPU to finish rendering. Very low or high values may create frame rate instability.
relictium.options.cpu_render_ahead_limit.value=%s frame(s)
relictium.options.allow_direct_memory_access.name=Allow Direct Memory Access
relictium.options.allow_direct_memory_access.tooltip=If enabled, some critical code paths will be allowed to use direct memory access for performance. This often greatly reduces CPU overhead for chunk and entity rendering, but can make it harder to diagnose some bugs and crashes. You should only disable this if you've been asked to or otherwise know what you're doing.
relictium.options.ignore_driver_blacklist.name=Ignore Driver Blacklist
relictium.options.ignore_driver_blacklist.tooltip=If enabled, known incompatibilities with your hardware/driver configuration will be ignored, allowing you to enable options that may cause issues with your game. You should generally not touch this option unless you know exactly what you are doing. After changing this option, you must save, close, and then re-open the settings screen.
relictium.options.enable_memory_tracing.name=Enable Memory Tracing
relictium.options.enable_memory_tracing.tooltip=Debugging feature. If enabled, stack traces will be collected alongside memory allocations to help improve diagnostic information when memory leaks are detected.
relictium.options.performance_impact_string=Performance Impact: %s
relictium.options.use_persistent_mapping.name=Use Persistent Mapping
relictium.options.use_persistent_mapping.tooltip=If enabled, a small amount of memory will be persistently mapped for speeding up chunk updates and entity rendering.\n\nRequires OpenGL 4.4 or ARB_buffer_storage.
relictium.options.chunk_memory_allocator.name=Chunk Memory Allocator
relictium.options.chunk_memory_allocator.tooltip=Selects the memory allocator that will be used for chunk rendering.\n- ASYNC: Fastest option, works well with most modern graphics drivers.\n- SWAP: Fallback option for older graphics drivers. May increase memory usage significantly.
relictium.options.chunk_memory_allocator.async=Async
relictium.options.chunk_memory_allocator.swap=Swap
relictium.options.chunk_update_threads.name=Chunk Update Threads
relictium.options.chunk_update_threads.tooltip=Specifies the number of threads to use for chunk building. Using more threads can speed up chunk loading and update speed, but may negatively impact frame times.
relictium.options.always_defer_chunk_updates.name=Always Defer Chunk Updates
relictium.options.always_defer_chunk_updates.tooltip=If enabled, rendering will never wait for chunk updates to finish, even if they are important. This can greatly improve frame rates in some scenarios, but it may create significant visual lag in the world.
relictium.options.use_no_error_context.name=Use No Error Context
relictium.options.use_no_error_context.tooltip=If enabled, the OpenGL context will be created with error checking disabled. This may slightly improve performance, but it also increases the risk that the game will crash instead of gracefully handling OpenGL errors. You should disable this option if you are experiencing sudden unexplained crashes.
relictium.options.threads.value=%s thread(s)
relictium.options.default=Default
relictium.options.buttons.undo=Undo
relictium.options.buttons.apply=Apply
relictium.options.buttons.donate=Buy coffee for JellySquid!"