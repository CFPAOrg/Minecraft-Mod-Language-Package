relictium.option_impact.low=低
relictium.option_impact.medium=中
relictium.option_impact.high=高
relictium.option_impact.extreme=极高
relictium.option_impact.varies=视情况而定
relictium.options.pages.quality=质量
relictium.options.pages.performance=性能
relictium.options.pages.advanced=级
relictium.options.view_distance.tooltip=渲染距离 - 控制地形的渲染距离。距离越短，地形渲染越少，帧率（FPS）提升越明显。
relictium.options.simulation_distance.tooltip=模拟距离 - 控制地形和实体加载和更新的距离。更短的距离可以减少内部服务器的负载并可以提高帧率（TPS）。
relictium.options.brightness.tooltip=控制游戏的亮度（伽玛值）。
relictium.options.clouds.name=云
relictium.options.clouds.tooltip=云层显示
relictium.options.gui_scale.tooltip=设置要用于用户界面的最大缩放倍率。如果设为“自动（0）”，则始终使用最大的缩放倍率。
relictium.options.fullscreen.tooltip=如果启用，游戏将以全屏显示（如果支持）。
relictium.options.v_sync.tooltip=如果启用，游戏的帧率（FPS）将与显示器的刷新率同步，从而以整体输入延迟为代价获得更流畅的体验。如果你的系统性能较差，此设置反而可能会降低帧率。
relictium.options.fps_limit.tooltip=限制帧率（FPS）。这有助于减少多任务处理时的电池使用量和一般系统负载。如果启用了垂直同步，除非它低于显示器的刷新率，否则将忽略此选项。
relictium.options.view_bobbing.tooltip=如果启用，玩家的视野会在移动时不断摇晃。在游戏时感到晕眩的玩家可以从禁用此功能中受益。
relictium.options.attack_indicator.tooltip=控制攻击指示器在屏幕上的显示位置。
relictium.options.autosave_indicator.tooltip=如果启用，当游戏将存档保存到硬盘时将显示一个提示。
relictium.options.graphics_quality.tooltip=默认图形质量控制一些传统选项，并且是模组兼容性所必需的。如果下面的选项保留为“默认”，则它们将使用此设置。
relictium.options.clouds_quality.tooltip=控制天空中云渲染的质量。
relictium.options.weather_quality.tooltip=控制雨雪效果的质量。
relictium.options.leaves_quality.name=树叶质量
relictium.options.leaves_quality.tooltip=控制树叶的质量。
relictium.options.particle_quality.name=粒子效果
relictium.options.particle_quality.tooltip=控制同一时刻可以出现在屏幕上的最大粒子数。
relictium.options.smooth_lighting.tooltip=控制方块是否平滑光照和渲染。这会略微增加重新构建区块所需的时间，但不会影响帧率（FPS）。
relictium.options.biome_blend.name=生物群系过渡混合
relictium.options.biome_blend.value=%s方块
relictium.options.biome_blend.tooltip=控制用于进行方块着色的生物群系采样的范围。较高的值会大大增加构建区块所需的时间，但画质提升有限
relictium.options.entity_distance.name=实体显示距离
relictium.options.entity_distance.tooltip=控制实体最多可以离玩家多远渲染。较高的值会以帧率（FPS）为代价增加渲染距离。
relictium.options.entity_shadows.tooltip=如果启用，将在生物和其他实体下方渲染简单阴影。
relictium.options.vignette.name=晕影
relictium.options.vignette.tooltip=如果启用，将在玩家的画面上显示晕影效果。除非你的显卡像素填充率有限，否则这不太可能对帧率产生影响。
relictium.options.mipmap_levels.tooltip=控制将用于方块模型纹理的MipMap的数量。较高的值可以更好地渲染远处的方块，但可能会对许多纹理动画的性能产生不利影响。
relictium.options.use_chunk_multidraw.name=使用区块多重绘制
relictium.options.use_chunk_multidraw.tooltip=多重绘制功能可通过减少绘制调用来批量渲染多个区块，从而大幅降低渲染世界时的CPU占用，同时可能提升GPU利用率。该优化可能导致部分显卡驱动兼容性问题，若遇到显示异常可尝试禁用此选项。
relictium.options.use_vertex_objects.name=使用顶点数组对象
relictium.options.use_vertex_objects.tooltip=通过将顶点数据的渲染信息转移至驱动程序处理，可提升运行性能。该功能可使驱动程序更好地优化重复渲染相同物体的性能，通常情况下无需禁用此功能，除非您正在使用不兼容的模组。
relictium.options.use_block_face_culling.name=使用方块面剔除
relictium.options.use_block_face_culling.tooltip=如果启用，则只会渲染面向相机一侧的方块面。这可以在渲染过程的早期消除大量方块面，从而节省GPU上的内存带宽和时间。某些资源包可能会在此选项上出现问题，因此如果你在方块中看到空洞，请尝试禁用它。
relictium.options.use_compact_vertex_format.name=使用紧凑顶点格式
relictium.options.use_compact_vertex_format.tooltip=启用后，将使用更紧凑的顶点格式渲染区块。该模式可显著降低显存占用与带宽需求（对集成显卡尤为有效），但可能因降低顶点位置与纹理坐标属性的精度，导致部分资源包出现冲突（Z-fighting）。
relictium.options.use_fog_occlusion.name=启用雾效遮挡
relictium.options.use_fog_occlusion.tooltip=启用后，被雾效完全遮蔽的区块将停止渲染，从而提升性能。此优化在雾效浓厚时（例如在水下时）效果尤为显著，但可能导致天空与雾效交界处出现视觉瑕疵。
relictium.options.use_entity_culling.name=使用实体剔除
relictium.options.use_entity_culling.tooltip=如果启用，则在渲染期间将跳过确定不在任何可见区块中的实体。这可以通过避免渲染位于地下或墙后的实体来帮助提高性能。
relictium.options.use_particle_culling.name=使用粒子剔除
relictium.options.use_particle_culling.tooltip=如果启用，则只会渲染确定为可见的粒子。当附近有许多粒子时，这可以显著提高帧率。
relictium.options.animate_only_visible_textures.name=仅可见纹理有动画
relictium.options.animate_only_visible_textures.tooltip=如果启用，则只会更新确定为可见的纹理动画。这可以显著提高某些硬件的帧率（FPS），尤其是对于大型的资源包。如果你遇到某些纹理失去动画的问题，请尝试禁用此选项。
relictium.options.translucency_sorting.name=半透明渲染排序
relictium.options.translucency_sorting.tooltip=启用后，半透明方块（如玻璃、水）将按从后到前的顺序正确排序，显著改善多层透明效果渲染质量（推荐搭配光影模组使用）。此功能会额外消耗GPU资源，在复杂建筑场景中建议根据帧率表现动态调整。
relictium.options.cpu_render_ahead_limit.name=CPU预渲染限制
relictium.options.cpu_render_ahead_limit.tooltip=指定CPU可以在GPU上等待完成渲染的最大帧数。非常低或非常高的值都可能会导致帧率（FPS）不稳定。
relictium.options.cpu_render_ahead_limit.value=%s帧
relictium.options.allow_direct_memory_access.name=允许直接内存访问
relictium.options.allow_direct_memory_access.tooltip=如果启用，将允许某些关键代码路径使用直接内存访问来提高性能。这通常会大大减少区块和实体渲染的CPU开销，但会使诊断某些错误和崩溃变得更加困难。只有你被要求这么做或知道你在做什么，才应该禁用它。
relictium.options.ignore_driver_blacklist.name=忽略驱动黑名单
relictium.options.ignore_driver_blacklist.tooltip=如果启用，与您的硬件/驱动程序配置的已知不兼容性将被忽略，从而允许您启用可能导致游戏问题的选项。除非您确切知道自己在做什么，否则通常不应启用此选项。更改此选项后，您必须保存、关闭，然后重新打开设置屏幕。
relictium.options.enable_memory_tracing.name=用内存跟踪
relictium.options.enable_memory_tracing.tooltip=调试功能。如果启用，堆栈跟踪将与内存分配一起收集，以帮助在检测到内存泄漏时改进诊断信息。
relictium.options.performance_impact_string=性能影响：%s
relictium.options.use_persistent_mapping.name=使用持久映射
relictium.options.use_persistent_mapping.tooltip=如果启用，少量内存将被持久映射为区块上传的暂存缓冲区，有助于减少加载或更新区块时的CPU开销和帧时间不稳定。\n需要OpenGL 4.4或ARB_buffer_storage拓展。
relictium.options.chunk_memory_allocator.name=区块内存分配器
relictium.options.chunk_memory_allocator.tooltip=选择将用于区块渲染的内存分配器。\n1、Async：最快，适用于大多数现代图形驱动程序。\n2、Swap：旧图形驱动程序的兼容选项。可能会显著增加内存使用量。
relictium.options.chunk_memory_allocator.async=Async
relictium.options.chunk_memory_allocator.swap=Swap
relictium.options.chunk_update_threads.name=区块更新线程
relictium.options.chunk_update_threads.tooltip=指定用于区块构建的线程数。使用更多线程可以加快区块加载和更新的速度，但可能会对帧时间产生负面影响。
relictium.options.always_defer_chunk_updates.name=始终推迟区块更新
relictium.options.always_defer_chunk_updates.tooltip=如果启用，渲染将永远不会等待区块更新完成，即使它们很重要。这在某些情况下可以极大地提高帧率（FPS），但可能会在游戏时产生明显的视觉滞后。
relictium.options.use_no_error_context.name=禁用OpenGL错误检查
relictium.options.use_no_error_context.tooltip=如果启用，OpenGL上下文将创建时禁用错误检查。这可能会略微提高性能，但也增加了游戏崩溃而不是优雅处理OpenGL错误的风险。如果你遇到突发的无法解释的崩溃，应该禁用此选项。
relictium.options.threads.value=%s线程
relictium.options.default=默认
relictium.options.buttons.undo=撤销
relictium.options.buttons.apply=应用
relictium.options.buttons.donate=给JellySquid买杯咖啡！