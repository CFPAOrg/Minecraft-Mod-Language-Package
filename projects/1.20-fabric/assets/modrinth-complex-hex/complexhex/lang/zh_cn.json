{
  "complexhex.entry.complexities": "复数",
  "hexcasting.action.complexhex:const/complex/i": "虚化常数",
  "complexhex.page.complexities.const.i": "将 0 + 1i 压入栈顶。",
  "hexcasting.action.complexhex:const/complex/1": "实化常数",
  "complexhex.page.complexities.const.1": "将 1 + 0i 压入栈顶。",
  "complexhex.page.complexities.add": "执行加法，num 视作 num + 0i。",
  "complexhex.page.complexities.sub": "执行减法，num 视作 num + 0i。",
  "complexhex.page.complexities.mul": "执行乘法。",
  "complexhex.page.complexities.div": "执行标量除法。",
  "complexhex.page.complexities.abs": "返回模（即模长）。",
  "complexhex.page.complexities.pow": "执行指数运算。",
  "hexcasting.action.complexhex:real": "实化复数",
  "complexhex.page.complexities.real": "返回复数实部。",
  "hexcasting.action.complexhex:imaginary": "虚化复数",
  "complexhex.page.complexities.imaginary": "返回复数虚部。",
  "hexcasting.action.complexhex:conjugate": "共轭之纯化",
  "complexhex.page.complexities.conjugate": "取反栈顶 iota 的虚部。",

  "complexhex.entry.quaternionics": "四元数",
  "hexcasting.action.complexhex:qmake": "四元数之提整",
  "complexhex.page.quaternionics.qmake": "返回一个四元数，其标量部为所给数，i、j、k 的系数分别为所给向量的 x、y、z 值。",
  "hexcasting.action.complexhex:qunmake": "四元数之拆解",
  "complexhex.page.quaternionics.qunmake": "返回一个数和一个向量，数为所给四元数的标量部，向量的 x、y、z 值分别为所给四元数的 i、j、k 的系数。",
  "hexcasting.action.complexhex:const/quaternion/1": "四元数之精思：1",
  "complexhex.page.quaternionics.const.1": "将 1 + 0i + 0j + 0k 压入栈顶。",
  "hexcasting.action.complexhex:const/quaternion/i": "四元数之精思：i",
  "complexhex.page.quaternionics.const.i": "将 0 + 1i + 0j + 0k 压入栈顶。",
  "hexcasting.action.complexhex:const/quaternion/j": "四元数之精思：j",
  "complexhex.page.quaternionics.const.j": "将 0 + 0i + 1j + 0k 压入栈顶。",
  "hexcasting.action.complexhex:const/quaternion/k": "四元数之精思：k",
  "complexhex.page.quaternionics.const.k": "将 0 + 0i + 0j + 1k 压入栈顶。",
  "complexhex.page.quaternionics.add": "执行加法。",
  "complexhex.page.quaternionics.sub": "执行减法。",
  "complexhex.page.quaternionics.mul": "执行乘法。给定一个数和一个四元数，则执行标量乘法；给定两个四元数，则执行四元数乘法。",
  "complexhex.page.quaternionics.div": "执行标量除法。",
  "complexhex.page.quaternionics.abs": "返回模（即模长）。",
  "hexcasting.action.complexhex:qw": "四元数之纯化：1",
  "complexhex.page.quaternionics.qw": "返回 1 的系数。",
  "hexcasting.action.complexhex:qx": "四元数之纯化：i",
  "complexhex.page.quaternionics.qx": "返回 i 的系数。",
  "hexcasting.action.complexhex:qy": "四元数之纯化：j",
  "complexhex.page.quaternionics.qy": "返回 j 的系数。",
  "hexcasting.action.complexhex:qz": "四元数之纯化：k",
  "complexhex.page.quaternionics.qz": "返回 k 的系数。",
  "hexcasting.action.complexhex:qinvert": "四元数逆",
  "complexhex.page.quaternionics.qinvert": "取反 i、j、k 的系数。",
  "hexcasting.action.complexhex:quattomat": "矩阵化",
  "complexhex.page.quaternionics.quattomat": "返回一个矩阵，此矩阵应当与给定四元数代表同一旋转操作。",
  "hexcasting.action.complexhex:mattoquat": "四元数化",
  "complexhex.page.quaternionics.mattoquat": "返回一个四元数，此四元数应当与给定矩阵代表同一旋转操作。",
  "hexcasting.action.complexhex:axisangle": "轴角之馏化",
  "complexhex.page.quaternionics.axisangle": "返回一个四元数，此四元数代表沿所给向量旋转所给数个弧度的旋转操作。",

  "complexhex.tooltip.bubble_contents": "{%s}",
  "complexhex.entry.bubble": "封泡",
  "hexcasting.action.complexhex:bubble": "封泡之纯化",
  "complexhex.page.bubble": "返回一个封泡 iota。在运行（赫尔墨斯之策略等）中弹出此类 iota 时，其会将内部的 iota 压入栈顶。",

  "complexhex.entry.bits": "BIT 操纵",
  "complexhex.page.bitexplainer": "这些图案用于操纵方块、物品、文本展示体（简称 BIT）。$(br2)奇怪之处在于，侦查员之馏化对这些展示体无效，因此必须换用实体之纯化和区域之馏化。",
  "hexcasting.action.complexhex:summonblockdisplay": "召唤方块展示体",
  "complexhex.page.summonblockdisplay": "在给定位置召唤一个方块展示体实体，以展示给定方块。（所给字符串需是内部名称，如“minecraft:dirt”，而非“泥土”。）$(br)消耗大约 1 个$(l:items/amethyst)$(item)充能紫水晶/$。",
  "hexcasting.action.complexhex:summonitemdisplay": "召唤物品展示体",
  "complexhex.page.summonitemdisplay": "在给定位置召唤一个物品展示体实体，以展示给定物品。（所给字符串需是内部名称，如“minecraft:stick”，而非“木棍”。）$(br)消耗大约 1 个$(l:items/amethyst)$(item)充能紫水晶/$。",
  "hexcasting.action.complexhex:summontextdisplay": "召唤文本展示体",
  "complexhex.page.summontextdisplay": "在给定位置召唤一个文本展示体实体，以展示给定字符串。消耗大约 1 个$(l:items/amethyst)$(item)充能紫水晶/$。",
  "hexcasting.action.complexhex:get_entity/bit": "实体之纯化：BIT",
  "complexhex.page.get_entity/bit": "将栈顶位置向量变为该处 BIT（若无则返回 $(l:casting/influences)$(thing)Null/$）。",
  "hexcasting.action.complexhex:zone_entity/bit": "区域之馏化：BIT",
  "complexhex.page.zone_entity/bit": "从栈顶获取位置及最大距离，返回该位置给定距离范围内所有 BIT 的列表。",
  "hexcasting.action.complexhex:zone_entity/not_bit": "区域之馏化：非 BIT",
  "complexhex.page.zone_entity/not_bit": "从栈顶获取位置及最大距离，返回该位置给定距离范围内所有非 BIT 的列表。",
  "hexcasting.action.complexhex:translatebit": "平移 BIT",
  "complexhex.page.translatebit": "以给定偏移量平移 BIT。",
  "hexcasting.action.complexhex:rotatebit": "旋转 BIT",
  "complexhex.page.rotatebit": "以给定四元数旋转 BIT。",
  "hexcasting.action.complexhex:scalebit": "缩放 BIT",
  "complexhex.page.scalebit": "以给定向量缩放 BIT。",
  "hexcasting.action.complexhex:killbit": "清除 BIT",
  "complexhex.page.killbit": "清理并移除给定 BIT。",

  "complexhex.mishap.bad_string.blockid": "一个方块ID",
  "complexhex.mishap.bad_string.itemid": "一个物品ID",
  "hexcasting.mishap.bad_string": "本应提供%s，而实际为%s",
  "hexcasting.mishap.invalid_value.class.quaternion": "一个四元数",
  "hexcasting.mishap.invalid_value.class.complexnumber": "一个复数",
  "hexcasting.mishap.invalid_value.class.bubble": "一个封泡",
  "hexcasting.mishap.invalid_value.class.bit": "一个BIT",
  "hexcasting.mishap.invalid_value.class.long": "一个长整型",
  "hexcasting.mishap.invalid_value.not_char": "一个字符",
  "hexcasting.mishap.invalid_value.char_or_num": "一个字符或数",
  "hexcasting.mishap.bad_item.bit": "一个BIT",

  "complexhex.category.maths": "Complex Hex 数学",
  "complexhex.category.maths.desc": "这里收录了来自“数学军团”（现已解散）的文件记录。我不太清楚它们的具体用途，不过我确实$(o)想$()知道研究者们写下它们时究竟在研究什么。",

  "complexhex.entry.longs": "长整型",
  "complexhex.page.longs.intro": "虽然以$(l:patterns/numbers)双精度$()形式存在的普通数适用于绝大多数场景，但也有不少情况会精度不够。$(br)为解决这一问题，可以使用$(thing)长整型$()。长整型虽然有其局限（只能存储整数，最大值较小），也还是会因为许多原因得到运用：粒度小，进行位操作不会损失精度。",
  "hexcasting.action.complexhex:long": "长整型之精思",
  "complexhex.page.longs.special": "和普通的数一样，自然也没好心到给出对我们来说足够简单的创建方法。$(br)（详情见后页）",
  "complexhex.page.longs.special.explanation": "好在，各个笔画方向的意义与普通数很相似，两者间的差别在于：$(li)向左下方的笔画执行左移（相当于乘 2）$(li)向右下方的笔画执行右移（相当于除以 2*）$(p)$(p)* 由于长整型无法存储小数，所得值会取底。",
  "complexhex.page.longs.example.43.header": "示例：43L",
  "complexhex.page.longs.example.43": "此图案会返回 43L：(10 + 10 + 1) * 2 + 1 = 43",
  "hexcasting.action.complexhex:long/convert": "长整型之纯化",
  "complexhex.page.longs.convert": "来回转换$(l:patterns/numbers)双精度$()数和$(thing)长整型$()数。$(br)转换至长整型时会进行截尾。",
  "complexhex.page.longs.add": "执行加法。",
  "complexhex.page.longs.sub": "执行减法。",
  "complexhex.page.longs.mul": "执行乘法。",
  "complexhex.page.longs.div": "执行取底整除。",
  "complexhex.page.longs.and": "执行按位与。",
  "complexhex.page.longs.or": "执行按位或。",
  "complexhex.page.longs.not": "执行按位非。",
  "complexhex.page.longs.xor": "执行按位异或。",
  "hexcasting.action.complexhex:shift/left": "左移之馏化",
  "complexhex.page.longs.lshift": "将所有位左移 num 次。",
  "hexcasting.action.complexhex:shift/right/logical": "逻辑右移之馏化",
  "complexhex.page.longs.rshift.logical": "将所有位右移 num 次。",
  "hexcasting.action.complexhex:shift/right/arithmetic": "算术右移之馏化",
  "complexhex.page.longs.rshift.arithmetic": "将所有位右移 num 次，且保留符号。",

  "complexhex.entry.misc": "Complex Hex 杂项",

  "hexcasting.action.complexhex:ascii": "UTF 之纯化",
  "complexhex.page.misc.ascii": "将串中的$(italics)字符$()转换为代表该字符的数，也可反方向转换。$(br)使用 $(thing)UTF-16$() 字符编码表。",

  "complexhex.entry.expressions": "表达式",
  "hexcasting.action.complexhex:new_symbol": "符号之纯化",
  "complexhex.page.expressions.new": "使用所给标签（单个字符）创建新符号。",
  "complexhex.page.expressions.ops": "许多适用于数的运算符也适用于表达式。$(br)完整列表为：加法、减法、乘法、除法、乘方、绝对值、取底、取顶、正弦、余弦、正切、反正弦、反余弦、反正切、atan2、对数、取模（余数）。",
  "hexcasting.action.complexhex:substitute": "代入之提整",
  "complexhex.page.expressions.substitute": "将第三参数的表达式或数代入到第一参数中第二参数出现的位置。",
  "hexcasting.action.complexhex:summon/line": "参数曲线",
  "complexhex.page.expressions.summon.line": "在给定位置召唤一个参数曲线。给定表达式中 t 的值在 0 到 1 间变化，x、y、z 对应位置，w 对应时间。以上符号代入后所得的点构成了参数曲线。",
  "hexcasting.action.complexhex:summon/surface": "参数曲面",
  "complexhex.page.expressions.summon.surface": "在给定位置召唤一个参数曲面。给定表达式中 u 和 v 的值均在 0 到 1 间变化，x、y、z 对应位置，w 对应时间。以上符号代入后所得的点构成了参数曲面。",
  "complexhex.page.expressions.kill": "两种参数对象均可通过$(l:patterns/great_spells/bits#complexhex:killbit)$(action)清除 BIT/$ 图案消灭。",


  "entity.complexhex.parametric.line": "参数曲线",
  "entity.complexhex.parametric.surface": "参数曲面"

}
