{
	"hexcasting.mishap.invalid_value.class.display": "a display iota",
	"hexcasting.mishap.invalid_value.class.identifier": "an identifier",
	"hexcasting.mishap.invalid_value.class.item_stack":	"an item stack",
	"hexcasting.mishap.invalid_value.boolean_or_null": "a boolean or null",
	"hexcasting.mishap.invalid_value.cat": "a cat",
	"hexcasting.mishap.invalid_value.creeper": "a creeper",
	"hexcasting.mishap.invalid_value.display_list": "a list of display iotas",
	"hexcasting.mishap.invalid_value.painting": "a painting",
	"hexcasting.mishap.invalid_value.item_frame": "an item frame",
    "hexcasting.mishap.invalid_value.block_id": "an identifier of a block type",
	"hexcasting.mishap.invalid_value.entity_id": "an identifier of an entity type",
	"hexcasting.mishap.invalid_value.enchantment_id": "an identifier of an enchantment type",
	"hexcasting.mishap.invalid_value.food_id": "an identifier of a food item type",
	"hexcasting.mishap.invalid_value.identifiable": "an identifiable target",
	"hexcasting.mishap.invalid_value.item_id": "an identifier of an item type",
	"hexcasting.mishap.invalid_value.number_or_null": "a number or null",
	"hexcasting.mishap.invalid_value.status_effect_id": "an identifier of a status effect type",
	"hexcasting.mishap.invalid_value.entity_or_vector": "an entity or a vector",
	"hexcasting.mishap.invalid_value.lenient_living": "a living entity or an armor stand",
	"hexcasting.mishap.invalid_value.media_holding": "a media holding item or entity",
	"hexcasting.mishap.invalid_value.potion_holding": "a potion holding item or entity",
	"hexcasting.mishap.invalid_value.tamable": "a tameable entity",
	"hexcasting.mishap.invalid_value.vector_or_null": "a vector or null",

	"hexpose.item_stack.format": " | %s (%d)",
	"hexpose.item_stack.null": "Null Item",

	"hexcasting.action.book.hexpose:get_effect_amplifier": "Concentration Dstl.",
	"hexcasting.action.book.hexpose:get_effects_item": "Prescription Purif.",
	"hexcasting.action.book.hexpose:get_enchantments": "Thaumaturgist's Purif.",
	"hexcasting.action.book.hexpose:breedable": "Reproduction Purif.",
	"hexcasting.action.book.hexpose:theodolite": "Theodolite Purif.",
	"hexcasting.action.book.hexpose:get_air": "Suffocation Purif.",
	"hexcasting.action.book.hexpose:is_wet": "Enderman's Purif.",
	"hexcasting.action.book.hexpose:identify": "Detective's Purif.",
	"hexcasting.action.book.hexpose:damage_stack": "Deterioration Purif.",
	"hexcasting.action.book.hexpose:book_source": "Bibliography Purif.",
	"hexcasting.action.book.hexpose:classify": "Modicum Purif.",
	"hexcasting.action.book.hexpose:villager_profession": "Professional Purif.",
	"hexcasting.action.book.hexpose:get_biome": "Geographical Purif.",
	"hexcasting.action.book.hexpose:get_weather": "Meterologist's Refl.",

	"hexpose.page.enlightened_patterns.title": "Enlightened Patterns",
	"hexpose.page.enlightened_patterns.0": "After $(thing)Enlightenment$(), I find myself acutely aware of certain patterns that aid with my newfound abilities. These patterns don't seem to require anything from me that I didn't have before; perhaps I was always able to cast them but was simply unaware of their existence. An unenlightened player will be able to use $(l:items/hexcasting)$(item)casting devices$() with these patterns.",
	"hexcasting.action.hexpose:am_enlightened": "Epiphany Purification",
	"hexpose.page.am_enlightened.summary": "Pushes whether the given player has achieved $(thing)Enlightenment$().",
	"hexcasting.action.hexpose:is_brainswept": "Sentience Purification",
	"hexpose.page.is_brainswept.summary": "Pushes whether an entity has been \"magically relieved of its mind\". I feel this is strongly related to $(l:patterns/great_spells/brainsweep)$(action)Flay Mind$() somehow...",

	"hexpose.page.display_iotas.title": "Display Iota",
	"hexpose.page.display_iotas.0": "$(l:patterns/displays)$(thing)Display iotas$() encode stylized text using a recursive model. The iota holds text, styling for that text, $(o)and$() other child $(l:patterns/displays)$(thing)display iotas$(), which may themselves contain children and have differing styles than the parent. Children are appended sequentially after the parent.",
	"hexpose.page.display_iotas.1": "The properties of the parent's style propagate down to their children, provided the child has an unset value for that property. For example, the children of a red-colored $(l:patterns/displays)$(thing)display iota$() will be red, unless a child has a style for another color. That second color is then the color that gets passed down to $(o)its$() children.",
	"hexcasting.action.hexpose:create_display": "Reading Purification",
	"hexpose.page.create_display.summary": "Takes an iota and returns a $(l:patterns/displays)$(thing)display iota$() representing it. If taking a $(l:patterns/displays)$(thing)display iota$(), strips all the styles of it.",
	"hexpose.page.display_iotas.2": "The patterns that interact with $(l:patterns/displays)$(thing)display iotas$() are strangely multifaceted. While resembling distillations, they are actually $(o)gambits$().$(br2)If their described arguments are passed in, they modify the $(l:patterns/displays)$(thing)display iota$()'s root according to their speciality (example of modification included).$(br2)If the top of the stack is just a $(l:patterns/displays)$(thing)display iota$() however, they push the current value of the setting that they target.",
	"hexcasting.action.hexpose:display_children": "Parsing Purification",
	"hexpose.page.display_children.summary": "Gets or sets a list of $(l:patterns/displays)$(thing)display iotas$() corresponding to children of the $(l:patterns/displays)$(thing)display iota$().",
	"hexcasting.action.hexpose:display_color": "Lumi√®re Gambit",
	"hexpose.page.display_color.summary": "Gets or sets a color encoded as a vector whose components range from 0 to 1. Pass in $(l:casting/influences)$(thing)Null$() to defer to parent.",
	"hexcasting.action.hexpose:display_font": "Calligrapher's Gambit",
	"hexpose.page.display_font.summary": "Gets or sets a number, corresponding to the font a text is drawn in. Pass in $(l:casting/influences)$(thing)Null$() to defer to parent.",
	"hexpose.page.display_font.description": "0, 1, and 2 are the current fonts that I know of, corresponding to standard appearance, the runes I see surrounding an $(thing)Enchanting Table$(), and a strange variant of it that is allegedly used by ancient villagers.",
	"hexcasting.action.hexpose:display_bold": "Gothic Gambit",
	"hexpose.page.display_bold.summary": "Gets or sets a boolean, corresponding to whether it is $(l)bold$(). Pass in $(l:casting/influences)$(thing)Null$() to defer to parent.",
	"hexcasting.action.hexpose:display_italics": "Manutius' Gambit",
	"hexpose.page.display_italics.summary": "Gets or sets a boolean, corresponding to whether it is in $(o)italics$(). Pass in $(l:casting/influences)$(thing)Null$() to defer to parent.",
	"hexcasting.action.hexpose:display_underline": "Notetaker's Gambit",
	"hexpose.page.display_underline.summary": "Gets or sets a boolean, corresponding to whether it is $(n)underlined$(). Pass in $(l:casting/influences)$(thing)Null$() to defer to parent.",
	"hexcasting.action.hexpose:display_strikethrough": "Editor's Gambit",
	"hexpose.page.display_strikethrough.summary": "Gets or sets a boolean, corresponding to whether it has been $(m)struck through$(). Pass in $(l:casting/influences)$(thing)Null$() to defer to parent.",
	"hexcasting.action.hexpose:display_obfuscated": "Censor's Gambit",
	"hexpose.page.display_obfuscated.summary": "Gets or sets a boolean, corresponding to whether it is obfusca$(k)ted$(). Pass in $(l:casting/influences)$(thing)Null$() to defer to parent.",

	"hexpose.page.displays_mani.title": "Display Iota Manipulation",
	"hexcasting.action.hexpose:compare_style": "Stylistic Distillation",
	"hexpose.page.compare_style.summary": "Returns whether the two $(l:patterns/displays)$(thing)display iotas$() have the same style.",
	"hexcasting.action.hexpose:parse_display": "Calculator Purification",
	"hexpose.page.parse_display.summary": "Returns the number the $(l:patterns/displays)$(thing)display iota$()'s root says, or $(l:casting/influences)$(thing)Null$() if it can not be determined.",
	"hexcasting.action.hexpose:split_display": "Cleaving Distillation",
	"hexpose.page.split_display.summary": "$(br)Uses the second $(l:patterns/displays)$(thing)display iota$() as a delimiter to slice up the first into a list of $(l:patterns/displays)$(thing)display iotas$(). The elements do not retain their children.",
	"hexcasting.action.hexpose:disintegrate_display": "Streaming Purification",
	"hexpose.page.disintegrate_display.summary": "Transforms a $(l:patterns/displays)$(thing)display iota$() into a long stream of styled single characters for parsing purposes, including its children.",
	"hexpose.page.displays_mani.0": "A number of common patterns also work on $(l:patterns/displays)$(thing)display iota$(), listed afterwards. However, it is worth noting that these patterns only operate on the \"root\" text, that is the textual content of the highest level; it will not for instance include the added length of children when determining length, nor reverse the text of children.",
	"hexpose.page.abs_text.summary": "Returns the length of the $(l:patterns/displays)$(thing)display iota$()'s text.",
	"hexpose.page.append_text.summary": "Adds the second $(l:patterns/displays)$(thing)display iota$() as a child of the first $(l:patterns/displays)$(thing)display iota$().",
	"hexpose.page.unappend_text.summary": "Removes the last child from the provided $(l:patterns/displays)$(thing)display iota$() and returns the shortened $(l:patterns/displays)$(thing)display iota$() and the child.",
	"hexpose.page.add_text.summary": "Append the second's text to the first's. Keeps the style of the first.",
	"hexpose.page.mul_text.summary": "Returns a copy with the provided $(l:patterns/displays)$(thing)display iota$()'s text repeated.",
	"hexpose.page.index_text.summary": "Returns the single character at the given position of the $(l:patterns/displays)$(thing)display iota$()'s text and keeps children.",
	"hexpose.page.slice_text.summary": "$(br)Extracts a range from the $(l:patterns/displays)$(thing)display iota$()'s text and keeps children.",
	"hexpose.page.replace_text.summary": "$(br)Replaces a single character from the $(l:patterns/displays)$(thing)display iota$()'s text with a potentially larger string and keeps children.",
	"hexpose.page.remove_text.summary": "Removes a single character from the $(l:patterns/displays)$(thing)display iota$()'s text and keeps children.",
	"hexpose.page.rev_text.summary": "Reverses the $(l:patterns/displays)$(thing)display iota$()'s text and keeps children.",

	"hexpose.page.special_raycasts.title": "Special Raycasts",
	"hexcasting.action.hexpose:fluid_raycast": "Dousing Distillation",
	"hexpose.page.fluid_raycast.summary": "Works similar to $(l:patterns/basics#hexcasting:raycast)$(action)Archer's Distillation$() but targets only liquids, piercing through all other blocks.",
	"hexcasting.action.hexpose:fluid_surface_raycast": "Lilypad Distillation",
	"hexpose.page.fluid_surface_raycast.summary": "Works similar to $(l:patterns/basics#hexcasting:raycast/axis)$(action)Architect's Distillation$() but targets only liquids, piercing through all other blocks.",
	"hexcasting.action.hexpose:piercing_raycast": "Railgun Exaltation",
	"hexpose.page.piercing_raycast.summary": "Works similar to $(l:patterns/basics#hexcasting:raycast)$(action)Archer's Distillation$() but accepts an additional identifier. It will pierce all blocks until it hits the block specified by the identifier.",
	"hexcasting.action.hexpose:piercing_surface_raycast": "Laser Exaltation",
	"hexpose.page.piercing_surface_raycast.summary": "Works similar to $(l:patterns/basics#hexcasting:raycast/axis)$(action)Architect's Distillation$() but accepts an additional identifier. It will pierce all blocks until it hits the block specified by the identifier.",

	"hexpose.category.scrying": "Scrying",
	"hexpose.category.scrying.desc": "I have stumbled upon a branch of manipulating _media entirely focused around information about the world.$(br2)While likely not useful for the majority of _Hexes, these will be convenient to have, should I ever need them.",

	"hexpose.page.blocks.title": "Blocks",
	"hexcasting.action.hexpose:block_hardness": "Miner's Purification",
	"hexpose.page.block_hardness.summary": "Pushes how difficult blocks of this type are to mine.",
	"hexcasting.action.hexpose:block_blast_resistance": "Demoman's Purification",
	"hexpose.page.block_blast_resistance.summary": "Pushes how resistant blocks of this type are to explosions.",
	"hexcasting.action.hexpose:blockstate_rotation": "Orientation Purification",
	"hexpose.page.blockstate_rotation.summary": "Pushes the vector of the block's facing direction, or $(l:casting/influences)$(thing)Null$() if blocks of its type do not have an orientation.",
	"hexcasting.action.hexpose:blockstate_crop": "Farmer's Purification",
	"hexpose.page.blockstate_crop.summary": "Pushes a number 0 to 1 corresponding to the growth progress of that block. Works for crops, $(item)Beehives$(), $(item)Composters$(), $(item)Cauldrons$(), and strangely $(item)Cakes$() too.",
	"hexpose.page.get_blockstates.description":
	"Every block has a list of $(o)facets$(): simple aspects that distinguish them from other blocks of the same type. For example, orientation, how far along a crop is to growing, and whether a door is open or shut are all facets.$(br2)Nature provides two patterns that allow _Hexcasting to read and analyze facets of any blocks within ambit.",
	"hexcasting.action.hexpose:get_blockstates": "Facet Purification",
	"hexpose.page.get_blockstates.summary": "Pushes a list of all facets of that block.",
	"hexcasting.action.hexpose:query_blockstate": "Facet Distillation",
	"hexpose.page.query_blockstate.summary": "Takes a block and a facet and pushes that facet's value.",
	"hexpose.page.query_blockstate.description": "If the block does not have the given facet, the pattern pushes $(l:casting/influences)$(thing)Null$(). For the most part, it is quite intuitive: the pattern produces booleans, directional vectors, and integers, whichever matches the facet best.$(br2)For certain facets that deal with a state among a variety of them, it will produce a seemingly random yet consistent integer. If a facet is too alien, a senseless iota is produced.",
	"hexcasting.action.hexpose:block_map_color": "Cartographer's Purification",
	"hexpose.page.block_map_color.summary": "Pushes the color blocks of this type appear as on a map.",

	"hexpose.page.chat.title": "Chat",
	"hexcasting.action.hexpose:get_message": "News Reflection",
	"hexpose.page.get_message.summary": "Pushes a $(l:patterns/displays)$(thing)display iota$() of the last person to use chat, a $(l:patterns/displays)$(thing)display iota$() of the message, and a number of twenieths of a second since that message sent.",
	"hexcasting.action.hexpose:get_chat": "Newspaper Reflection",
	"hexpose.page.get_chat.summary": "Applies $(l:patterns/scrying/chat#hexpose:get_message)$(action)News Reflection$() to the last up to 32 messages in chat, wraps each in a list, and pushes a list of those lists.",

	"hexpose.page.entities.title": "Entities",
	"hexcasting.action.hexpose:entity_width": "Caliper's Purification",
	"hexpose.page.entity_width.summary": "Similar to $(l:patterns/basics#hexcasting:get_entity_height)$(action)Stadiometer's Purification$() but pushes the width of an entity rather than its height.",
	"hexcasting.action.hexpose:theodolite": "Theodolite's Purification",
	"hexpose.page.theodolite.summary": "Similar to $(l:patterns/basics#hexcasting:get_entity_look)$(action)Alidade's Purification$() but pushes the vector that points upwards from their head rather than the entity's facing vector.",
	"hexcasting.action.hexpose:get_health": "Vitality Purification",
	"hexpose.page.get_health.summary": "Pushes how close an entity is to death. I can think of these in terms of half-hearts.",
	"hexcasting.action.hexpose:get_max_health": "Fitness Purification",
	"hexpose.page.get_max_health.summary": "Pushes how much health an entity can have at its prime. I can think of these in terms of half-hearts.",
	"hexcasting.action.hexpose:get_air": "Suffocation Purification",
	"hexpose.page.get_air.summary": "Pushes the number of seconds before an entity will start to suffocate. This applies to marine creatures out of water as well as land creatures in water.",
	"hexcasting.action.hexpose:get_max_air": "Lung Purification",
	"hexpose.page.get_max_air.summary": "Pushes the number of seconds a regular entity of that type can last outside their normal breathing environment before they start suffocating.",
	"hexcasting.action.hexpose:burning": "Inferno Purification",
	"hexpose.page.burning.summary": "Pushes the number of seconds the burning entity will continue burning if not put out. -1 if the entity is not burning currently.",
	"hexcasting.action.hexpose:is_wet": "Enderman's Purification",
	"hexpose.page.is_wet.summary": "Pushes whether the entity is touching rain, water, or in a bubble column.",
	"hexcasting.action.hexpose:is_baby": "Youth Purification",
	"hexpose.page.is_baby.summary": "Pushes whether a living creature is a baby. Also works on $(item)Armor Stands$() oddly.",
	"hexcasting.action.hexpose:breedable": "Reproduction Purification",
	"hexpose.page.breedable.summary": "Pushes whether an animal creature is in love and ready to mate, or $(l:casting/influences)$(thing)Null$() if that creature is not capable of that type of reproduction.",
	"hexcasting.action.hexpose:is_sleeping": "Sloth's Purification",
	"hexpose.page.is_sleeping.summary": "Pushes whether the $(item)Player$(), $(item)Cat$(), $(item)Fox$(), or other entity is sleeping.",
	"hexcasting.action.hexpose:is_sprinting": "Racer's Purification",
	"hexpose.page.is_sprinting.summary": "Pushes whether the $(item)Player$(), $(item)Cat$(), $(item)Fox$(), or other entity is sprinting. Swimming and leaving the ground after starting to sprint are still included.",
	"hexcasting.action.hexpose:entity_vehicle": "Vehicle Purification",
	"hexpose.page.entity_vehicle.summary": "Pushes the entity the given entity is riding or $(l:casting/influences)$(thing)Null$() if it is not riding in or on anything.",
	"hexcasting.action.hexpose:entity_passengers": "Jockey Purification",
	"hexpose.page.entity_passengers.summary": "Pushes a list of entities that are riding the given entity.",
	"hexcasting.action.hexpose:shooter": "Shooter Purification",
	"hexpose.page.shooter.summary": "Pushes the shooter of the given projectile entity or $(l:casting/influences)$(thing)Null$() if it has no shooter or isn't a projectile. It also pushes $(l:casting/influences)$(thing)Null$() if the shooter is outside my ambit.",
	"hexcasting.action.hexpose:pet_owner": "Adoration Purification",
	"hexpose.page.pet_owner.summary": "Pushes the player that has tamed this animal, or $(l:casting/influences)$(thing)Null$() if it is untamed or the player is out of ambit.",
	"hexcasting.action.hexpose:entity_name": "Name Purification",
	"hexpose.page.entity_name.summary": "Pushes a $(l:patterns/displays)$(thing)display iota$() with the formatted name of the entity.",
	"hexcasting.action.hexpose:absorption_hearts": "Absorption Purification",
	"hexpose.page.absorption_hearts.summary": "Pushes the number of magical hearts this player has. I can think of these in terms of half-hearts.",

	"hexpose.page.environment.title": "Environment",
	"hexpose.page.environment.0": "These patterns are meta: they concern properties of the magical environment they are cast in. Mostly useful in avoiding $(l:casting/mishaps)$(thing)mishaps$().",
	"hexcasting.action.hexpose:env_ambit": "Ambit Purification",
	"hexpose.page.env_ambit.summary": "Pushes whether a location or entity is in ambit.",
	"hexcasting.action.hexpose:env_staff": "Staff Reflection",
	"hexpose.page.env_staff.summary": "Pushes whether a $(l:items/staff)$(item)Staff$() is being used to cast this pattern.",
	"hexcasting.action.hexpose:env_offhand": "Dexterity Reflection",
	"hexpose.page.env_offhand.summary": "Pushes whether the dominant hand of the caster is being used to cast this pattern. May return strange results for casters without hands.",
	"hexcasting.action.hexpose:env_packaged_hex": "Device Reflection",
	"hexpose.page.env_packaged_hex.summary": "Pushes whether any form of $(l:items/hexcasting)$(item)casting device$() is being used to cast this pattern.",
	"hexcasting.action.hexpose:env_circle": "Constructed Reflection",
	"hexpose.page.env_circle.summary": "Pushes whether some form of $(l:greatwork/spellcircles)$(thing)$(o)grand work$() is being used to cast this pattern.",

	"hexpose.page.food.title": "Food",
	"hexcasting.action.hexpose:get_player_hunger": "Hunger Purification",
	"hexpose.page.get_player_hunger.summary": "Pushes how full a $(item)Player$() is. I can think of this in terms of half-hunches.",
	"hexcasting.action.hexpose:get_player_saturation": "Stamina Purification",
	"hexpose.page.get_player_saturation.summary": "Pushes a $(item)Player$()'s saturation, which roughly correlates to how long the $(item)Player$() will remain full.",
	"hexcasting.action.hexpose:edible": "Edibility Purification",
	"hexpose.page.edible.summary": "Takes in an item identifier and pushes whether I can eat it.",
	"hexcasting.action.hexpose:get_hunger": "Calorie Purification",
	"hexpose.page.get_hunger.summary": "Takes in an item identifier and pushes the amount it will fill me.",
	"hexcasting.action.hexpose:get_saturation": "Satiation Purification",
	"hexpose.page.get_saturation.summary": "Takes in an item identifier and pushes the saturation value, which roughly affects how long it will fill me.",
	"hexcasting.action.hexpose:is_meat": "Flesh Purification",
	"hexpose.page.is_meat.summary": "Takes in an item identifier and pushes whether it's considered a meat. $(item)Wolves$() can eat meats.",
	"hexcasting.action.hexpose:is_snack": "Dessert Purification",
	"hexpose.page.is_snack.summary": "Takes in an item identifier and pushes whether it's a snack.",

	"hexpose.page.identifiers.title": "Identifiers",
	"hexpose.page.identifiers.0": "The identifier iota is Nature's solution to allowing _Hexes to specifically identify types. Every type of entity, block, status effect, enchantment, sound, and more has a unique identifier attached which a _Hex can retrieve and compare.",
	"hexcasting.action.hexpose:identify": "Detective's Purification",
	"hexpose.page.identify.summary": "Pushes the identifier of an entity, block at a vector, or item stack iota.",
	"hexcasting.action.hexpose:classify": "Modicum Purification",
	"hexpose.page.classify.summary": "Pushes the identifier of an iota's type. Can be used to determine whether two iota are the same type.",

	"hexpose.page.item.title": "Items",
	"hexpose.page.item.0": "An item iota holds nearly all information that distinguish a stack of items from another and _Hexes can use them to query specifics. There is one exception: an item iota loses any item iota contained within the item. The already intricate folds of _media that form item iota simply unravel when nested within even more layers of abstraction.",
	"hexpose.page.item.1": "$(item)Players$() manipulate _media idly just as a byproduct of being sentient. This aura of _media is mostly inert but strikes back, often violently at attempts of in-depth scrying. Externally exposed items such as armor and held items can be spied on, but attempts to deeply analyze their inventory will fail.$(br2)Nature respects boundaries.",
	"hexcasting.action.hexpose:get_stack": "Item Purification",
	"hexpose.page.get_stack.summary": "Pushes the item that an $(item)Item$() in the world is.",
	"hexcasting.action.hexpose:create_stack": "Offer Distillation",
	"hexpose.page.create_stack.summary": "Creates an item iota from an item identifier and the number of items in the stack.",
	"hexcasting.action.hexpose:get_mainhand": "Tool Purification",
	"hexpose.page.get_mainhand.summary": "Returns the item in the entity's mainhand.",
	"hexcasting.action.hexpose:get_offhand": "Accessory Purification",
	"hexpose.page.get_offhand.summary": "Returns the item in the entity's offhand.",
	"hexcasting.action.hexpose:get_inventory": "Cart Purification",
	"hexpose.page.get_inventory.summary": "Returns a list of all items the entity is carrying, or $(l:casting/influences)$(thing)Null$() if the entity can not hold items. Trying to access another $(item)Player$()'s inventory will incur a mishap.",
	"hexcasting.action.hexpose:get_block_inventory": "Chest Purification",
	"hexpose.page.get_block_inventory.summary": "Returns a list of all items in the container, or $(l:casting/influences)$(thing)Null$() if the block can not contain items.",
	"hexcasting.action.hexpose:get_armor": "Aegis Purification",
	"hexpose.page.get_armor.summary": "Returns a list of all items the entity is wearing, from feet up.",
	"hexcasting.action.hexpose:get_ender_chest": "Pocket Reflection",
	"hexpose.page.get_ender_chest.summary": "Returns a list of all items in my ender chest.",
	"hexcasting.action.hexpose:count_stack": "Storage Purification",
	"hexpose.page.count_stack.summary": "Takes in an item and pushes how many items are in it.",
	"hexcasting.action.hexpose:count_max_stack": "Warehouse Purification",
	"hexpose.page.count_max_stack.summary": "Takes in an item and pushes how many items that can stack in it.",
	"hexcasting.action.hexpose:damage_stack": "Deterioration Purification",
	"hexpose.page.damage_stack.summary": "Takes in an item and pushes how much damage the item has sustained.",
	"hexcasting.action.hexpose:damage_max_stack": "Fragility Purification",
	"hexpose.page.damage_max_stack.summary": "Takes in an item and pushes how much durability the item can have at its peak.",
	"hexcasting.action.hexpose:get_enchantments": "Thaumaturgist's Purification",
	"hexpose.page.get_enchantments.summary": "Gets a list of enchantments the item has.",
	"hexcasting.action.hexpose:get_enchantment_strength": "Charm Distillation",
	"hexpose.page.get_enchantment_strength.summary": "Gets the strength of the specific enchantment on the item.",
	"hexcasting.action.hexpose:item_name": "Appellation Purification",
	"hexpose.page.item_name.summary": "Gets the name given to this item.",
	"hexcasting.action.hexpose:item_lore": "Legacy Purification",
	"hexpose.page.item_lore.summary": "Gets the lore written into this item.",
	"hexcasting.action.hexpose:item_variant": "Glamour Purification",
	"hexpose.page.item_variant.summary": "If this item is subceptible to $(l:patterns/spells/cyclevariant)$(action)Caster's Glamour$(), pushes the index of the current form it's taking on. Otherwise pushes $(l:casting/influences)$(thing)Null$().",
	"hexcasting.action.hexpose:item_variant_max": "Glamour Purification II",
	"hexpose.page.item_variant_max.summary": "If this item is subceptible to $(l:patterns/spells/cyclevariant)$(action)Caster's Glamour$(), pushes the number of forms it's capable of. Otherwise pushes $(l:casting/influences)$(thing)Null$().",
	"hexcasting.action.hexpose:read_book": "Literature Purification",
	"hexpose.page.read_book.summary": "Pushes a list of $(l:patterns/displays)$(thing)display iotas$() contained inside a book or $(l:casting/influences)$(thing)Null$() if it isn't a book.",
	"hexcasting.action.hexpose:book_sources": "Bibliography Purification",
	"hexpose.page.book_sources.summary": "Pushes the author of a book and its generation number.",
	"hexcasting.action.hexpose:item_rarity": "Collector Purification",
	"hexpose.page.item_rarity.summary": "Gauges the rarity of an item as a number, with greater values corresponding to a rarer item. Certain aspects such as enchantments can also elevate an item's rarity.",

	"hexpose.page.media.title": "Media",
	"hexcasting.action.hexpose:env_media": "Media Reflection",
	"hexpose.page.env_media.summary": "Pushes the _media available to the current cast.",
	"hexcasting.action.hexpose:get_media": "Media Purification",
	"hexpose.page.get_media.summary": "Pushes the amount of _media inside an item, that a creature contains or holds, or that a specialized _media-holding block contains.",
	"hexcasting.action.hexpose:media_max_stack": "Potential Purification",
	"hexpose.page.media_max_stack.summary": "Takes in an item and pushes either $(l:casting/influences)$(thing)Null$() if the item does not have any _media-holding potential, or the amount of _media it is capable of holding at its peak.",

	"hexpose.page.status_effects.title": "Status Effects",
	"hexcasting.action.hexpose:get_effects_entity": "Diagnosis Purification",
	"hexpose.page.get_effects_entity.summary": "Pushes a list of status effects the entity is afflicted with.",
	"hexcasting.action.hexpose:get_effects_item": "Prescription Purification",
	"hexpose.page.get_effects_item.summary": "Pushes a list of status effects the food or potion will bestow.",
	"hexcasting.action.hexpose:get_effect_category": "Condition Purification",
	"hexpose.page.get_effect_category.summary": "Pushes the general \"goodness\" of the effect towards the afflicted. -1 for harmful, 0 for neutral, and 1 for beneficial.",
	"hexcasting.action.hexpose:get_effect_amplifier": "Concentration Distillation",
	"hexpose.page.get_effect_amplifier.summary": "Pushes how potent the effect type is acting on the entity or $(l:casting/influences)$(thing)Null$() if the entity doesn't have it.",
	"hexcasting.action.hexpose:get_effect_duration": "Clearance Distillation",
	"hexpose.page.get_effect_duration.summary": "Pushes how long the effect type will affect the entity in twentieths of a second or $(l:casting/influences)$(thing)Null$() if the entity doesn't have it.",

	"hexpose.page.villager.title": "Villagers",
	"hexcasting.action.hexpose:villager_level": "Tier Purification",
	"hexpose.page.villager_level.summary": "Pushes how advanced a villager is as a number, encoding mastery of their craft.",
	"hexcasting.action.hexpose:villager_profession": "Professional Purification",
	"hexpose.page.villager_profession.summary": "Pushes the profession of a villager as an identifier",
	"hexcasting.action.hexpose:villager_type": "Culture Purification",
	"hexpose.page.villager_type.summary": "Pushes the ambient cultural aspect tied to the villager‚Äôs origin, such as desert or taiga roots.",
	"hexcasting.action.hexpose:biome_to_villager": "Nurture Purification",
	"hexpose.page.biome_to_villager.summary": "Projects the villager archetype most attuned to the essence of the specified biome, or $(l:casting/influences)$(thing)Null$() if none can be drawn.",

	"hexpose.page.world.title": "World",
	"hexcasting.action.hexpose:get_light": "Luminance Purification",
	"hexpose.page.get_light.summary": "Pushes the light level at the position as a number 0 to 15. If inside a nontransparent block, it returns zero.",
	"hexcasting.action.hexpose:get_weather": "Meterologist's Reflection",
	"hexpose.page.get_weather.summary": "Pushes a number corresponding to the weather. 0 for clear, 1 for rain, and 2 for thundering.",
	"hexcasting.action.hexpose:get_power": "Battery Purification",
	"hexpose.page.get_power.summary": "Pushes the Redstone power that a position receives.",
	"hexcasting.action.hexpose:get_comparator": "Peripheral Purification",
	"hexpose.page.get_comparator.summary": "Pushes the power level a $(item)Comparator$() would output if pressed against a position.",
	"hexcasting.action.hexpose:get_day": "Circadian Reflection",
	"hexpose.page.get_day.summary": "Pushes the progress of the day as a number between 0 (start) and 1 (end) of the day.",
	"hexcasting.action.hexpose:get_time": "Temporal Reflection",
	"hexpose.page.get_time.summary": "Pushes the twentieths of a second since the creation of the world, unaffected by events such as sleeping.",
	"hexcasting.action.hexpose:get_biome": "Geographical Purification",
	"hexpose.page.get_biome.summary": "Pushes the identifier of the type of biome the vector is within.",
	"hexcasting.action.hexpose:get_dimension": "Plane Reflection",
	"hexpose.page.get_dimension.summary": "Pushes the identifier of the dimension the _Hex is being cast in.",
	"hexcasting.action.hexpose:get_moon": "Lunar Reflection",
	"hexpose.page.get_moon.summary": "Pushes the current phase of the $(thing)Moon$() as a fraction of its size.",
	"hexcasting.action.hexpose:get_einstein": "Distortion Reflection",
	"hexpose.page.get_einstein.summary": "Pushes whether $(item)Compasses$() and $(item)Clocks$() will work in this dimension.",

	"hexpose.page.misc.title": "Miscellaneous",
	"hexcasting.action.hexpose:cat_variant": "Feline Purification",
	"hexpose.page.cat_variant.summary": "Pushes the variant of the $(thing)Cat$().",
	"hexcasting.action.hexpose:creeper_fuse": "Anger Purification",
	"hexpose.page.creeper_fuse.summary": "Pushes the progress of a $(thing)Creeper$() to explosion.",
	"hexcasting.action.hexpose:item_frame_rotation": "Showcase Purification",
	"hexpose.page.item_frame_rotation.summary": "Pushes the rotation of an $(item)Item Frame$() as an integer 0 to 7.",
	"hexcasting.action.hexpose:painting_variant": "Artistic Purification",
	"hexpose.page.painting_variant.summary": "Pushes the variant of the $(thing)Painting$()."
}
