{
	"hexcasting.mishap.invalid_value.identifiable": "an identifiable target",
	"hexcasting.mishap.invalid_value.class.identifier": "an identifier",
    "hexcasting.mishap.invalid_value.block_id": "an identifier of a block type",
	"hexcasting.mishap.invalid_value.entity_id": "an identifier of an entity type",
	"hexcasting.mishap.invalid_value.enchantment_id": "an identifier of an enchantment type",
	"hexcasting.mishap.invalid_value.food_id": "an identifier of a food item type",
	"hexcasting.mishap.invalid_value.item_id": "an identifier of an item type",
	"hexcasting.mishap.invalid_value.status_effect_id": "an identifier of a status effect type",
	"hexcasting.mishap.invalid_value.entity_or_vector": "an entity or a vector",
	"hexcasting.mishap.invalid_value.lenient_living": "a living entity or an armor stand",
	"hexcasting.mishap.invalid_value.media_holding": "a media holding item or entity",
	"hexcasting.mishap.invalid_value.potion_holding": "a potion holding item or entity",

	"hexposition.item_stack.format": " | %s (%d)",
	"hexposition.item_stack.null": "Null Item",

	"hexcasting.action.book.hexposition:get_effect_amplifier": "Concentration Dstl.",
	"hexcasting.action.book.hexposition:get_effects_item": "Prescription Purif.",
	"hexcasting.action.book.hexposition:get_enchantments": "Thaumaturgist's Purif.",
	"hexcasting.action.book.hexposition:breedable": "Reproduction Purif.",
	"hexcasting.action.book.hexposition:theodolite": "Theodolite Purif.",
	"hexcasting.action.book.hexposition:get_air": "Suffocation Purif.",
	"hexcasting.action.book.hexposition:is_wet": "Enderman's Purif.",
	"hexcasting.action.book.hexposition:identify": "Detective's Purif.",
	"hexcasting.action.book.hexposition:damage_stack": "Deterioration Purif.",
	"hexcasting.action.book.hexposition:classify": "Modicum Purif.",
	"hexcasting.action.book.hexposition:get_biome": "Geographical Purif.",
	"hexcasting.action.book.hexposition:get_weather": "Meterologist's Refl.",

	"hexposition.page.enlightened_patterns.title": "Enlightened Patterns",
	"hexposition.page.enlightened_patterns.0": "After $(thing)Enlightenment$(), I find myself acutely aware of certain patterns that aid with my newfound abilities. These patterns don't seem to require anything from me that I didn't have before; perhaps I was always able to cast them but was simply unaware of their existence. An unenlightened player will be able to use $(l:items/hexcasting)$(item)casting devices$() with these patterns.",
	"hexcasting.action.hexposition:am_enlightened": "Epiphany Purification",
	"hexposition.page.am_enlightened.summary": "Pushes whether the given player has achieved $(thing)Enlightenment$().",
	"hexcasting.action.hexposition:is_brainswept": "Sentience Purification",
	"hexposition.page.is_brainswept.summary": "Pushes whether an entity has been \"magically relieved of its mind\". I feel this is strongly related to $(l:patterns/great_spells/brainsweep)$(action)Flay Mind$() somehow...",

	"hexposition.page.perlin.title": "Quasirandomness",
	"hexposition.page.perlin.0": "I have not found a way to harness it yet, but I notice ambient _media is not distributed evenly throughout reality. I can measure its concentration at a point in space and time to get a random number between 0 and 1, corresponding to media levels at that point in space and time. Points close together in space and time tend to have similar values.",
	"hexcasting.action.hexposition:perlin": "Perlin Distillation",
	"hexposition.page.perlin.summary": "Measures the concentration of ambient _media at a point in space and time, normalized between 0 and 1.",

	"hexposition.page.special_raycasts.title": "Special Raycasts",
	"hexcasting.action.hexposition:fluid_raycast": "Naval Distillation",
	"hexposition.page.fluid_raycast.summary": "Works similar to $(l:patterns/basics#hexcasting:raycast)$(action)Archer's Distillation$() but targets only liquids, piercing through all other blocks.",
	"hexcasting.action.hexposition:fluid_surface_raycast": "Lilypad Distillation",
	"hexposition.page.fluid_surface_raycast.summary": "Works similar to $(l:patterns/basics#hexcasting:raycast/axis)$(action)Architect's Distillation$() but targets only liquids, piercing through all other blocks.",
	"hexcasting.action.hexposition:piercing_raycast": "Railgun Exaltation",
	"hexposition.page.piercing_raycast.summary": "Works similar to $(l:patterns/basics#hexcasting:raycast)$(action)Archer's Distillation$() but accepts an additional identifier. It will pierce all blocks until it hits the block specified by the identifier.",
	"hexcasting.action.hexposition:piercing_surface_raycast": "Laser Exaltation",
	"hexposition.page.piercing_surface_raycast.summary": "Works similar to $(l:patterns/basics#hexcasting:raycast/axis)$(action)Architect's Distillation$() but accepts an additional identifier. It will pierce all blocks until it hits the block specified by the identifier.",

	"hexposition.category.scrying": "Scrying",
	"hexposition.category.scrying.desc": "I have stumbled upon a branch of manipulating _media entirely focused around information about the world. While likely not useful for the majority of _Hexes, these will be convenient to have, should I ever need them.",

	"hexposition.page.blocks.title": "Blocks",
	"hexcasting.action.hexposition:block_hardness": "Miner's Purification",
	"hexposition.page.block_hardness.summary": "Pushes how difficult blocks of this type are to mine.",
	"hexcasting.action.hexposition:block_blast_resistance": "Demoman's Purification",
	"hexposition.page.block_blast_resistance.summary": "Pushes how resistant blocks of this type are to explosions.",
	"hexcasting.action.hexposition:blockstate_rotation": "Orientation Purification",
	"hexposition.page.blockstate_rotation.summary": "Pushes the vector of the block's facing direction, or $(l:casting/influences)$(thing)Null$() if blocks of its type do not have an orientation.",
	"hexcasting.action.hexposition:blockstate_turn": "Angle Purification",
	"hexposition.page.blockstate_turn.summary": "Pushes a number corresponding to the rotation of $(item)Signs$(), $(item)Skulls$(), and $(item)Banners$().",
	"hexcasting.action.hexposition:blockstate_crop": "Farmer's Purification",
	"hexposition.page.blockstate_crop.summary": "Pushes a number 0 to 1 corresponding to the growth progress of that block. Works for crops, $(item)Beehives$(), $(item)Composters$(), $(item)Cauldrons$(), and strangely $(item)Cakes$() too.",
	"hexcasting.action.hexposition:blockstate_waterlogged": "Plumber's Purification",
	"hexposition.page.blockstate_waterlogged.summary": "Pushes whether the block is waterlogged, or $(l:casting/influences)$(thing)Null$() if the blocks of its type can not be waterlogged.",
	"hexcasting.action.hexposition:blockstate_glow": "Glowing Purification",
	"hexposition.page.blockstate_glow.summary": "Pushes whether the block is in a \"lit\" state, for example $(item)Furnaces$(), $(item)Redstone Torches$(), $(item)Redstone Lamps$(), and $(item)Campfires$().",
	"hexcasting.action.hexposition:blockstate_lock": "Lock Purification",
	"hexposition.page.blockstate_lock.summary": "Pushes whether the block is currently in a \"open\" state, for example $(item)Doors$(), $(item)Trapdoors$(), $(item)Fence Gates$(), and $(item)Barrels$().",
	"hexcasting.action.hexposition:blockstate_bunch": "Bunching Purification",
	"hexposition.page.blockstate_bunch.summary": "Pushes how many parts are in a block that contains a bunch, or $(l:casting/influences)$(thing)Null$() if it is not such a block. Useful only for $(item)Candles$(), $(item)Sea Pickles$(), and $(item)Turtle Eggs$().",
	"hexcasting.action.hexposition:blockstate_book": "Book Purification",
	"hexposition.page.blockstate_book.summary": "Pushes whether the $(item)Lectern$() or $(item)Jukebox$() contains a $(item)Book$() or $(item)Music Disc$() respectively. It may also work for some kind of bookshelf involved in a great work too.",

	"hexposition.page.entities.title": "Entities",
	"hexcasting.action.hexposition:entity_width": "Caliper's Purification",
	"hexposition.page.entity_width.summary": "Similar to $(l:patterns/basics#hexcasting:get_entity_height)$(action)Stadiometer's Purification$() but pushes the width of an entity rather than its height.",
	"hexcasting.action.hexposition:theodolite": "Theodolite's Purification",
	"hexposition.page.theodolite.summary": "Similar to $(l:patterns/basics#hexcasting:get_entity_look)$(action)Alidade's Purification$() but pushes the vector that points upwards from their head rather than the entity's facing vector.",
	"hexcasting.action.hexposition:get_health": "Vitality Purification",
	"hexposition.page.get_health.summary": "Pushes how close an entity is to death. I can think of these in terms of half-hearts.",
	"hexcasting.action.hexposition:get_max_health": "Fitness Purification",
	"hexposition.page.get_max_health.summary": "Pushes how much health an entity can have at its prime. I can think of these in terms of half-hearts.",
	"hexcasting.action.hexposition:get_air": "Suffocation Purification",
	"hexposition.page.get_air.summary": "Pushes the number of seconds before an entity will start to suffocate. This applies to marine creatures out of water as well as land creatures in water.",
	"hexcasting.action.hexposition:get_max_air": "Lung Purification",
	"hexposition.page.get_max_air.summary": "Pushes the number of seconds a regular entity of that type can last outside their normal breathing environment before they start suffocating.",
	"hexcasting.action.hexposition:burning": "Inferno Purification",
	"hexposition.page.burning.summary": "Pushes the number of seconds the burning entity will continue burning if not put out. -1 if the entity is not burning currently.",
	"hexcasting.action.hexposition:is_wet": "Enderman's Purification",
	"hexposition.page.is_wet.summary": "Pushes whether the entity is touching rain, water, or in a bubble column.",
	"hexcasting.action.hexposition:is_baby": "Youth Purification",
	"hexposition.page.is_baby.summary": "Pushes whether a living creature is a baby. Also works on $(item)Armor Stands$() oddly.",
	"hexcasting.action.hexposition:breedable": "Reproduction Purification",
	"hexposition.page.breedable.summary": "Pushes whether an animal creature is in love and ready to mate, or $(l:casting/influences)$(thing)Null$() if that creature is not capable of that type of reproduction.",
	"hexcasting.action.hexposition:is_sleeping": "Sloth's Purification",
	"hexposition.page.is_sleeping.summary": "Pushes whether the $(item)Player$(), $(item)Cat$(), $(item)Fox$(), or other entity is sleeping.",
	"hexcasting.action.hexposition:is_sprinting": "Racer's Purification",
	"hexposition.page.is_sprinting.summary": "Pushes whether the $(item)Player$(), $(item)Cat$(), $(item)Fox$(), or other entity is sprinting. Swimming and leaving the ground after starting to sprint are still included.",
	"hexcasting.action.hexposition:entity_vehicle": "Vehicle Purification",
	"hexposition.page.entity_vehicle.summary": "Pushes the entity the given entity is riding or $(l:casting/influences)$(thing)Null$() if it is not riding in or on anything.",
	"hexcasting.action.hexposition:entity_passengers": "Jockey Purification",
	"hexposition.page.entity_passengers.summary": "Pushes a list of entities that are riding the given entity.",
	"hexcasting.action.hexposition:shooter": "Shooter Purification",
	"hexposition.page.shooter.summary": "Pushes the shooter of the given projectile entity or $(l:casting/influences)$(thing)Null$() if it has no shooter or isn't a projectile. It also pushes $(l:casting/influences)$(thing)Null$() if the shooter is outside my ambit.",

	"hexposition.page.environment.title": "Environment",
	"hexposition.page.environment.0": "These patterns are meta: they concern properties of the magical environment they are cast in. Mostly useful in avoiding $(l:casting/mishaps)$(thing)mishaps$().",
	"hexcasting.action.hexposition:env_ambit": "Ambit Purification",
	"hexposition.page.env_ambit.summary": "Pushes whether a location or entity is in ambit.",
	"hexcasting.action.hexposition:env_staff": "Staff Reflection",
	"hexposition.page.env_staff.summary": "Pushes whether a $(l:items/staff)$(item)Staff$() is being used to cast this pattern.",
	"hexcasting.action.hexposition:env_offhand": "Dexterity Reflection",
	"hexposition.page.env_offhand.summary": "Pushes whether the dominant hand of the caster is being used to cast this pattern. May return strange results for casters without hands.",
	"hexcasting.action.hexposition:env_packaged_hex": "Device Reflection",
	"hexposition.page.env_packaged_hex.summary": "Pushes whether any form of $(l:items/hexcasting)$(item)casting device$() is being used to cast this pattern.",
	"hexcasting.action.hexposition:env_circle": "Constructed Reflection",
	"hexposition.page.env_circle.summary": "Pushes whether some form of $(l:greatwork/spellcircles)$(thing)$(o)grand work$() is being used to cast this pattern.",

	"hexposition.page.food.title": "Food",
	"hexcasting.action.hexposition:get_player_hunger": "Hunger Purification",
	"hexposition.page.get_player_hunger.summary": "Pushes how full a $(item)Player$() is. I can think of this in terms of half-hunger-hunches.",
	"hexcasting.action.hexposition:get_player_saturation": "Stamina Purification",
	"hexposition.page.get_player_saturation.summary": "Pushes a $(item)Player$()'s saturation, which roughly correlates to how long the $(item)Player$() will remain full.",
	"hexcasting.action.hexposition:edible": "Edibility Purification",
	"hexposition.page.edible.summary": "Takes in an item identifier and pushes whether I can eat it.",
	"hexcasting.action.hexposition:get_hunger": "Calorie Purification",
	"hexposition.page.get_hunger.summary": "Takes in an item identifier and pushes the amount it will fill me.",
	"hexcasting.action.hexposition:get_saturation": "Satiation Purification",
	"hexposition.page.get_saturation.summary": "Takes in an item identifier and pushes the saturation value, which roughly affects how long it will fill me.",
	"hexcasting.action.hexposition:is_meat": "Flesh Purification",
	"hexposition.page.is_meat.summary": "Takes in an item identifier and pushes whether it's considered a meat. $(item)Wolves$() can eat meats.",
	"hexcasting.action.hexposition:is_snack": "Dessert Purification",
	"hexposition.page.is_snack.summary": "Takes in an item identifier and pushes whether it's a snack.",

	"hexposition.page.identifiers.title": "Identifiers",
	"hexposition.page.identifiers.0": "The identifier iota is Nature's solution to allowing _Hexes to specifically identify types. Every type of entity, block, status effect, enchantment, sound, and more has a unique identifier attached which a _Hex can retrieve and compare.",
	"hexcasting.action.hexposition:identify": "Detective's Purification",
	"hexposition.page.identify.summary": "Pushes the identifier of an entity or block at a vector.",
	"hexcasting.action.hexposition:classify": "Modicum Purification",
	"hexposition.page.classify.summary": "Pushes the identifier of an iota's type. Can be used to determine whether two iota are the same type.",

	"hexposition.page.item.title": "Items",
	"hexposition.page.item.0": "An item iota holds nearly all information that distinguish a stack of items from another and _Hexes can use them to query specifics. There is one exception: an item iota loses any item iota contained within the item. The already intricate folds of _media that form item iota simply unravel when nested within even more layers of abstraction.",
	"hexposition.page.item.1": "$(item)Players$() manipulate _media idly just as a byproduct of being sentient. This aura of _media is mostly inert but strikes back, often violently at attempts of in-depth scrying. Externally exposed items such as armor and held items can be spied on, but attempts to deeply analyze their inventory will fail.$(br2)Nature respects boundaries.",
	"hexcasting.action.hexposition:get_stack": "Item Purification",
	"hexposition.page.get_stack.summary": "Pushes the item that an $(item)Item$() in the world is.",
	"hexcasting.action.hexposition:create_stack": "Offer Purification",
	"hexposition.page.create_stack.summary": "Creates an item iota from an item identifier and the number of items in the stack.",
	"hexcasting.action.hexposition:get_mainhand": "Tool Purification",
	"hexposition.page.get_mainhand.summary": "Returns the item in the entity's mainhand.",
	"hexcasting.action.hexposition:get_offhand": "Accessory Purification",
	"hexposition.page.get_offhand.summary": "Returns the item in the entity's offhand.",
	"hexcasting.action.hexposition:get_inventory": "Cart Purification",
	"hexposition.page.get_inventory.summary": "Returns a list of all items the entity is carrying, or $(l:casting/influences)$(thing)Null$() if the entity can not hold items. Trying to access another $(item)Player$()'s inventory will incur a mishap.",
	"hexcasting.action.hexposition:get_block_inventory": "Chest Purification",
	"hexposition.page.get_block_inventory.summary": "Returns a list of all items in the container, or $(l:casting/influences)$(thing)Null$() if the block can not contain items.",
	"hexcasting.action.hexposition:get_armor": "Aegis Purification",
	"hexposition.page.get_armor.summary": "Returns a list of all items the entity is wearing, from feet up.",
	"hexcasting.action.hexposition:get_ender_chest": "Pocket Reflection",
	"hexposition.page.get_ender_chest.summary": "Returns a list of all items in my ender chest.",
	"hexcasting.action.hexposition:count_stack": "Storage Purification",
	"hexposition.page.count_stack.summary": "Takes in an item and pushes how many items are in it.",
	"hexcasting.action.hexposition:count_max_stack": "Warehouse Purification",
	"hexposition.page.count_max_stack.summary": "Takes in an item and pushes how many items that can stack in it.",
	"hexcasting.action.hexposition:damage_stack": "Deterioration Purification",
	"hexposition.page.damage_stack.summary": "Takes in an item and pushes how much damage the item has sustained.",
	"hexcasting.action.hexposition:damage_max_stack": "Fragility Purification",
	"hexposition.page.damage_max_stack.summary": "Takes in an item and pushes how much durability the item can have at its peak.",
	"hexcasting.action.hexposition:get_enchantments": "Thaumaturgist's Purification",
	"hexposition.page.get_enchantments.summary": "Gets a list of enchantments the item has.",
	"hexcasting.action.hexposition:get_enchantment_strength": "Charm Distillation",
	"hexposition.page.get_enchantment_strength.summary": "Gets the strength of the specific enchantment on the item.",
	"hexcasting.action.hexposition:rarity": "Collector Purification",
	"hexposition.page.rarity.summary": "Gauges the rarity of an item as a number, with greater values corresponding to a rarer item. Certain aspects such as enchantments can also elevate an item's rarity.",

	"hexposition.page.media.title": "Media",
	"hexcasting.action.hexposition:env_media": "Media Reflection",
	"hexposition.page.env_media.summary": "Pushes the _media available to the current cast.",
	"hexcasting.action.hexposition:get_media": "Media Purification",
	"hexposition.page.get_media.summary": "Pushes the amount of _media inside an item, that a creature contains or holds, or that a specialized _media-holding block contains.",
	"hexcasting.action.hexposition:media_max_stack": "Potential Purification",
	"hexposition.page.media_max_stack.summary": "Takes in an item and pushes either $(l:casting/influences)$(thing)Null$() if the item does not have any _media-holding potential, or the amount of _media it is capable of holding at its peak.",

	"hexposition.page.status_effects.title": "Status Effects",
	"hexcasting.action.hexposition:get_effects_entity": "Diagnosis Purification",
	"hexposition.page.get_effects_entity.summary": "Pushes a list of status effects the entity is afflicted with.",
	"hexcasting.action.hexposition:get_effects_item": "Prescription Purification",
	"hexposition.page.get_effects_item.summary": "Pushes a list of status effects the food or potion will bestow.",
	"hexcasting.action.hexposition:get_effect_category": "Condition Purification",
	"hexposition.page.get_effect_category.summary": "Pushes the general \"goodness\" of the effect towards the afflicted. -1 for harmful, 0 for neutral, and 1 for beneficial.",
	"hexcasting.action.hexposition:get_effect_amplifier": "Concentration Distillation",
	"hexposition.page.get_effect_amplifier.summary": "Pushes the potency of the specific effect acting on the entity or $(l:casting/influences)$(thing)Null$() if the entity doesn't have it.",
	"hexcasting.action.hexposition:get_effect_duration": "Clearance Distillation",
	"hexposition.page.get_effect_duration.summary": "Pushes how long the effect will last in seconds or $(l:casting/influences)$(thing)Null$() if the entity doesn't have it.",

	"hexposition.page.world.title": "World",
	"hexcasting.action.hexposition:get_light": "Luminance Purification",
	"hexposition.page.get_light.summary": "Pushes the light level at the position as a number 0 to 15. If inside a nontransparent block, it returns zero.",
	"hexcasting.action.hexposition:get_weather": "Meterologist's Reflection",
	"hexposition.page.get_weather.summary": "Pushes a number corresponding to the weather. 0 for clear, 1 for rain, and 2 for thundering.",
	"hexcasting.action.hexposition:get_power": "Battery Purification",
	"hexposition.page.get_power.summary": "Pushes the Redstone power that a position receives.",
	"hexcasting.action.hexposition:get_comparator": "Peripheral Purification",
	"hexposition.page.get_comparator.summary": "Pushes the power level a $(item)Comparator$() would output if pressed against a position.",
	"hexcasting.action.hexposition:get_day": "Circadian Reflection",
	"hexposition.page.get_day.summary": "Pushes the progress of the day as a number between 0 (start) and 1 (end) of the day.",
	"hexcasting.action.hexposition:get_time": "Temporal Reflection",
	"hexposition.page.get_time.summary": "Pushes the age of the world for timekeeping, unaffected by events such as sleeping. Divided by 20, it returns seconds.",
	"hexcasting.action.hexposition:get_biome": "Geographical Purification",
	"hexposition.page.get_biome.summary": "Pushes the identifier of the type of biome the vector is within.",
	"hexcasting.action.hexposition:get_dimension": "Plane Reflection",
	"hexposition.page.get_dimension.summary": "Pushes the identifier of the dimension the _Hex is being cast in.",
	"hexcasting.action.hexposition:get_moon": "Lunar Reflection",
	"hexposition.page.get_moon.summary": "Pushes the current phase of the $(thing)Moon$() as a fraction of its size.",
	"hexcasting.action.hexposition:get_einstein": "Distortion Reflection",
	"hexposition.page.get_einstein.summary": "Pushes whether $(item)Compasses$() and $(item)Clocks$() will work in this dimension."
}