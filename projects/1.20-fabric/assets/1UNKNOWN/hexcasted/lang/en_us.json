{
  "hexcasted.entry.cbc": "The Call to War",
  "hexcasted.page.cbc": "I had been drafted by the Cannoneer's Corps to make weapons of war and, despite my hesitancy, I accepted.$(br)$(br)Project Hexcasted's final product was the $(thing)Hex Shell$() was an media-infused shell inscribed with two Hexes. The $(thing)Cannoneer's Hex$() which executes as fast as Nature would allow upon firing the shell and The $(thing)Demolitionist's Hex$() to execute on detonation.$(br)$(br)What have I done...",

  "hexcasted.entry.cbc_basics": "War is Hell",
  "hexcasting.action.hexcasted:shell_get_on_tick": "Cannoneer's Prfn.",
  "hexcasted.page.cbc_basics.shell_get_on_tick": "This pattern reads the $(thing)Cannoneer's Hex$() from a $(thing)Hex Shell$().",
  "hexcasting.action.hexcasted:shell_set_on_tick": "Cannoneer's Gambit",
  "hexcasted.page.cbc_basics.shell_set_on_tick": "This pattern inscribes the $(thing)Cannoneer's Hex$() onto a $(thing)Hex Shell$() which executes as fast as Nature would allow after being fired.$(br)$(br)Experiment 10a: Targeting a Submarine - Failed, ran out of media, hit a civilian cruise ship. 2 Casualties.",
  "hexcasting.action.hexcasted:shell_get_on_detonate": "Demolitionist's Prfn.",
  "hexcasted.page.cbc_basics.shell_get_on_detonate": "This pattern reads the $(thing)Demolitionist's Hex$() from a $(thing)Hex Shell$().",
  "hexcasting.action.hexcasted:shell_set_on_detonate": "Demolitionist's Gambit",
  "hexcasted.page.cbc_basics.shell_set_on_detonate": "This pattern inscribes the $(thing)Demolitionist's Hex$() onto a $(thing)Hex Shell$() which executes upon the shell being detonated.$(br)$(br)Experiment 11b: Targeting a \"Doom Town\" - Failed, miscalculated trajectory, hit nearby village. 347 Rendered Inert.",

  "hexcasted.entry.cbc_spell": "Splitting the Hex",
  "hexcasting.action.hexcasted:create_shell": "Create Shell",
  "hexcasted.page.cbc_spell.create_shell": "This pattern takes the given media and forces Nature to create a $(thing)Hex Shell$(). I pray these notes never fall into the wrong hands..."
}