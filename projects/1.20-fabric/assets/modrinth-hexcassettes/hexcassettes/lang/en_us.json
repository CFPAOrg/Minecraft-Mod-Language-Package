{
	"advancements.hexcassettes.quinio.title": "QUINIO",
	"advancements.hexcassettes.quinio.description": "Create a daemon.",
	"advancements.hexcassettes.tape_worm.title": "Tape Worm?",
	"advancements.hexcassettes.tape_worm.description": "Consume a cassette tape.",
	"advancements.hexcassettes.full_arsenal.title": "Full Album",
	"advancements.hexcassettes.full_arsenal.description": "Acquire a full arsenal of cassettes.",
	"key.categories.hexcassettes": "Hexcassettes",
	"key.hexcassettes.ponder_cassette": "Ponder Cassettes",
	"item.hexcassettes.cassette": "Cassette",
	"subtitles.hexcassettes.cassette_eject": "Cassette ejects",
	"subtitles.hexcassettes.cassette_fail": "Cassette clicks",
	"subtitles.hexcassettes.cassette_insert": "Cassette inserted",
	"subtitles.hexcassettes.cassette_loop": "Cassette whirrs",

	"hexcasting.mishap.hexcassettes:no_free_cassettes": "Could not queue Cassette.",

	"hexcassettes.page.async.title": "Asynchronous Hexes",
	"hexcassettes.page.async.0": "As part of their nature, _Hexes evaluate in their entirety in one instant. To postpone _Hexes for later, Nature has devised quite the whimsical solution: a $(item)Cassettes$() that must be crafted and then $(o)subsumed$(). I may have up to six at any time. Each one holds a _Hex I requested to delay until that _Hex is ready to cast. After casting, the $(thing)Cassette$() becomes free to hold other _Hexes.",
	"hexcassettes.page.async.craft": "After plating a $(item)Music Disc$() with a hefty amount of $(item)$(l:items/amethyst)Charged Amethyst$() to enable the $(o)abstraction$(), I can add my glorious creation to my mind's collection using a combination of magic, willpower, and a lot of chewing.",
    "hexcasting.action.hexcassettes:enqueue": "Enqueue",
	"hexcassettes.page.enqueue.summary.0": "Queues a _Hex to cast after that many twentieths of a second. Inherits the label of the current $(thing)Cassette$() if possible or a randomized pattern. Label is returned.",
	"hexcassettes.page.async.1": "If $(l:async#hexcassettes:enqueue)$(action)Enqueue$() can not find a free $(thing)Cassette$(), it incurs the Parallel Processing mishap, terminating all of my $(thing)Cassettes$().$(br2)The minimal time I can delay a _Hex seems to hint that the world I live in has a disturbingly low $(o)temporal resolution$().. best not to dwell on that.$(br2)$(o)Ibra oniki ra. QUINIO QUINIO QUINIO QUINIO alef a ra.$()",
    "hexcassettes.page.async.2": "The label of a $(thing)Cassette$() is a pattern that distinguishes it from other $(thing)Cassettes$(). I will need this label if I want to cancel or query information about it.$(br2)I can view all my $(thing)Cassettes$() by holding $(thing)$(k:hexcassettes.view_cassettes)$(). Busy $(thing)Cassettes$() are sunken and have their label rendering to the side of them.$(br2)Dying also forcibly terminates all of my $(thing)Cassettes$(). I can rest easy that I will not trap myself in an endless death cycle.",
	"hexcassettes.page.async.3": "If a $(thing)Cassette$() queues a copy of itself capable of further enqueueing, a phenomenon emerges that ancient _Hexcasters call a daemon: passive, constant _Hexcasting.$(br2)Study into this branch of _Hexcasting seems limited due to the great danger of manipulating time: _Hexes cast by $(thing)Cassette$() use exclusively _media from my inventory. If left unchecked, it can easily drain my _media and then my life.",
    "hexcasting.action.hexcassettes:dequeue": "Dequeue",
    "hexcassettes.page.dequeue.summary": "Terminates the $(thing)Cassette$() with the provided label, freeing it instantly and cancelling the _Hex within it.",
	"hexcasting.action.hexcassettes:killall": "Disqueue",
	"hexcassettes.page.killall.summary": "Terminates all $(thing)Cassettes$(). Useful for ouroboros-like _Hexes that bypass regular dequeuing via two mutually resurrecting $(thing)Cassettes$().",
	"hexcasting.action.hexcassettes:specs": "Threading Reflection",
	"hexcassettes.page.specs.summary": "Pushes the total number of $(thing)Cassettes$() that I have available to me in my mind's collection.",
	"hexcasting.action.hexcassettes:busy": "Operating Reflection",
	"hexcassettes.page.busy.summary": "Pushes a list of the labels of all my busy $(thing)Cassettes$().",
	"hexcasting.action.hexcassettes:inspect": "Program Distillation",
	"hexcassettes.page.inspect.summary": "Pushes whether a given player has a $(thing)Cassette$() with a certain label.",
	"hexcasting.action.hexcassettes:foretell": "Oracle Purification",
	"hexcassettes.page.foretell.summary": "Pushes the twentieths of a second until the $(thing)Cassette$() with the given label fires. Pushes $(l:casting/influences)$(thing)Null$() if there is no such $(thing)Cassette$().",
    "hexcassettes.page.enqueue.summary.1": "A variant of $(l:async#hexcassettes:enqueue)$(action)Enqueue$() that takes an additional pattern. Queues the _Hex under the given label.",
	"hexcassettes.page.async.4": "If there is already a $(thing)Cassette$() of the provided label, the provided _Hex replaces it and takes its slot.$(br2)Otherwise, it schedules the _Hex to an empty slot. If there are no available slots, it incurs the Parallel Processing mishap, terminating all of my $(thing)Cassettes$().",
	"hexcasting.action.hexcassettes:self": "State Reflection",
	"hexcassettes.page.self.summary": "Pushes the current pattern of the $(thing)Cassette$() this _Hex is running in or $(l:casting/influences)$(thing)Null$() if it is not running in a $(thing)Cassette$()."
}