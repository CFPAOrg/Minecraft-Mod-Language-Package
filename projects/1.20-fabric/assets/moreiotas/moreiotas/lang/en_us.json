{
  "hexcasting.mishap.invalid_value.matrix.nonsingular": "a non-singular matrix.",

  "hexcasting.iota.moreiotas:string": "String",
  "hexcasting.iota.moreiotas:matrix": "Matrix",
  "hexcasting.iota.moreiotas:iota_type": "Iota Type",
  "hexcasting.iota.moreiotas:entity_type": "Entity Type",
  "hexcasting.iota.moreiotas:item_type": "Item Type",
  "hexcasting.iota.moreiotas:item_stack": "Item Stack",

  "moreiotas.spelldata.entity_type": "Type",

  "moreiotas.tooltip.stack.empty": "Empty Stack",
  "moreiotas.tooltip.stack.format": "%dx %s",

  "moreiotas.tooltip.string": "\"%s\"",

  "hexcasting.action.moreiotas:string/empty": "Blank Reflection",
  "hexcasting.action.moreiotas:string/space": "Spacing Reflection",
  "hexcasting.action.moreiotas:string/comma": "Comma Reflection",
  "hexcasting.action.moreiotas:string/newline": "Breaking Reflection",
  "hexcasting.action.moreiotas:string/block/get": "Reader's Purification",
  "hexcasting.action.moreiotas:string/block/set": "Write",
  "hexcasting.action.moreiotas:string/chat/caster": "Whisper Reflection",
  "hexcasting.action.moreiotas:string/chat/all": "Listener's Reflection",
  "hexcasting.action.moreiotas:string/chat/prefix/get": "Sifter's Reflection",
  "hexcasting.action.moreiotas:string/chat/prefix/set": "Sifter's Gambit",
  "hexcasting.action.moreiotas:string/iota": "Scrivener's Purification",
  "hexcasting.action.moreiotas:string/action": "Patternmaster's Purification",
  "hexcasting.action.moreiotas:string/name/get": "Moniker Purification",
  "hexcasting.action.moreiotas:string/name/set": "Name",
  "hexcasting.action.moreiotas:string/add": "Concatenation Distillation",
  "hexcasting.action.moreiotas:string/split": "Separation Distillation",
  "hexcasting.action.moreiotas:string/parse": "Input Purification",
  "hexcasting.action.moreiotas:string/find": "Discoverer's Distillation",
  "hexcasting.action.moreiotas:string/sub": "Winnowing Distillation",
  "hexcasting.action.moreiotas:string/case": "Case Distillation",

  "hexcasting.action.moreiotas:altadd": "Additive Distillation II",
  "hexcasting.action.moreiotas:altmul": "Multiplicative Distillation II",
  "hexcasting.action.moreiotas:altdiv": "Division Distillation II",
  "hexcasting.action.moreiotas:altpow": "Power Distillation II",

  "hexcasting.action.moreiotas:matrix/make": "Transformation Purification",
  "hexcasting.action.moreiotas:matrix/unmake": "Restoration Purification",
  "hexcasting.action.moreiotas:matrix/unmake/direct": "Restoration Purification II",
  "hexcasting.action.moreiotas:matrix/identity": "Identity Purification",
  "hexcasting.action.moreiotas:matrix/zero": "Zero Distillation",
  "hexcasting.action.moreiotas:matrix/rotation": "Rotation Distillation",
  "hexcasting.action.moreiotas:matrix/transpose": "Transpose Purification",
  "hexcasting.action.moreiotas:matrix/inverse": "Inverse Purification",
  "hexcasting.action.moreiotas:matrix/determinant": "Determinant Purification",
  "hexcasting.action.moreiotas:matrix/concat/vert": "Tower Distillation",
  "hexcasting.action.moreiotas:matrix/concat/hori": "Sprawling Distillation",
  "hexcasting.action.moreiotas:matrix/split/vert": "Toppling Gambit",
  "hexcasting.action.moreiotas:matrix/split/hori": "Mitosis Gambit",

  "hexcasting.action.moreiotas:type/iota": "Classifier's Purification",
  "hexcasting.action.moreiotas:type/entity": "Physician's Purification",
  "hexcasting.action.moreiotas:type/to_item": "Sorter's Purification",
  "hexcasting.action.moreiotas:type/item_held": "Sorter's Reflection",

  "hexcasting.action.moreiotas:get_entity/type": "Entity Distillation: Type",
  "hexcasting.action.moreiotas:zone_entity/type": "Zone Exaltation: Type",
  "hexcasting.action.moreiotas:zone_entity/not_type": "Zone Exaltation: Not-Type",


  "hexcasting.action.moreiotas:item/main_hand": "Duelist's Purification",
  "hexcasting.action.moreiotas:item/off_hand": "Shieldbearer's Purification",
  "hexcasting.action.moreiotas:item/inventory/stacks": "Hoarder's Distillation",
  "hexcasting.action.moreiotas:item/inventory/items": "Collector's Distillation",
  "hexcasting.action.moreiotas:item/prop/size/set": "Treasurer's Distillation",

  "hexcasting.action.book.moreiotas:string/action": "Patternmaster's Prfct.",

  "hexcasting.action.book.moreiotas:altadd": "Additive Dstl. II",
  "hexcasting.action.book.moreiotas:altmul": "Multiplicative Dstl. II",
  "hexcasting.action.book.moreiotas:altdiv": "Division Dstl. II",

  "hexcasting.action.book.moreiotas:matrix/make": "Transformation Prfct.",
  "hexcasting.action.book.moreiotas:matrix/unmake": "Restoration Prfct.",
  "hexcasting.action.book.moreiotas:matrix/unmake/direct": "Restoration Prfct. II",

  "moreiotas.entry.strings": "Strings",
  "moreiotas.page.strings.string/empty": "Add an empty string to the stack, useful for combining with other strings.",
  "moreiotas.page.strings.string/space": "Add a blank space string to the stack, useful for combining with other strings.",
  "moreiotas.page.strings.string/comma": "Add a comma string to the stack, useful for combining with other strings.",
  "moreiotas.page.strings.string/newline": "Add a string to the stack representing a break between lines, useful for combining with other strings.",
  "moreiotas.page.strings.string/block/get": "Removes a vector from the stack. If that vector is pointing at a sign or lectern, it returns that sign or lectern's text to the stack. Otherwise, it returns null.",
  "moreiotas.page.strings.string/block/set": "Removes a vector and a string from the stack. If that vector is pointing at a sign or lectern, it writes that string to that sign or lectern. Costs a hundredth of an $(l:items/amethyst)$(item)Amethyst Dust/$.",
  "moreiotas.page.strings.string/chat/caster": "Adds the last message the caster sent to the stack as a string.",
  "moreiotas.page.strings.string/chat/all": "Adds the last message anyone sent to the stack as a string.",
  "moreiotas.page.strings.string/chat/prefix/set": "Accepts a string; All future chat messages starting with that string won't be seen by others, and only messages prefixed with that string can be read by $(l:patterns/strings#moreiotas:string/chat/caster)$(action)Whisper Reflection/$.",
  "moreiotas.page.strings.string/chat/prefix/get": "Returns the last string you passed to $(l:patterns/strings#moreiotas:string/chat/prefix/set)$(action)Sifter's Gambit/$.",
  "moreiotas.page.strings.string/iota": "Converts the iota on top of the stack into a string.",
  "moreiotas.page.strings.string/action": "Converts the pattern on top of the stack into the string for that pattern's name. If there is no action associated with that pattern, or if the associated pattern is a Great Spell, it returns null.",
  "moreiotas.page.strings.string/name/get": "Takes an entity and returns that entity's name. If it is an item entity, return the item's name.",
  "moreiotas.page.strings.string/name/set": "Takes a string and an entity, and sets that entities name to the given string. If the entity is an item entity, also set the item's name. Costs a hundredth of an $(l:items/amethyst)$(item)Amethyst Dust/$.",
  "moreiotas.page.strings.string/add": "Removes the top two strings from the stack and combines them together.",
  "moreiotas.page.strings.string/split": "Removes the top two strings from the stack and splits the first string, using the second string as the delimiter and returning as a list.",
  "moreiotas.page.strings.string/parse": "Removes a string from the top of the stack and returns the number that string parses as (or null if it doesn't parse).",
  "moreiotas.page.strings.string/find": "Removes two strings from the top of the stack, and returns the first index of the first string where the second string is a substring.",
  "moreiotas.page.strings.string/sub": "Removes a string and two positive integers from the top of the stack, and returns the substring from the first to the second (inclusive first, exclusive second).",
  "moreiotas.page.strings.string/len": "Removes a string and returns its length.",
  "moreiotas.page.strings.string/case": "Removes a string and a bool or null. If it was true, return the string in upper case. If false, lowercase. If null, toggle each character's case.",




  "moreiotas.entry.item_iotas": "Item Iotas",
  "moreiotas.page.item_iotas.0": "I have discovered two additional types of iotas I can manipulate.$(br2) Item Type Iotas describe a singular item stripped of its properties, such as damage or enchantments.$(br2) Item Stack Iotas describe a stack of items as they might appear in my inventory, amount, custom names, enchantments, and all.",
  "moreiotas.page.item_iotas.1": "It would also seem Item Stack iotas referring to Foci containing other Item Stack iotas are somewhat faulty. A limit to the depth of my thought perhaps.",


  "moreiotas.entry.matrices": "Matrices",
  "moreiotas.page.matrices.0": "Matrices are a helpful tool for manipulating vectors to do as I wish, able to represent any linear transformation that can be applied to a vector. Of note with these patterns is that many are forgiving with their inputs, accepting in place of matrices things that can be easily mapped to matrices, namely numbers and vectors.",
  "moreiotas.page.matrices.1": "For example, attempting to multiply a 3x3 matrix with a vector, rather than mishapping, will return a new vector. For more information on how to make use of matrices to their fullest potential, the below is a helpful resource.",
  "moreiotas.page.matrices.1.link_text": "3blue1brown",
  "moreiotas.page.matrices.matrix/make.0": "Converts the iota on top of the stack into a matrix. This iota can be a number, vector, or list.",
  "moreiotas.page.matrices.matrix/make.1": "If it is a number, it becomes a 1x1 matrix. If it's a vector, it becomes a 3x1 matrix. If it's a list, it must be a list of purely numbers, purely vectors, or purely lists of numbers (each of which must be the same length). If it's a list of numbers it'll be 1 by n, if it's a list of vectors it'll be 3 by n, and if it's a list of lists it'll be n by m, where n is the inner list length and m is the outer list length.",
  "moreiotas.page.matrices.matrix/unmake.0": "Converts the iota on top of the stack back from a matrix into a number, vector, or list depending on the vector's size.",
  "moreiotas.page.matrices.matrix/unmake.1": "A 1x1 matrix will become a number. A 1x3 or 3x1 matrix will become a vector. A 3 by n or n by 3 matrix will become a list of vectors, and any matrix not covered by the previous will become a list of lists of numbers, with each inner list being one column of the matrix.",
  "moreiotas.page.matrices.matrix/unmake/direct": "As $(l:patterns/matrices#moreiotas:matrix/unmake)$(action)Restoration Purification/$, except it always returns a list of lists of numbers.",
  "moreiotas.page.matrices.matrix/identity": "Accepts a positive integer n, and returns an n by n matrix with 1 along the diagonal and 0 elsewhere.",
  "moreiotas.page.matrices.matrix/zero": "Accepts positive integers n and m, and returns an n by m matrix of zeros.",
  "moreiotas.page.matrices.matrix/rotation": "Accepts a vec v and number θ, and returns a matrix representing rotating by θ radians around v.",
  "moreiotas.page.matrices.matrix/add": "Adds two matrices together; they must have the same number of columns and rows.",
  "moreiotas.page.matrices.matrix/mul": "Multiplies the first n by m by with an m by p matrix to get an n by p matrix.",
  "moreiotas.page.matrices.matrix/div": "Divides the first n by m matrix with an m by m matrix to get an n by m matrix.",
  "moreiotas.page.matrices.matrix/pow": "Accepts a square matrix and an integer, and raises the matrix to the power of the integer.",
  "moreiotas.page.matrices.matrix/mul/elem": "Multiplies the first n by m matrix elementwise with another n by m matrix.",
  "moreiotas.page.matrices.matrix/div/elem": "Divides the first n by m matrix elementwise by another n by m matrix.",
  "moreiotas.page.matrices.matrix/pow/elem": "Raises the first n by m matrix elementwise to the power of another n by m matrix.",
  "moreiotas.page.matrices.matrix/transpose": "Accepts an n by m matrix and returns an m by n matrix where every entry has been flipped along the diagonal.",
  "moreiotas.page.matrices.matrix/inverse": "Accepts an n by n matrix and returns the n by n matrix such that in*out = identity.",
  "moreiotas.page.matrices.matrix/determinant": "Accepts a square matrix and returns the determinant of that matrix. Mishaps for matrices larger than 4x4.",
  "moreiotas.page.matrices.matrix/concat/vert": "Accepts an n by m matrix and a p by m matrix and produces a (n+p) by m matrix by putting the first matrix on top of the second.",
  "moreiotas.page.matrices.matrix/concat/hori": "Accepts an n by m matrix and an n by p matrix and produces an n by (m+p) matrix by putting the first matrix to the left of the second.",
  "moreiotas.page.matrices.matrix/split/vert": "Accepts an n by m matrix and an int from 0 to n, and returns two matrices created by splitting the input matrix vertically at the inputted int.",
  "moreiotas.page.matrices.matrix/split/hori": "Accepts an n by m matrix and an int from 0 to m, and returns two matrices created by splitting the input matrix horizontally at the inputted int.",

  "moreiotas.entry.types": "Types",
  "moreiotas.page.types.type/iota": "Remove an iota from the stack, and adds the type of that iota to the stack.",
  "moreiotas.page.types.type/entity": "Remove an entity from the stack, and adds the type of the entity at that location to the stack.",
  "moreiotas.page.types.type/to_item": "Remove an iota with an associated item type (for example a location and the type of the block at that location, an item entity, or an item frame) from the stack and returns the item type to the stack (e.g. Grass, Stone, Stick, etc.).",
  "moreiotas.page.types.type/item_held": "Adds the type of the item in the caster's offhand to the stack if there is one present, or the type of the casting hand otherwise.",

  "moreiotas.page.types.get_entity/type": "Remove an entity type and a position from the stack, and returns an entity of that type at that position if one exists.",
  "moreiotas.page.types.zone_entity/type": "Remove an entity type, a position, and a radius from the stack, and returns a list of all entities of that type within that radius of that position.",
  "moreiotas.page.types.zone_entity/not_type": "Remove an entity type, a position, and a radius from the stack, and returns a list of all entities not of that type within that radius of that position",

  "moreiotas.entry.items": "Items",
  "moreiotas.page.items.item/prop/item": "Transforms the $(l:casting/item_iotas)Item Stack$() at the top of the stack into its Item.",
  "moreiotas.page.items.item/prop/size": "Transforms the Item Stack at the top of the stack into its size.",
  "moreiotas.page.items.item/prop/size/set": "Transforms the Item Stack at the top of the stack into its size.",
  "moreiotas.page.items.item/main_hand": "Transforms the entity at the top of the stack into the Item Stack in its main hand. Also works on Item Frames and dropped items.",
  "moreiotas.page.items.item/off_hand": "Transforms the entity at the top of the stack into the Item Stack in its off hand.",
  "moreiotas.page.items.item/inventory/stacks": "Removes two vectors from the stack representing position and side. Returns a list of Item Stacks in the block at the given position accessible from the given side (or all if second vector is zero).",
  "moreiotas.page.items.item/inventory/items": "Removes two vectors from the stack representing position and side. Returns a list of Items in the block at the given position accessible from the given side (or all if second vector is zero).",

  "hexcasting.mishap.invalid_value.class.string": "a string",
  "hexcasting.mishap.invalid_value.class.matrix": "a matrix",
  "hexcasting.mishap.invalid_value.class.matrix.square": "a square matrix",
  "hexcasting.mishap.invalid_value.class.numvecmat": "a number, vector, or matrix",
  "hexcasting.mishap.invalid_value.class.possible_matrix": "an iota able to be converted to a matrix",
  "hexcasting.mishap.invalid_value.matrix.wrong_size": "a matrix %s by %s",
  "hexcasting.mishap.invalid_value.matrix.max_size": "a final matrix less than %1$d by %1$d, was %2$d by %3$d",
  "hexcasting.mishap.invalid_value.string.max_size": "a string less than %d chars long, was %d",
  "hexcasting.mishap.bad_item.item.read.offhand": "an entity with an offhand",
  "hexcasting.mishap.bad_item.item.read.any": "an entity that can hold items"
}