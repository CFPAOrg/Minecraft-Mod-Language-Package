{
	"advancement.hexical:root.title": "A Hexical Day",
	"advancement.hexical:root.description": "Begin your exploration of Hexical!",
	"advancements.hexical.acquire_arch_lamp.title": "Guardian Genie",
	"advancements.hexical.acquire_arch_lamp.description": "Acquire an archgenie lamp.",
	"advancements.hexical.acquire_hand_lamp.title": "Diamond in the Rough",
	"advancements.hexical.acquire_hand_lamp.description": "Acquire a hand genie lamp.",
	"advancements.hexical.reload_lamp.title": "Phenomenal Cosmic Powers!",
	"advancements.hexical.reload_lamp.description": "Reload the lamp.",
	"advancements.hexical.educate_lamp.title": "New Order",
	"advancements.hexical.educate_lamp.description": "Educate the genie with new instructions.",
	"advancements.hexical.specklike.title": "Integrated Reality",
	"advancements.hexical.specklike.description": "Like augmented reality, but real.",
	"advancements.hexical.diy_conjuring.title": "DIY Conjuring!",
	"advancements.hexical.diy_conjuring.description": "Add a custom modifier to a mage block.",
	"advancements.hexical.conjure_hexxy.title": "Conjure Hexxy",
	"advancements.hexical.conjure_hexxy.description": "Give Hexxy a physical form in your world.",
	"advancements.hexical.conjure_cake.title": "The Cake is a Lie",
	"advancements.hexical.conjure_cake.description": "Summon a free cake from a mysterious benefactor.",
	"advancements.hexical.hallucinate.title": "Only In My Head",
	"advancements.hexical.hallucinate.description": "Play a sound only you can hear!",

	"block.hexical.hex_candle_cake": "Hex Candle Cake",
	"block.hexical.casting_carpet": "Casting Carpet",
	"block.hexical.hex_candle": "Hex Candle",
	"block.hexical.mage_block": "Mage Block",
	"block.hexical.media_jar": "Media Jar",
	"block.hexical.pedestal": "Pedestal",
	"block.hexical.periwinkle": "Periwinkle",
	"block.hexical.sentinel_bed": "Sentinel Bed",
	"death.attack.magic_missile": "%1$s was struck with arcane force by %2$s",
	"death.attack.magic_missile.item": "%1$s was struck with arcane force by %2$s using %3$s",
	"death.attack.spike": "%1$s was punctured by %2$s",
	"death.attack.spike.item": "%1$s was punctured by %2$s using %3$s",
	"effect.hexical.wooleyed": "Wooleyed",
	"effect.hexical.wooleyed.description": "Helps me unsee some of the horrors I have seen.",
	"entity.hexical.animated_scroll": "Animated Scroll",
	"entity.hexical.magic_missile": "Magic Missile",
	"entity.hexical.mesh": "Mesh",
	"entity.hexical.speck": "Speck",
	"entity.hexical.spike": "Amethyst Spike",
	"key.categories.hexical": "Hexical",
	"key.hexical.evoke": "Evoke",
	"key.hexical.open_hexbook": "Open Hex Notebook",
	"key.hexical.telepathy": "Call Telepathy",
	"item.hexical.animated_scroll_small": "Small Animated Scroll",
	"item.hexical.animated_scroll_medium": "Medium Animated Scroll",
	"item.hexical.animated_scroll_large": "Large Animated Scroll",
	"item.hexical.arch_lamp": "Archgenie Lamp",
	"item.hexical.curio_beauty": "Beauty Curio",
	"item.hexical.curio_bismuth": "Bismuth Curio",
	"item.hexical.curio_charm": "Charm Curio",
	"item.hexical.curio_clover": "Clover Curio",
	"item.hexical.curio_conch": "Conch Curio",
	"item.hexical.curio_cube": "Cube Curio",
	"item.hexical.curio_down": "Down Curio",
	"item.hexical.curio_flute": "Flute Curio",
	"item.hexical.curio_handbell": "Handbell Curio",
	"item.hexical.curio_heart": "Heart Curio",
	"item.hexical.curio_interlock": "Interlock Curio",
	"item.hexical.curio_key": "Key Curio",
	"item.hexical.curio_staff": "Staff Curio",
	"item.hexical.curio_strange": "Strange Curio",
	"item.hexical.curio_truth": "Truth Curio",
	"item.hexical.curio_up": "Up Curio",
	"item.hexical.conjured_compass": "Conjured Compass",
	"item.hexical.grimoire": "Grimoire",
	"item.hexical.hand_lamp": "Hand Genie Lamp",
	"item.hexical.hex_gummy": "Hex Gummy",
	"item.hexical.hexburst": "Hexburst",
	"item.hexical.hextito": "Hextito",
	"item.hexical.gauntlet_staff": "Gauntlet Staff",
	"item.hexical.media_log.0": "Media Log",
	"item.hexical.media_log.1": "Error Log",
	"item.hexical.lei": "Lei",
	"item.hexical.lightning_rod_staff": "Lightning Rod Staff",
	"item.hexical.plush_hexxy": "Hexxy",
	"item.hexical.plush_irissy": "Irissy",
	"item.hexical.plush_pentxxy": "Pentxxy",
	"item.hexical.plush_quadxxy": "Quadxxy",
	"item.hexical.plush_thothy": "Thothy",
	"item.hexical.plush_flexxy": "Flexxy",
	"item.hexical.scarab_beetle": "Scarab Beetle",
	"item.hexical.tchotchke": "Tchotchke",
	"item.minecraft.potion.effect.wooleyed": "Potion of Wooleyeing",
	"item.minecraft.splash_potion.effect.wooleyed": "Splash Potion of Wooleyeing",
	"item.minecraft.lingering_potion.effect.wooleyed": "Lingering Potion of Wooleyeing",
	"item.minecraft.tipped_arrow.effect.wooleyed": "Arrow of Wooleyeing",
	"item.minecraft.potion.effect.long_wooleyed": "Potion of Wooleyeing",
	"item.minecraft.splash_potion.effect.long_wooleyed": "Splash Potion of Wooleyeing",
	"item.minecraft.lingering_potion.effect.long_wooleyed": "Lingering Potion of Wooleyeing",
	"item.minecraft.tipped_arrow.effect.long_wooleyed": "Arrow of Wooleyeing",
	"item.minecraft.potion.effect.strong_wooleyed": "Potion of Wooleyeing",
	"item.minecraft.splash_potion.effect.strong_wooleyed": "Splash Potion of Wooleyeing",
	"item.minecraft.lingering_potion.effect.strong_wooleyed": "Lingering Potion of Wooleyeing",
	"item.minecraft.tipped_arrow.effect.strong_wooleyed": "Arrow of Wooleyeing",
	"itemGroup.hexical.general": "Hexical",
	"stat.hexical.evocation": "Times Wololoed",
	"subtitles.hexical.amethyst_melt": "Amethyst melts",
	"subtitles.hexical.item_dunks": "Item submerges",
	"subtitles.hexical.evoking_murmur": "Player chants",
	"subtitles.hexical.evoking_casts": "Player casts",
	"subtitles.hexical.lamp_activate": "Lamp activates",
	"subtitles.hexical.lamp_deactivate": "Lamp deactivates",
	"subtitles.hexical.player_slurp": "Player slurps",
	"subtitles.hexical.replenish_air": "Lungs inflate",
	"subtitles.hexical.scarab_chirps": "Scarab chirps",
	"subtitles.hexical.sudden_realization": "Idea pops",
	"tooltip.hexical.scroll_glow": "Glowing",

	"hexical.autograph.header": "Autographed by:",
	"hexical.charmed": "Charmed",
	"hexical.cracked.cracked": "Cracked",
	"hexical.cracked.program": "Hex: ",
	"hexical.grimoire.contains": "Contains bindings for ",
	"hexical.scarab.program": "Contains %s",
	"hexical.recipe.transmute.media_free": "Free",
	"hexical.recipe.transmute.media_cost": "Costs %s dust",
	"hexical.recipe.transmute.media_yield": "Yields %s dust",
	"hexical.ledger.stack": "Last Stack Before Mishap:",
	"hexical.ledger.mishap": "Last Mishap Message:",

	"hexcasting.mishap.bad_block.akashic_bookshelf": "an akashic bookshelf",
	"hexcasting.mishap.bad_block.mage_block": "a mage block",
	"hexcasting.mishap.bad_block.pedestal": "a pedestal",
	"hexcasting.mishap.bad_block.flower_spawnable": "air or a flower pot",
	"hexcasting.mishap.bad_block.rotatable": "a block with direction",
	"hexcasting.mishap.bad_block.solid_platform": "a solid platform",
	"hexcasting.mishap.bad_item.animated_scroll": "an animated scroll",
	"hexcasting.mishap.bad_item.anything": "any item",
	"hexcasting.mishap.bad_item.casting_device": "a device capable of casting Hexes",
	"hexcasting.mishap.bad_item.firework_star": "a firework star",
	"hexcasting.mishap.bad_item.grimoire": "a grimoire",
	"hexcasting.mishap.bad_item.nonfull_grimoire": "a grimoire with less than 512 bindings",
	"hexcasting.mishap.bad_item.has_brain": "a villager capable of thought",
	"hexcasting.mishap.bad_item.autographed": "an autographed item",
	"hexcasting.mishap.bad_item.hand_lamp": "a Hand Genie Lamp",
	"hexcasting.mishap.bad_item.lamp": "a lamp",
	"hexcasting.mishap.bad_item.mesh": "a mesh",
	"hexcasting.mishap.bad_item.scarab_beetle": "a scarab beetle",
	"hexcasting.mishap.bad_item.smart_villager": "a Journeyman or greater level villager",
	"hexcasting.mishap.bad_item.sniffer": "a sniffer",
	"hexcasting.mishap.bad_item.speck": "a speck",
	"hexcasting.mishap.bad_item.specklike": "a specklike entity",
	"hexcasting.mishap.bad_item.target.smelting": "an item able to be smelted in a furnace",
	"hexcasting.mishap.bad_item.target.roasting": "an item able to be smelted in a campfire",
	"hexcasting.mishap.bad_item.target.smoking": "an item able to be smelted in a smoker",
	"hexcasting.mishap.bad_item.target.blasting": "an item able to be smelted in a blast furnace",
	"hexcasting.mishap.bad_item.target.stonecutting": "an item able to be cut in a stonecutter",
	"hexcasting.mishap.bad_item.uncharmed": "an uncharmed item",
	"hexcasting.mishap.invalid_value.axis_vector": "an axis vector",
	"hexcasting.mishap.invalid_value.horizontal_axis_vector": "a horizontal axis vector",
	"hexcasting.mishap.invalid_value.class.dye": "a dye",
	"hexcasting.mishap.invalid_value.class.pigment": "a pigment",
	"hexcasting.mishap.invalid_value.conjurable_flower_id": "an identifier of a conjurable flower type",
	"hexcasting.mishap.invalid_value.entity_or_vector": "an entity or a vector",
	"hexcasting.mishap.invalid_value.hopper_source": "an iota that represents a source of items",
	"hexcasting.mishap.invalid_value.hopper_destination": "an iota that represents a receiver of items",
	"hexcasting.mishap.invalid_value.inventory": "an iota that represents an inventory",
	"hexcasting.mishap.invalid_value.lesser_sentinel_list": "a list of vectors",
	"hexcasting.mishap.invalid_value.mesh_design": "a list of up to 32 vectors with magnitudes less than 10",
	"hexcasting.mishap.invalid_value.nonempty_list": "a non-empty list",
	"hexcasting.mishap.invalid_value.number_list": "a non-empty list of numbers",
	"hexcasting.mishap.invalid_value.number_or_vector": "a number or a vector",
	"hexcasting.mishap.invalid_value.small_vector": "a vector of length 2 or less",
	"hexcasting.mishap.invalid_value.text_list": "a list of text iota",
	"hexcasting.mishap.invalid_value.to_pigment": "a colored dye, identifier of a pigment item, an item entity containing a pigment, or a player",
	"hexcasting.mishap.invalid_value.true_dye": "a colored dye",
	"hexcasting.mishap.invalid_value.true_dye_list": "a list of colored dyes",
	"hexcasting.mishap.hexical:active_arch_lamp": "Expected to be cast by an Archgenie Lamp or an Archgenie Lamp in the caster's inventory.",
	"hexcasting.mishap.hexical:can_not_dye": "Expected a dyeable target",
	"hexcasting.mishap.hexical:inedible": "Wristpocketed item is not edible.",
	"hexcasting.mishap.hexical:magic_missile_coordinates": "Could not identify any form of spatial axis.",
	"hexcasting.mishap.hexical:needs_charmed_item": "Expected to be cast by a charmed item.",
	"hexcasting.mishap.hexical:needs_lamp": "Expected to be cast by a genie.",
	"hexcasting.mishap.hexical:needs_hand_lamp": "Expected to be cast by a hand genie.",
	"hexcasting.mishap.hexical:needs_staff": "Expected to be cast by a staff.",
	"hexcasting.mishap.hexical:outside_circle": "Spell exceeds the domain of the spell circle.",
	"hexcasting.mishap.hexical:illegal_jailbreak": "Attempted to crack a casting device with a Hex in it.",
	"hexcasting.mishap.hexical:not_enough_slots": "%d does not fit in the capabilities of the inventory specified by %s.",

	"hexcasting.action.book.hexical:get_arch_lamp_position": "Arch. Refl.: Spatial",
	"hexcasting.action.book.hexical:get_arch_lamp_rotation": "Arch. Refl.: Rotational",
	"hexcasting.action.book.hexical:get_arch_lamp_velocity": "Arch. Refl.: Kinetic",
	"hexcasting.action.book.hexical:get_arch_lamp_use_time": "Arch. Refl.: Temporal",
	"hexcasting.action.book.hexical:get_arch_lamp_media": "Arch. Refl.: Media",
	"hexcasting.action.book.hexical:get_arch_lamp_storage": "Arch. Refl.: Memory",
	"hexcasting.action.book.hexical:get_hand_lamp_position": "Genie Refl.: Spatial",
	"hexcasting.action.book.hexical:get_hand_lamp_rotation": "Genie Refl.: Rotational",
	"hexcasting.action.book.hexical:get_hand_lamp_velocity": "Genie Refl.: Kinetic",
	"hexcasting.action.book.hexical:get_hand_lamp_use_time": "Genie Refl.: Temporal",
	"hexcasting.action.book.hexical:get_hand_lamp_media": "Genie Refl.: Media",
	"hexcasting.action.book.hexical:get_hand_lamp_storage": "Genie Refl.: Memory",
	"hexcasting.action.book.hexical:has_autograph": "Authenticator's Dstl.",
	"hexcasting.action.book.hexical:serialize_pattern": "Chirographer's Purif.",
	"hexcasting.action.book.hexical:deserialize_pattern": "Calligrapher's Purif.",
	"hexcasting.action.book.hexical:shuffle_pattern": "Glyphmaker's Dstl.",
	"hexcasting.action.book.hexical:read_shelf": "Librarian's Purif. II",
	"hexcasting.action.book.hexical:zone_specklike": "Zone Dstl.: Specklike",
	"hexcasting.action.book.hexical:modify_block_bouncy": "Bouncy",
	"hexcasting.action.book.hexical:modify_block_energized": "Energized",
	"hexcasting.action.book.hexical:modify_block_ephemeral": "Ephemeral",
	"hexcasting.action.book.hexical:modify_block_invisible": "Invisible",
	"hexcasting.action.book.hexical:modify_block_replaceable": "Replaceable",
	"hexcasting.action.book.hexical:modify_block_volatile": "Volatile",

	"hexical.page.hexical_changes.title": "Hexical Changes",
	"hexical.page.hexical_changes.0": "I feel strangely more in tune with the ambient _media around me. It feels $(o)friendlier$() somehow. I can even feel it rippling around me, responding to my actions, as if engaging with me. The _media also feels more malleable, more $(o)workable$(); I sense I am able to manipulate it into more precise and specific specialized effects. I can also bring up my $(item)Hex Notebook$() by pressing $(thing)$(k:hexical.open_hexbook).",
	"hexical.page.hexical_changes.1": "I also find my tools more familiar. I don't require the same level of caution with my $(l:items/staff)$(item)Staff$() and can move around during casting, handy for chasing down targets that get out of my line of sight before I can finish my raycast. I shouldn't become too inattentive though, Nature has not become more forgiving of my miscalculations. I can also write directly into my $(l:items/abacus)$(item)Abacus$() with $(l:patterns/readwrite#hexcasting:write)$(action)Scribe's Gambit$().",
	"hexical.page.lightning_rod_staff.0": "By fixing a $(item)Block of Amethyst$() to some $(item)Lightning Rods$(), I can make quite the impressive $(l:items/staff)$(item)Staff$(). It is quite weighty to wield but feels absolutely $(o)electrifying$() to use.",
	"hexical.page.lightning_rod_staff.1": "$(o)I learned there are troubles$(br)Of more than one kind.$(br)Some come from ahead$(br)And some come from behind.$(br2)But I've bought a big bat.$(br)I'm all ready, you see.$(br)Now my troubles are going$(br)To have troubles with $(l)me!$()",
	"hexical.page.gauntlet_staff.0": "$(l:items/staff)$(item)Staves$() are quite heavy to wield and finnicky to hold. Should I tire of them, I can construct a gauntlet-like device that will allow me to grasp and warp the _media to my will with my own hands.",
	"hexical.page.gauntlet_staff.1": "$(o)Even the wand itself seems impractical to me. If you need something to grasp and shape the aura, it should be something appropriate. Something like a glove.$()$(br2)- Strange notes I have recovered from an odd book. Clearly this \"aura\" they speak of is _media.",

	"hexical.page.grimoire.title": "Grimoires",
	"hexical.page.grimoire.0": "By encrusting an $(item)Enchanted Book$() with $(l:items/amethyst)$(item)Charged Amethyst$() and $(l:items/edified)$(item)Edified Wood$()$(), it traps _media within the pages like an echo chamber. I can then introduce up to 512 pattern-to-pattern-list bindings for the $(item)Grimoire$() to keep bouncing endlessly inside.",
	"hexical.page.grimoire.1": "When I then cast a $(l:patterns/patterns_as_iotas)pattern$() associated with a list using my $(l:items/staff)$(item)Staff$() with the $(item)Grimoire$() in my inventory, Nature acts as though I had drawn the full list, allowing me to create shortcuts for tedious tasks like the raycast mantra or large patterns. In addition to adding new $(l:patterns/patterns_as_iotas)patterns$(), the $(item)Grimoire$() can even overwrite Nature's $(l:patterns/patterns_as_iotas)patterns$().$(br2)$(o)If there's a book that you want to read, but it hasn't been written yet, then you must write it.$()",
	"hexcasting.action.hexical:write_grimoire": "Write Grimoire",
	"hexical.page.write_grimoire.summary": "Associates a pattern to a list of patterns in the $(item)Grimoire$() in my offhand.",
	"hexcasting.action.hexical:erase_grimoire": "Erase Grimoire",
	"hexical.page.erase_grimoire.summary": "Erases any associations for a pattern that may exist in the $(item)Grimoire$() in my offhand.",
	"hexcasting.action.hexical:index_grimoire": "Archivist Reflection",
	"hexical.page.index_grimoire.summary": "Gets a list of all patterns modified by the $(item)Grimoire$() in my offhand.",

	"hexical.page.scarab.title": "Scarab Beetle",
	"hexical.page.scarab.0": "A $(item)Scarab Beetle$() is an adorable little amulet that is highly sensitive to _media. When activated, they can intercept patterns rejected by Nature.$(br2)Specifically anything connected to my person casts a pattern that has no meaning to Nature, the scarab steps in and prevents the mishap.$(br2)$(o)Whatever. Go my scarab.$()",
	"hexical.page.scarab.1": "I can instruct my scarab how to judge these \"illegal\" patterns and how to replace it with a different set of patterns instead. This allows me to make $(o)new$() patterns that work seamlessly for only me, even in $(l:items/hexcasting)$(item)casting devices$().",
	"hexical.page.scarab.2": "Teaching them involves $(l:patterns/readwrite#hexcasting:write)$(action)Scribe's Gambit$() to teach a _Hex to them. While scarabs proudly display their learned _Hex, they resist mind-reading from $(l:patterns/readwrite#hexcasting:read)$(action)Scribe's Reflection$(). Teaching them new instructions requires asking them to $(l:patterns/spells/hexcasting#hexcasting:erase)$(action)forget$() first.$(br2)When an illegal pattern is cast, an active scarab will push the rejected pattern to the stack rather than allowing a mishap. It will then cast its learned _Hex before allowing the remainder of the original _Hex to continue.",
	"hexical.page.scarab.3": "The power scarabs allow is to create my own patterns that will work seamlessly in my $(l:items/staff)$(item)Staff$() or $(l:items/hexcasting)$(item)casting devices$() I wield.$(br2)I shall find these patterns concerning the $(l:patterns/pattern_manipulation)meta-manipulation of patterns$() useful if I want to implement advanced processing. I could theoretically create entire infinite families of patterns, similar to the $(l:patterns/numbers)number literals$() and $(l:patterns/stackmanip#hexcasting:mask)$(action)Bookkeeper's Gambits$().",

	"hexical.page.animated_scroll.title": "Animated Scrolls",
	"hexical.page.animated_scroll.0": "$(item)Animated Scrolls$() are mixed with a pinch of $(l:items/amethyst)$(item)Amethyst Dust$(), enchanting the ink to move and wiggle like the patterns I draw with my $(l:items/staff)$(item)Staff$(). Not only that, they can display lists of patterns.$(br2)$(o)You can't be a proper writer without a touch of madness, can you?$()",
	"hexical.page.animated_scroll.1": "I can freely write and rewrite the scroll's patterns at any time, along with reading it back out. The scroll accepts only a list of $(l:patterns/patterns_as_iotas)pattern iotas$() or a lone $(l:patterns/patterns_as_iotas)pattern iota$(), which is automatically wrapped in a list. The $(item)Animated Scroll$() shows one pattern at a time which cycles to the next one once per second. Even when I write the same list to two of them at different moments of their cycle, they display in sync.",
	"hexical.page.animated_scroll.2": "The $(l:items/amethyst)$(item)Amethyst$() seeped into the paper allows me to modify these $(item)Animated Scrolls$() in a variety of aesthetic ways entirely for free.$(br2)I have documented these patterns on the following pages.$(br2)Of note, I can also read and write to these scrolls remotely using the standard patterns.",
	"hexcasting.action.hexical:normalize_scroll": "Restore Scroll",
	"hexical.page.normalize_scroll.summary": "Restores the parchment of a scroll to an unmodified state.",
	"hexcasting.action.hexical:age_scroll": "Age Scroll",
	"hexical.page.age_scroll.summary": "Yellows the parchment of an $(item)Animated Scroll$(), making it bear striking semblance to some ancient scrolls I've been finding.",
	"hexcasting.action.hexical:vanish_scroll": "Vanish Scroll",
	"hexical.page.vanish_scroll.summary": "Causes the $(item)Animated Scroll$() to become invisible leaving only the pattern, making it appear as though the pattern were magically etched into the surface the scroll is on.",
	"hexcasting.action.hexical:color_scroll": "Dye Ink",
	"hexical.page.color_scroll.summary": "Changes the color of an $(item)Animated Scroll's$() ink to the color specified by the vector, with the components being 0 to 1 values of red, green, and blue respectively.",
	"hexcasting.action.hexical:glow_scroll": "Illuminate Ink",
	"hexical.page.glow_scroll.summary": "Causes the ink of an $(item)Animated Scroll$() to brightly glow, regardless of lighting conditions.",

	"hexical.page.hex_candle.title": "Hex Candles",
	"hexical.page.hex_candle.0": "When ignited for the first time, either $(l:patterns/spells/prestidigitation)magically$() or with a $(item)Flint and Steel$(), these delightful little candles have pale white flames. They also seem to not extinguish when flooded. When someone interacts with it though, it copies their pigment. I can also give it with a pigment item to change its color directly. To extinguish, $(thing)$(k:sneak) $(k:use)$().",
    "hexical.page.hex_candle.1": "$(o)The doctor found himself in an immense cave lined with countless quivering candles, each representing the duration of a life.$()",

	"hexical.page.media_jar.title": "Media Jar",
	"hexical.page.media_jar.0": "I can melt down all my $(l:items/amethyst)$(item)Amethyst$() in this little jar! Unfortunately, the glass is too thick for me to draw _media through it, although I have read tales that ancient _Hexcasters were able to solve this issue and were able to bottle up liquid _media in some kind of flask to use in their _Hexes. However, this $(item)Media Jar$() also has some fascinating properties for recycling _media.",
	"hexical.page.media_jar.description": "$(o)There, sure enough, she saw the faint translucent outline of something aboout the size of a hen's egg. There was just a touch of color in it, a pale sea-green, soft and shimmering and very beautiful.",
	"hexical.page.media_jar.1": "I can dunk items into the liquid in order to imbue the item with pure _media. The _media seeps into the item and $(o)alters$() it in a variety of surprising and unpredictable ways.",
	"hexical.recipe.alchemists_take_this.header": "Make Gold",
	"hexical.recipe.alchemists_take_this.text": "Transforms copper ingots to gold.",
	"hexical.recipe.thoughtknot.header": "Weave Thought-Knot",
	"hexical.recipe.thoughtknot.text": "Crafts $(l:items/thought_knot)$(item)Thought-Knots$() by submerging $(item)String$() in a large volume of _media rather than brushing an $(l:items/amethyst)$(item)Amethyst Dust$() on it. A slightly more efficient recipe.",
	"hexical.recipe.unthoughtknot.header": "Release Memory",
	"hexical.recipe.unthoughtknot.text": "Sucks the _media out of a $(l:items/thought_knot)$(item)Thought-Knot$(). Loses _media compared to the crafting recipe, but useful for recycling the little bit of _media.",
	"hexical.recipe.cry_obsidian.header": "Sadden Obsidian",
	"hexical.recipe.cry_obsidian.text": "Infuses $(item)Obsidian$() with _media which leaks out of it, giving it a distinctive crying appearance.",
	"hexical.recipe.uncry_obsidian.header": "Calm Obsidian",
	"hexical.recipe.uncry_obsidian.text": "Returns the _media from $(item)Crying Obsidian$().$(br2)$(o)Therapy! :D$()",
	"hexical.recipe.fossil_fuel.header": "Coal",
	"hexical.recipe.fossil_fuel.text": "Transforms $(item)Charcoal$() into $(item)Coal$() by infusing thought into it and then immediately killing it. Good for compacting.",
	"hexical.recipe.renewable_fuel.header": "Charcoal",
	"hexical.recipe.renewable_fuel.text": "Transforms $(item)Coal$() into $(item)Charcoal$(). Why?",

	"hexical.page.casting_carpet.title": "Casting Carpets",
	"hexical.page.casting_carpet.0": "I can weave $(l:items/amethyst)$(item)Amethyst$() into any ordinary rug to create this wonderfully comfy rug. Stepping on the carpet, I can feel the _media coursing under my feet. It feels disorienting but surprisingly puts me at peace.$(br2)I feel very inspired, as if I were wearing a $(l:items/lens)$(item)Scrying Lens$() although weaker. My _Hexcasting vision seems to have been expanded.",
	"hexical.page.casting_carpet.recipe": "$(o)Why is the red carpet red? It can be any color.$()",

	"hexical.page.media_log.title": "Media Logs",
	"hexical.page.media_log.0": "With _Hexes casting _Hexes, it is easy to lose track of my patterns and Nature is all too happy to punish my carelessness. _Hexcasters of old had a device they called an $(item)$(m)Error$() $(item)Media Log$() that recorded the last few patterns cast even by other $(l:patterns/meta)patterns$(), the last mishap, and the stack right before mishap in order to help them track down their errors. All $(item)Media Logs$() share the same memory.",
	"hexical.page.media_log.1": "Sneak-$(k:use)ing clears the $(item)Media Log$() and starts recording until the next mishap.$(br2)$(o)Now you may only see a pile of receipts, but I see a story. I can see where this story is going. It does not look good.$()",

	"hexical.page.sentinel_bed.title": "Sentinel Beds",
	"hexical.page.sentinel_bed.0": "The $(item)Lodestone$() inside seems to make this block $(o)and the entities shoved in it$() always within my _Hexes' ambit, although I prefer to believe the $(item)Wool$() invites my $(l:patterns/spells/sentinels)$(thing)Sentinel$(). Cats seem to find it cozy too, like a lit furnace or a bed.$(br2)I hear rumors of ancient _Hexcasters using this as some kind of iota storage from any range but I struggle to imagine how.",
	"hexical.page.sentinel_bed.1": "$(o)A comfy bed for my sentinel, it always seems eager to return to it.$()",

	"hexical.page.periwinkle.title": "Periwinkle",
	"hexical.page.periwinkle.0": "There is an long-extinct species of flowers called $(item)Periwinkles$(). In addition to looking pretty, they have great calming abilities; ancient _Hexcasters used them to cope with the great horrors that comes with the Art.$(br2)$(o)A special flower for a special person.$()",
	"hexcasting.action.hexical:periwinkle": "Induce Digging",
	"hexical.page.periwinkle.summary": "Fortunately, the Art of _Hexcasting is a versatile one and provides the means to bring back near anything.",
	"hexical.page.periwinkle.1": "I believe that there is a certain creature capable of $(o)sniffing$() out these flowers. I can cast the previous spell on these $(thing)Sniffers$() to compel them to immediately drop down and unearth these flowers for me.$(br2)Such a perversion of free will comes at a cost, around three $(l:items/amethyst)$(item)Charged Amethyst$(). There may also be the occasional harmless mental $(o)error$(); I am not infallible after all, especially working with something as complex as the mind.",
	"hexical.page.periwinkle.2": "Some magic must be at play here: $(thing)Sniffers$() can dig up $(item)Periwinkles$() from any block at all, even inorganic ones or ones orginating from other planes of reality.$(br2)I imagine that the spell doesn't just \"ask\" the $(thing)Sniffer$() to find the flowers; it $(o)conjures$() them. It fishes around in the brain for the memory of $(item)Periwinkle$() and from that, it receives a template which it instantiates and allows the $(thing)Sniffer$() to dig up. And if it can do it, so $(l:patterns/spells/hexical_spells#hexical:flower)can I$().",
	"hexical.page.lei.summary": "Once I have recovered some $(item)Periwinkles$(), I can craft the flowers into a $(item)Lei$()! The $(item)Lei$() gives a small boost to my _Hexcasting reach, not unlike a $(l:items/lens)$(item)Scrying Lens$() although without the same ability to perceive extra information.",
	"hexical.page.lei.description": "When worn, a $(item)Lei$() prevents Nature from claiming my life as payment for _Hexes.$(br2)Unlike other armor, a $(item)Lei$() can be placed on others if they are not currently wearing anything. Ancient _Hexcasters did this as a sign of endearment and affection due to the $(item)Lei$()'s protective and calming abilities, as well as the effort of obtaining the flowers.",

	"hexical.page.plushies.title": "Plushies",
	"hexical.page.plushies.0": "The ancient _Hexcasters have created these delightful $(item)Plushies$()! They seem to be references to some of the patterns I use in _Hexcasting. I'm not sure if they do anything, but they are a lovely little collector's item.$(br2)The occasional wandering merchant might have picked up one or two during their travels.",
	"hexical.page.plushies.hexxy": "This one looks slightly deranged. I feel slightly anxious having it in my inventory.",
	"hexical.page.plushies.thothy": "This one seems to sleeping. I feel strangely assured with it on me, as if it were watching over me.",
	"hexical.page.plushies.irissy": "This one seems to stare directly at me no matter where I put it. What have you seen, great Irissy?",
	"hexical.page.plushies.quadxxy": "This one might have been made by a bad craftsman. It's not even on a hexagonal grid!",
	"hexical.page.plushies.pentxxy": "... I'm starting to think these were made intentionally.",
	"hexical.page.plushies.flexxy": "The $(o)detail$() on this plushie is unnaturally good. Flexxy must have been quite the idol for this much effort to be poured into its effigy.",

	"hexical.page.wooleyed_potion.title": "Potions of Wooleyeing",
	"hexical.page.wooleyed_potion.0": "These $(item)Potions$() let me forget some of the eldritch knowledge _Hexcasting provides. A base dose removes my ability to trade my own life for _media, useful if I do not want to be carried off from a mere miscalculation. Higher potencies remove the ability to cast great spells entirely, possibly useful as an offensive tool.$(br2)$(o)It is unseen.$()",
	"hexical.page.wooleyed_potion.header": "Potion of Wooleyeing",
	"hexical.page.wooleyed_potion.1": "I can brew one by boiling a $(l:items/periwinkle)$(item)Periwinkle$() into a simple $(item)Awkward Potion$(). $(item)Glowstone Dust$() and $(item)Redstone Dust$() have their standard amplifying and lengthening effects, as with most potions.",

	"hexical.page.pedestal.title": "Pedestals",
	"hexical.page.pedestal.0": "A $(item)Pedestal$() can keep an item suspended safely for me. Unlike an $(item)Item Frame$() or a $(item)Chest$() though, my _Hexes can still interact with the item as though it were just dropped on the floor. An empty $(item)Pedestal$() can pull items near it and it interacts with $(item)Hoppers$() about how I would expect. It works even if the item is swapped out.",
	"hexical.page.pedestal.1": "$(o)A pedestal is as much a prison as any small, confined space.$()",

	"hexical.category.lamp": "Genie Lamp",
	"hexical.category.lamp.desc": "I have heard some tales from the villagers about a magical artifact. The villagers say it contains a spirit that grants wishes, but I suspect that is just grand embellishment evolved over centuries of storytelling. However, legends must arise from something and this item must be exceptionally powerful, and so I dedicate this section to my pursuit and research of it.",

	"hexcasting.action.hexical:lamp_finale": "Finale Reflection",
	"hexical.page.lamp_finale.hand": "The instant I let go of my $(item)Hand Lamp$(), it casts an additional time. I can use this pattern to recognize whether a cast is that finale, and react accordingly.",
	"hexical.page.lamp_finale.arch": "When an $(item)Archgenie Lamp$() is turned off, it casts an additional time. I can use $(l:lamp/hand_lamps#hexical:lamp_finale)$(action)Finale Reflection$() to recognize whether a cast is that last burst of energy.",

	"hexical.page.hand_lamps.title": "Hand Lamps",
	"hexical.page.hand_lamps.0": "So this is the subject of a thousand years of rumor! To think a mere wandering trader could be in possession of such an artifact. The $(item)Hand Lamp$() emanates a vague residue of _media, vacuous in feeling... it reminds me of the $(o)hollow _media structure$() of a $(l:items/focus)$(item)Focus$() that allows it to store iota. I can also sense a presence inside the $(item)Lamp$() with similar magical capabilities to my own.",
    "hexical.page.hand_lamps.1": "The signs are unmistakable; within the $(item)Lamp$() is a $(o)living, sentient$() mind, kept alive and trapped via means not yet known to me. The $(item)Lamp$()'s design is simply ingenious, if its use weren't so horrible. When I hold down the trigger, my patterns are revealed to the \"genie\" as I will be calling it, and it, out of desperation and boredom, casts.",
	"hexcasting.action.hexical:wish": "Wish",
	"hexical.page.wish.summary": "Wish the genie to cast a _Hex for me. Because I am $(o)teaching$() a mind rather than $(o)etching$() a $(l:items/hexcasting)$(item)casting device$(), I can freely reteach the genie a new _Hex any time without losing _media.",
    "hexical.page.hand_lamps.2": "To say it casts is an understatement. It casts $(o)$(l)EVERY INSTANT$(). When holding the switch after wishing, I am treated to a splendid unceasing gush of _media. I can only estimate it must be around twenty times every second. The genie performs the casting with incredible efficiency, producing little of the sounds and particles that accompany other casting methods.",
	"hexical.page.hand_lamps.3": "I have developed some useful patterns to communicate with the genie for information, documented on the next few pages. These patterns must only be cast by the genie within the $(item)Lamp$(), lest I succumb to the Impersonate Genie mishap.$(br2)$(o)I am not a tool for your convenience.$()$(br)Strange murmuring occasionally emitted from the $(item)Lamp$(). Likely disregardable.",
	"hexcasting.action.hexical:get_hand_lamp_position": "Genie Reflection: Spatial",
	"hexical.page.get_hand_lamp_position.summary": "Pushes my original position when I began using the $(item)Hand Lamp$().",
	"hexcasting.action.hexical:get_hand_lamp_rotation": "Genie Reflection: Rotational",
	"hexical.page.get_hand_lamp_rotation.summary": "Pushes my original rotation when I began using the $(item)Hand Lamp$().",
	"hexcasting.action.hexical:get_hand_lamp_velocity": "Genie Reflection: Kinetic",
	"hexical.page.get_hand_lamp_velocity.summary": "Pushes my original velocity when I began using the $(item)Hand Lamp$().",
	"hexcasting.action.hexical:get_hand_lamp_use_time": "Genie Reflection: Temporal",
	"hexical.page.get_hand_lamp_use_time.summary": "Pushes how many times the $(item)Hand Lamp$() has cast since I began using the $(item)Hand Lamp$(). I can divide by by 20 to convert to seconds.",
	"hexcasting.action.hexical:get_hand_lamp_media": "Genie Reflection: Media",
	"hexical.page.get_hand_lamp_media.summary": "Pushes the remaining _media of the $(item)Hand Lamp$(), in units of dust.",
	"hexcasting.action.hexical:set_hand_lamp_storage": "Genie Gambit",
	"hexical.page.set_hand_lamp_storage.summary": "Asks the genie to remember an iota for me. Strangely, the genie seems able to bypass the Transgress Others mishap, perhaps because it requires my active concentration to use this $(item)Hand Lamp$().",
	"hexcasting.action.hexical:get_hand_lamp_storage": "Genie Reflection: Memory",
	"hexical.page.get_hand_lamp_storage.summary": "Requests the iota I had saved to the genie to be pushed to the top of the stack. If I had not previously saved anything, the genie pushes $(l:casting/influences)$(thing)Null$().",

	"hexical.page.genie_lore.title": "On Genies",
	"hexical.page.genie_lore.0": "_Hexcasting burns out the mind from the energy of thought, flooding the consciousness, inundating every neuron... it's euphoric. For $(l:items/staff)$(item)Staves$(), $(l:items/hexcasting)$(item)casting devices$(), and $(l:greatwork/spellcircles)grand constructs$(), the rate of casting is slow enough that a mind can recuperate; I will never hurt myself just by casting too many patterns. With the speeds that $(item)Lamps$() operate at, though, even a mind perfected for _Hexcasting can feel strain.",
	"hexical.page.genie_lore.1": "Fortunately, the $(item)Lamp$() captures the _media that a lesser $(l:items/hexcasting)$(item)casting device$() would have wasted creating noises and particles, and uses that to repair the genie's mind. Almost zero _media is wasted; truly incredible. My only concern is when the $(item)Lamp$() runs dry. Fortunately, I can refill them with _media.",
	"hexcasting.action.hexical:recharge_lamp": "Refuel Lamp",
	"hexical.page.recharge_lamp.summary": "Refuels the $(item)Lamp$() in my offhand. Costs about one $(l:items/amethyst)$(item)Charged Amethyst$(), plus the _media I'm giving the $(item)Lamp$().",
	"hexical.page.genie_lore.2": "The $(item)Lamp$() seems capable of holding a near endless amount of _media. When I fuel it further when it already contains _media, it simply grows its storage reservior to accommodate. It is truly a marvel of _Hexcasting technology.",
	"hexical.page.genie_lore.3": "Upon closer inspiration, the genie within the $(item)Lamp$() seems to just be an extremely minimal, almost artificial network of thought and _media. I hesitate to call it a creature, more of a $(o)wisp$(). Perhaps if I replaced it with a more complex, $(o)sentient$() mind, I can induce some great change. The mind must be of upmost quality to survive the process and still retain a shred of talent; a villager that has spent its life honing a craft to perfection will do quite nicely.",
	"hexcasting.action.hexical:promote_lamp": "Promote Lamp",
	"hexical.page.promote_lamp.summary": "Hold the lamp in my other hand and cast. Costs about ten $(l:items/amethyst)$(item)Charged Amethyst$() and requires the sacrifice.",

	"hexical.page.arch_lamps.title": "Archgenie Lamps",
	"hexical.page.arch_lamps.0": "The $(item)Hand Lamp$() was yanked out of my hands and towards the villager, sucking it in completely and transforming it. The greater mind within these $(item)Archgenie Lamps$() should enable them to be activated and deactivated rather than used and while active in my inventory, they will cast every instant. Picking one up automatically deactivates them though, possibly for safety reasons.",
	"hexical.page.arch_lamps.1": "The output of an $(l:lamp/arch_lamps)$(item)Archgenie Lamp$() is so grand that it saturates the air around me with _media... it's incredible. Unfortunately, if two such lamps are active at once within my inventory, their resonances clash and all lamps in my inventory are rendered useless for a few seconds. I should only have one $(item)Archgenie Lamp$() active at one time, although I can still simultaneously use a $(item)Hand Lamp$().",
	"hexical.page.arch_lamps.2": "$(o)I am a great soft jelly thing. Smoothly rounded, with no mouth, with pulsing white holes filled by fog where my eyes used to be. Rubbery appendages that were once my arms; bulks rounding down into legless humps of soft slippery matter.$(br2)I have no mouth. And I must scream.$()",
	"hexcasting.action.hexical:has_arch_lamp": "Archgenie Purification",
	"hexical.page.has_arch_lamp.summary": "Pushes whether a player currently has an active $(l:lamp/arch_lamps)$(item)Archgenie Lamp$().",
	"hexcasting.action.hexical:get_arch_lamp_position": "Archgenie Reflection: Spatial",
	"hexical.page.get_arch_lamp_position.summary": "Pushes my original position when the $(l:lamp/arch_lamps)$(item)Archgenie Lamp$() started casting.",
	"hexcasting.action.hexical:get_arch_lamp_rotation": "Archgenie Reflection: Rotational",
	"hexical.page.get_arch_lamp_rotation.summary": "Pushes my original rotation when the $(l:lamp/arch_lamps)$(item)Archgenie Lamp$() started casting.",
	"hexcasting.action.hexical:get_arch_lamp_velocity": "Archgenie Reflection: Kinetic",
	"hexical.page.get_arch_lamp_velocity.summary": "Pushes my original velocity when the $(l:lamp/arch_lamps)$(item)Archgenie Lamp$() started casting.",
	"hexcasting.action.hexical:get_arch_lamp_use_time": "Archgenie Reflection: Temporal",
	"hexical.page.get_arch_lamp_use_time.summary": "Pushes how many times the $(l:lamp/arch_lamps)$(item)Archgenie Lamp$() has cast since its activation. I can divide by by 20 to convert to seconds.",
	"hexcasting.action.hexical:get_arch_lamp_media": "Archgenie Reflection: Media",
	"hexical.page.get_arch_lamp_media.summary": "Pushes the remaining amount of _media left in the $(l:lamp/arch_lamps)$(item)Archgenie Lamp$(), in units of dust.",
	"hexcasting.action.hexical:set_arch_lamp_storage": "Archgenie Gambit",
	"hexical.page.set_arch_lamp_storage.summary": "Can be cast by a $(l:items/hexcasting)$(item)casting device$(), $(l:items/staff)$(item)Staff$(), or within the $(l:lamp/arch_lamps)$(item)Archgenie Lamp$() to remember an iota. Unlike $(item)Hand Lamp$(), this is subject to Transgress Others mishap.",
	"hexcasting.action.hexical:get_arch_lamp_storage": "Archgenie Reflection: Memory",
	"hexical.page.get_arch_lamp_storage.summary": "Can be cast by a $(l:items/hexcasting)$(item)casting device$(), $(l:items/staff)$(item)Staff$(), or within the $(l:lamp/arch_lamps)$(item)Archgenie Lamp$() to push the stored iota.",

	"hexical.page.pedestal_circles.title": "Pedestals in Circles",
	"hexical.page.pedestal_circles.0": "$(l:items/pedestals)$(thing)Pedestals$() have magical abilities!$(br2)If they are holding $(l:patterns/readwrite#hexcasting:write)$(item)an item that contains information$() and the $(l:greatwork/spellcircles)$(thing)spell circle$()'s wave passes over them as if they were a $(l:items/slate)$(item)Slate$(), they push the iota onto the stack. If the $(l:items/pedestals)$(thing)Pedestal$() happens to processed inside an unclosed $(l:patterns/patterns_as_iotas#hexcasting:open_paren)Introspection$(), the iota appears inside the constructed list.",
	"hexical.page.pedestal_circles.1": "An $(l:greatwork/spellcircles)$(item)Impetus$() can also $(l:patterns/spells/circle_spells#hexical:absorb_arm)use$() a $(l:items/pedestals)$(item)Pedestal$() as its $(o)other hand$(), useful for spells such as the $(l:patterns/spells/hexcasting)casting device crafting spells$(), $(l:patterns/spells/hexcasting#hexcasting:recharge)$(action)Recharge Item$(), and $(l:patterns/spells/hexcasting#hexcasting:erase)$(action)Erase Item$().$(br2)This is useful for creating automated constructions to $(l:patterns/spells/hexcasting#hexcasting:recharge)recharge$() my $(l:items/hexcasting)casting devices$().",

	"hexical.page.patterns.title": "Pattern Manipulation",
	"hexical.page.patterns.0": "I have discovered a set of patterns that concern the construction and manipulation of other $(l:patterns/patterns_as_iotas)patterns$(). Strangely, they can be used to construct patterns that are $(o)impossible$() to draw with a $(l:items/staff)$(item)Staff$(), although fortunately I don't believe Nature has associated an effect with any of these \"illegal\" patterns. They can be considered free to use with my $(l:items/scarab)$(item)Scarab Beetle$().",
	"hexcasting.action.hexical:shuffle_pattern": "Glyphmaker's Distillation",
	"hexical.page.shuffle_pattern.summary": "Uses the number to shuffle the pattern into one of the same shape, but different stroke order. My notes hint that ancient _Hexcasters used this for some $(o)grand library$().",
	"hexcasting.action.hexical:congruent": "Congruence Distillation",
	"hexical.page.congruent.summary": "Pushes whether two patterns have the same shape, stroke order, and orientation.",
	"hexcasting.action.hexical:similar": "Similarity Distillation",
	"hexical.page.similar.summary": "Pushes whether two patterns have same shape but not necessarily the same stroke order.",
	"hexcasting.action.hexical:serialize_pattern": "Chirographer's Purification",
	"hexical.page.serialize_pattern.summary": "Turns a pattern into a list of numbers for my splitting, analysis, and dissection. The inverse of $(l:patterns/pattern_manipulation#hexical:deserialize_pattern)$(action)Calligrapher's Purification$().",
	"hexcasting.action.hexical:deserialize_pattern": "Calligrapher's Purification",
	"hexical.page.deserialize_pattern.summary": "Turns a list of numbers into a pattern for my viewing and execution. The inverse of $(l:patterns/pattern_manipulation#hexical:serialize_pattern)$(action)Chirographer's Purification$().",
	"hexical.page.patterns.1": "The numbers returned by $(l:patterns/pattern_manipulation#hexical:serialize_pattern)$(action)Chirographer's Purification$() correspond to individual strokes in the pattern. The diagonal stroke that travels upwards and rightwards is labeled 0 and all the other strokes are labelled incrementally in a clockwise manner.$(br2)If I pass in a list of numbers outside the 0-5 range into $(l:patterns/pattern_manipulation#hexical:deserialize_pattern)$(action)Calligrapher's Purification$(), it will apply a $(l:patterns/math#hexcasting:modulo)modulo$() to coerce numbers into the 0-5 range.",
	"hexical.page.patterns.2": "These lists have multiple fascinating properties. By adding or subtracting constant values, I can rotate the pattern. I can splice off the beginning and ends to check for pattern prefixes and suffixes. In cyclical patterns, I can rotate the list by moving the first element to the end or vice versa to cycle the starting position. By carefully altering numbers with list manipulation, I can also make some kind of $(o)backwards stroke$().",
	"hexcasting.action.hexical:draw_pattern": "Handwriting Distillation",
	"hexical.page.draw_pattern.summary": "Takes a pattern and produces a normalized list of vectors. The z-component of these vectors is zero. I feel this may be useful for artistic _Hexes.",

	"hexical.page.telepathy.title": "Telepathy",
	"hexical.page.telepathy": "_Media is the energy of thought and consequently, it can interact with thoughts as well. Unfortunately or perhaps fortunately for me, the minds of _Hexcasters are too resistant to be swayed by _Hexes and even the minds of villagers resist tampering. There is a notable exception though: my own mind is open to my own _media, allowing me to read my own intentions and write thoughts to myself.",
	"hexcasting.action.hexical:get_telepathy": "Telepathic Reflection",
	"hexical.page.get_telepathy.summary": "By focusing on a particular image, I can detect that concentration via this pattern. Pushes how many twentieths of a second I've been intending to $(thing)$(k:hexical.telepathy)$(), or -1 if I am not.",
	"hexcasting.action.hexical:send_telepathy": "Send Thought",
	"hexical.page.send_telepathy.summary": "Momentarily displays an iota above my hotbar. If cast repeatedly, each cast overwrites the previous instantly.",
	"hexcasting.action.hexical:shout_telepathy": "Shout Thought",
	"hexical.page.shout_telepathy.summary": "Grandly flashes an iota across my vision. It obstructs my vision and takes some time to fade in, so I shall only use it sparingly.",
	"hexcasting.action.hexical:pling": "Hallucinate Pling",
	"hexical.page.pling.summary": "Causes me to hear a pling that is inaudible to others.",
	"hexcasting.action.hexical:click": "Hallucinate Click",
	"hexical.page.click.summary": "Causes me to hear a click that is inaudible to others.",
	"hexcasting.action.hexical:left_click": "Offensive Reflection",
	"hexical.page.left_click.summary": "Pushes how many twentieths of a second I've been intending to $(thing)$(k:attack)$(), or -1 if I am not.",
	"hexcasting.action.hexical:right_click": "Manipulative Reflection",
	"hexical.page.right_click.summary": "Pushes how many twentieths of a second I've been intending to $(thing)$(k:use)$(), or -1 if I am not.",
	"hexcasting.action.hexical:moving_up": "Charge Reflection",
	"hexical.page.moving_up.summary": "Pushes how many twentieths of a second I've been intending to $(thing)$(k:forward)$(), or -1 if I am not.",
	"hexcasting.action.hexical:moving_down": "Retreat Reflection",
	"hexical.page.moving_down.summary": "Pushes how many twentieths of a second I've been intending to $(thing)$(k:back)$(), or -1 if I am not.",
	"hexcasting.action.hexical:moving_left": "Dodge Reflection",
	"hexical.page.moving_left.summary": "Pushes how many twentieths of a second I've been intending to $(thing)$(k:left)$(), or -1 if I am not. Can be differentiated from Evade Reflection because d comes to the left of e.",
	"hexcasting.action.hexical:moving_right": "Evade Reflection",
	"hexical.page.moving_right.summary": "Pushes how many twentieths of a second I've been intending to $(thing)$(k:right)$(), or -1 if I am not. Can be differentiated from Dodge Reflection because e comes to the right of d.",
	"hexcasting.action.hexical:jumping": "Leaping Reflection",
	"hexical.page.jumping.summary": "Pushes how many twentieths of a second I've been intending to $(thing)$(k:jump)$(), or -1 if I am not.",
	"hexcasting.action.hexical:sneaking": "Stealthy Reflection",
	"hexical.page.sneaking.summary": "Pushes how many twentieths of a second I've been intending to $(thing)$(k:sneak)$(), or -1 if I am not.",
	"hexcasting.action.hexical:scroll": "Rolling Reflection",
	"hexical.page.scroll.summary": "Pushes the change in scrolling I have performed since I have invoked $(thing)Telepathy$().",

	"hexical.page.akashic_conveniences.title": "Akashic Utilities",
	"hexical.page.akashic_conveniences.0": "Being designed to be receptive to _media and store information, it should not surprise me that there are more conveniences than meets the eye. I can $(thing)$(k:use)$() or $(l:patterns/spells/prestidigitation)magically interact$() with a filled $(l:greatwork/akashiclib)$(item)Bookshelf$() to copy its iota onto my stack. I can also $(thing)$(k:use)$() with a $(l:items/scroll)$(item)Scroll$() to copy the pattern key onto it. There are also a set of patterns to read and write directly to a $(l:greatwork/akashiclib)$(item)Bookshelf$() within ambit for free.",
	"hexcasting.action.hexical:key_shelf": "Librarian's Purification",
	"hexical.page.key_shelf.summary": "Reads the pattern key of an $(l:greatwork/akashiclib)$(item)Akashic Bookshelf$().",
	"hexcasting.action.hexical:read_shelf": "Librarian's Purification II",
	"hexical.page.read_shelf.summary": "Reads the iota from an $(l:greatwork/akashiclib)$(item)Akashic Bookshelf$().",
	"hexcasting.action.hexical:write_shelf": "Librarian's Gambit",
	"hexical.page.write_shelf.summary": "Writes an iota under a pattern key to an $(l:greatwork/akashiclib)$(item)Akashic Bookshelf$().",
    "hexcasting.action.hexical:clear_shelf": "Librarian's Gambit II",
    "hexical.page.clear_shelf.summary": "Clears an $(l:greatwork/akashiclib)$(item)Akashic Bookshelf$().",

	"hexical.page.mage_block.title": "Mage Blocks",
	"hexical.page.mage_block.0": "The blocks from $(l:patterns/spells/blockworks#hexcasting:conjure_block)$(action)Conjure Block$() last forever, are consequently a pain to clean up, and are not too versatile. Luckily, Nature offers an elegant and flexible alternative. These mage blocks come with a suite of $(o)modifiers$(). I could even stack multiple modifiers on one block or reapply a modifier to toggle it off.",
	"hexcasting.action.hexical:conjure_mage_block": "Conjure Mage Block",
	"hexical.page.conjure_mage_block.summary": "Conjures a mage block at the location. Costs about three $(l:items/amethyst)$(item)Amethyst Dust$().$(br2)$(o)I can create a city out of nothing, or I can cover it in volcanic rock.$()",
	"hexcasting.action.hexical:modify_block_bouncy": "Modify Block: Bouncy",
	"hexical.page.modify_block_bouncy.summary": "This modifier makes the block delightfully fun to bounce on! It returns more force to me than regular slime blocks and I notice even if I sneak, the block bounces me regardless.",
	"hexcasting.action.hexical:modify_block_energized": "Modify Block: Energized",
	"hexical.page.modify_block_energized.summary": "This modifier makes the block emit a Redstone signal, with the number corresponding to the power level of the output.",
	"hexcasting.action.hexical:modify_block_ephemeral": "Modify Block: Ephemeral",
	"hexical.page.modify_block_ephemeral.summary": "This modifier takes in a number in addition to a position and shatters the block after many twentieths of a second. Subsequent casts can lengthen or shorten the duration.",
	"hexcasting.action.hexical:modify_block_invisible": "Modify Block: Invisible",
	"hexical.page.modify_block_invisible.summary": "This modifier prevents the block from emitting the telltale particles that accompany my casting, even when being stood on.",
	"hexcasting.action.hexical:modify_block_replaceable": "Modify Block: Replaceable",
	"hexical.page.modify_block_replaceable.summary": "This modifier is useful for construction! With this modifier applied, I find I can easily place another block in the place of the mage block.",
	"hexcasting.action.hexical:modify_block_volatile": "Modify Block: Volatile",
	"hexical.page.modify_block_volatile.summary": "This modifier makes the block break other mage blocks it's touching. Notably, if it breaks another volatile block, that block breaks and so on until every volatile block shatters.",

	"hexical.page.rotation.title": "Rotation",
	"hexical.page.rotation.0": "Rotation is done via with stationary teleportation at a different orientation. The sudden perspective change is already highly disorienting; the floor leaving your feet only to be shoved back onto it again is more so.$(br2)For this reason, Nature abhors entity rotation... or perhaps it trivializes Nature's carefully constructed schemes.",
	"hexcasting.action.hexical:rotate_block": "Rotate Block",
	"hexical.page.rotate_block.summary": "Rotates a block to face a certain vector direction. Requires a rotatable block. Costs about an eighth of an $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexcasting.action.hexical:rotate_entity": "Rotate Entity",
	"hexical.page.rotate_entity.summary": "Rotates an entity by a given change in pitch and yaw, expressed in radians.",
	"hexical.page.rotate_entity.description": "Nature seems to be against entity rotation. Rather than a straightforward vector, Nature demands measurements in radians by which to turn horizontally and vertically.$(br2)The cost is strange and multilayered too. Free if cast on myself, about half of an $(l:items/amethyst)$(item)Amethyst Dust$() for other entities, and the natural aura of _media surrounding a player elevates the cost to about a whole $(l:items/amethyst)$(item)Charged Amethyst$().",

	"hexical.page.autographs.title": "Autographs",
	"hexical.page.autographs.0": "Using precise manipulation of _media, I can magically $(o)etch$() my signature onto any item! It must be done with my $(l:items/staff)$(item)Staff$() as proof of intentionality.$(br2)An autographed item proudly displays every autographer's name in shimmering $(l:items/pigments)$(item)Pigment$().$(br2)$(o)I disagree strongly with whatever work this quote is attached to.$()",
	"hexcasting.action.hexical:autograph": "Autograph",
	"hexical.page.autograph.summary": "Autographs the item in my offhand with my name and $(l:items/pigments)$(item)Pigment$(). Autographing an item with my name already on it moves my name to the top of the list.",
	"hexical.page.autographs.1": "Because an autograph is strongly imprinted on an item, $(l:patterns/spells/hexcasting#hexcasting:erase)$(action)Erase Item$() is insufficient to remove it; a specialized spell is required to extripate autographs.$(br2)However, a spell capable of doing by its very nature will also destroy a $(l:items/focus)$(item)Focus$()'s contents or a $(l:items/hexcasting)$(item)casting device$()'s _Hex and _media. Perhaps that is for the better—my autographed _Hexcasting gifts can be uniquely assured to be untampered.",
	"hexcasting.action.hexical:unautograph": "Unautograph",
	"hexical.page.unautograph.summary": "A more destructive form of $(l:patterns/spells/hexcasting#hexcasting:erase)$(action)Erase Item$(), capable of burning off autographs. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$() similar to $(l:patterns/spells/hexcasting#hexcasting:erase)$(action)Erase Item$().",
	"hexcasting.action.hexical:has_autograph": "Authenticator's Distillation",
	"hexical.page.has_autograph.summary": "Pushes whether a given player has signed a given item stack.",

	"hexical.page.dyes.title": "Dyes",
	"hexical.page.dyes.0": "The dye spell and its specialized iota allows me to alter the color of blocks and entities. The dye iota represents a color, but also seems to represent the $(o)potential$() to be colored. For example, attempting to get the dye of grass returns $(l:casting/influences)$(thing)Null$() but getting the dye of undyed terracotta returns $(thing)uncolored$(), which I can use to \"bleach\" dyeable blocks.",
	"hexcasting.action.hexical:get_dye": "Chromatic Purification",
	"hexical.page.get_dye.summary": "Gets the dye of a block, entity, or block/item identifier.",
	"hexcasting.action.hexical:dye": "Dye",
	"hexical.page.dye.summary": "Dyes a dyeable block or entity. Costs about an eighth of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.dyes.1": "The valid block targets for this spell include beds, candles, cakes with candles, carpets, concrete, concrete powder, glazed terracotta, sand into red sand and vice versa, sandstone and all blocks derived from it into its red variant and vice versa, shulker boxes, stained glass, stained glass panes, terracotta, tulips into their multiple colors, and wool blocks. As for entities, cat collars, dog collars, specklikes, shulkers, and item entities of all of the above blocks are valid.",
	"hexcasting.action.hexical:translate_dye": "Vision Purification",
	"hexical.page.translate_dye.summary": "Translates a dye color into a vector, where each component is from 0 to 1 and represents the red, green, and blueness of the dye respectively.",

	"hexical.page.pigments.title": "Pigment Manipulation",
	"hexical.page.pigments.0": "Like how I can manipulate $(l:patterns/spells/dyes)dyes$() with _Hexcasting, I can also manipulate pigments. I can even store multiple of them and have my _Hexes randomly choose one to give me for example.",
	"hexcasting.action.hexical:to_pigment": "Pigment Purification",
	"hexical.page.to_pigment.summary": "Takes a colored dye iota and transforms it into a pigment, takes a player and returns their pigment, or takes an item containing a pigment and returns its pigment.",
	"hexcasting.action.hexical:sample_pigment": "Pigment Exaltation",
	"hexical.page.sample_pigment.summary": "Samples the pigment at a certain place and time as a vector, where each component is from 0 to 1 and represents the red, green, and blueness respectively.",
	"hexcasting.action.hexical:take_on_pigment": "Internalize Pigment II",
	"hexical.page.take_on_pigment.summary": "Internalizes a pigment iota.",

	"hexcasting.action.hexical:magic_missile": "Magic Missile",
	"hexical.page.magic_missile.summary": "Conjures a small silver of amethyst that always deals a full heart of damage and forces the target backwards. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.magic_missile.0": "The projectile has a few interesting properties. It automatically disappears after roughly ten seconds or shatters upon hitting an entity or block. It pierces all forms of armor and protection. It is also unaffected by gravity and water drag.$(br2)$(o)A weak but enchanting sparkling projectile.$()",
	"hexical.page.magic_missile.1": "The first vector is conjuration location and is quite esoteric: no wonder most _Hexcasters conjure it in front of them. The basic gist is a vector, where my head's position is the origin, $(l:patterns/basics#hexcasting:get_entity_look)$(action)my facing$() is the Z+ axis, $(l:patterns/scrying/entities#hexpose:theodolite)$(action)the vector pointing up from my head$() is the Y+ axis, and the vector from my head pointing rightwards is the X+ axis. For basic purposes, the zero vector conjures it inside my head and a vector resembling (0, 0, n) conjures it n blocks in front of me.",
	"hexical.page.magic_missile.2": "The second vector is velocity and thankfully much less complicated. It is a simple offset vector, similar to the one that $(l:patterns/spells/basic#hexcasting:add_motion)$(action)Impulse$() takes in. Unlike $(l:patterns/spells/basic#hexcasting:add_motion)$(action)Impulse$() though, this vector can be of arbitrary magnitude without incurring additional costs.$(br2)Unlike $(item)Arrows$() though, $(item)Magic Missiles$() will not increase in damage simply by travelling faster. They also apply an odd knockback effect that ignores the entity's mass or the projectile's speed.",

	"hexcasting.action.hexical:prestidigitation": "Prestidigitation",
	"hexical.page.prestidigitation.0": "Rather than a specific effect, this spell performs dozens of minor magical feats. It interacts with a vast array of blocks and entities, and I always discovering new applications for it.$(br2)Notes simply describes it as \"do magic\"; the general rule of thumb is any small effect a wizard can effortlessly will into existence, this spell can replicate.",
	"hexical.page.prestidigitation.summary": "Causes a small magical effect, not too distinct from the original nature or function of the target. Costs about a tenth of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.prestidigitation.1": "I've compiled all of its recorded uses but there is no guarantee all have been found: opens and closes fence gates, trapdoors, and doors of any materials; flicks levers and presses buttons; holds down and releases pressure plates; extinguishes fires of all kinds; lights and extinguishes candles, candle cakes, and campfires; ignites soul fire on blocks that support it; rings bells; strips wood; carves pumpkins; makes a note block play its sound; dries mud into clay; toggles Redstone lamps;",
	"hexical.page.prestidigitation.2": "triggers dispensers and droppers; turns most soil blocks into path blocks and path blocks into tilled soil; drain cauldrons; modifies the state of Redstone repeaters, comparators, and daylight sensors; ignites and deprimes TNT and creepers; shears sheep; toggles armor stand arms; squirts squid; makes pandas sneeze; removes the helmet of a snow golem; inflates pufferfish; takes honeycomb from beehives and nests, and activates some grand _Hexcasting work.",

	"hexical.page.wristpocket.title": "Wristpocket",
	"hexical.page.wristpocket.0": "I can perform the standard magic trick of vanishing an item and bringing it back. The item hides in the $(o)wristpocket$(), where I can use _media to manipulate it. The wristpocketed item stays with me even after death and I can recall it once I can cast again.$(br2)$(o)Because making something disappear isn't enough; you have to bring it back.$()",
	"hexcasting.action.hexical:wristpocket": "Wristpocket",
	"hexical.page.wristpocket.summary": "This spell vanishes the stack of items in my other hand, or conjures it back, swapping if my other hand is holding something. Costs about a eighth of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexcasting.action.hexical:wristpocket_item": "Wristpocket Reflection",
	"hexical.page.wristpocket_item.summary": "Returns the item in my wristpocket, or $(l:casting/influences)$(thing)Null$() if it is empty.",
	"hexical.page.wristpocket.1": "While the items disappear from reality in almost all measurable aspects, certain items' effects can still function even when hidden in the wristpocket.$(br2)I hear of certain $(item)Totems$() that still function within the wristpocket. $(l:items/phials)$(item)Phials$() also can still provide for my _Hexes within the wristpocket.",
	"hexcasting.action.hexical:sleight": "Sleight",
	"hexical.page.sleight.summary": "Performs an act of magical sleight of hand to steal items into my wristpocket or expel my wristpocket back into the world. Costs about a fourth of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.sleight.description": "If given a vector, it conjures my wristpocketed item at that vector. If given an item entity, my wristpocket either pulls in or swaps with the item, depending on whether it is empty.$(br2)$(o)If your sleight of hand causes you to break eye contact with your audience, it is too advanced for your skill level.$()",
	"hexcasting.action.hexical:mage_hand": "Mage Hand",
	"hexical.page.mage_hand.summary": "Projects my mind's hand forward to use my wristpocketed item and interact with the world. If my wristpocket is empty, acts as though a plain hand had reached out. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.mage_hand.description": "If given an entity, it interacts with the entity using the wristpocketed item. If given a vector, it interacts with the block or $(o)space$() with the item.$(br2)Because it only brings forth a mind's hand, it is still tied to me and will not work for casting methods not attached to a player. I can however use it to open $(item)Chests$().$(br2)$(o)A spectral, floating hand appears at a point you choose within range.$()",
	"hexcasting.action.hexical:mage_mouth": "Mage Mouth",
	"hexical.page.mage_mouth.summary": "Makes me eat my wristpocketed item, nourishing me or applying potions to me. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$() and mishaps if the item is not edible.",
	"hexical.page.mage_mouth.description": "Regardless of the time required to usually eat the item, its special effects, my own dietary restrictions, cooldowns on eating the item, or if I'm full, this spell makes me consume it instantly.$(br2)$(o)Let food be thy medicine and medicine be thy food.$()",

	"hexical.page.specks.title": "Specks",
	"hexical.page.specks.0": "I can conjure an image of an iota into the world, called a $(thing)speck$(). Nature allows me to customize them quite extensively, altering their size, thickness of stroke, and more. They also take on my pigment color. Once they are in the world, I can move, rotate, and otherwise alter them for free, regardless of range.",
	"hexcasting.action.hexical:conjure_speck": "Conjure Speck",
	"hexical.page.conjure_speck.summary": "Conjures a speck with the iota, position, and rotation. Costs a negligible amount of _media. Pushes the speck iota to the stack.",
	"hexcasting.action.hexical:move_specklike": "Move Speck",
	"hexical.page.move_specklike.summary": "Moves a speck entity to the position.",
	"hexcasting.action.hexical:rotate_specklike": "Rotate Speck",
	"hexical.page.rotate_specklike.summary": "Rotates a speck entity to face the vector.",
	"hexcasting.action.hexical:roll_specklike": "Roll Speck",
	"hexical.page.roll_specklike.summary": "Accepts a number between 0 and 1, representing a fraction of a full rotation, and rotates the speck's image by that amount.",
	"hexcasting.action.hexical:iota_speck": "Alter Speck",
	"hexical.page.iota_speck.summary": "Changes the speck's iota.",
	"hexcasting.action.hexical:lifetime_specklike": "Time Speck",
	"hexical.page.lifetime_specklike.summary": "Commands the speck to disappear after that many twentieths of a second.",
	"hexcasting.action.hexical:size_specklike": "Resize Speck",
	"hexical.page.size_specklike.summary": "Scales the speck, can range from 0 to 10. Represents size in blocks and is zero by default.",
	"hexcasting.action.hexical:thickness_specklike": "Thicken Speck",
	"hexical.page.thickness_specklike.summary": "Changes the stroke thickness of a pattern speck, can range from 0 to 10. Represents twentieths of a block, and is zero by default.",
	"hexcasting.action.hexical:pigment_specklike": "Paint Speck",
	"hexical.page.pigment_specklike.summary": "Splashes a pigment iota onto the speck, changing its color after creation.",
	"hexcasting.action.hexical:kill_specklike": "Dismiss Speck",
	"hexical.page.kill_specklike.summary": "Forces a speck to disappear.",
	"hexcasting.action.hexical:zone_specklike": "Zone Distillation: Speck",
	"hexical.page.zone_specklike.summary": "Returns specks similarly to other $(l:patterns/entities#hexcasting:zone_entity/animal)zone distillation$() patterns.",

	"hexical.page.projectiles.title": "Projectiles",
	"hexical.page.projectiles.0": "While conjuring projectiles from pure _media manipulation would be prohibitively expensive, Nature offers a set of cheaper spells for some projectiles.$(br2)These spells push the conjured entity to the stack, which I must manually $(l:patterns/spells/basic#hexcasting:add_motion)$(action)propel$() in my desired direction.$(br2)$(o)Can I offer you a nice egg in this trying time?$()",
	"hexcasting.action.hexical:egg": "Conjure Egg",
	"hexical.page.egg.summary": "Conjures an egg. May be fertile. Costs about two $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexcasting.action.hexical:llama_spit": "Conjure Spit",
	"hexical.page.llama_spit.summary": "Conjures a sticky low-damaging projectile. Costs about a fourth of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexcasting.action.hexical:snowball": "Conjure Snowball",
	"hexical.page.snowball.summary": "Conjures a harmless snowball. Costs about half of an $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexcasting.action.hexical:ghast_fireball": "Conjure Fireball",
	"hexical.page.ghast_fireball.summary": "Conjures an explosive fireball that can be $(o)percussively propelled$(). Costs about three $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.projectiles.1": "There exist other spells too complex to be given justice in this chapter—I have dedicated other chapters to them.$(br2)$(l:patterns/spells/magic_missile#hexical:magic_missile)$(action)Magic Missile$() is a standard quick and versatile spear of amethyst that can be produced and fired at arbitrary speed.$(br2)I can also utilize $(l:patterns/spells/pyrotechnics)fireworks$() for battle.$(br2)Finally, a $(l:patterns/spells/block_mimicry#hexical:dispense)$(action)certain spell$() allows the ability to fire potions and arrows.",

	"hexical.page.hexical_spells.title": "Hexical Spells",
	"hexcasting.action.hexical:confetti": "Confetti",
	"hexical.page.confetti.summary": "Creates a loud bang similar to that of $(l:patterns/spells/pyrotechnics)Fireworks$() and a burst of colorful particles, either in a direction or in a radial blast. Costs about half of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.confetti.description": "The particles are harmless and flutter through the air for quite long until they reach the ground. The first vector is a position and the second controls direction. If it is a number, it indicates speed to explode in in all directions; a vector makes the particles tend towards the given direction. Both the number and the vector's magnitude may not exceed 2.$(br2)$(o)The rest is confetti.$()",
	"hexcasting.action.hexical:vibration": "Vibrate",
	"hexical.page.vibration.summary": "Causes a visible pulse of vibration from a vector to an entity or vector over a number of seconds. Costs about a sixteenth of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.vibration.description": "The effect, while resembling the pulses produced by $(item)Sculk Sensors$(), is entirely distinct. It is a purely visual effect.$(br2)The duration can range anywhere from zero seconds to ten seconds.$(br2)$(o)If a tree falls in a forest and no one is around to hear it, does it make a sound?$()",
	"hexcasting.action.hexical:sparkle": "Sparkle",
	"hexical.page.sparkle.summary": "Produces a small sparkling particle of my desired position, color, and lifespan. Costs a negligible amount of _media.",
	"hexical.page.sparkle.description": "The first vector controls position and the second vector controls color. Each component should range from 0 to 1 and corresponds to red, green, and blueness respectively. The final number dictates how long the sparkle should remain in twentieths of a second, up to five seconds.$(br2)$(o)All that glitters is not gold.$()",
	"hexcasting.action.hexical:block_ping": "Ping Block",
	"hexical.page.block_ping.summary": "Concentrates a little cube of _media to be visible to the naked eye, useful for highlighting things to me and those around me. Costs a negligible amount of _media.",
	"hexical.page.block_ping.description": "The first vector controls position and the second vector controls color. Each component should range from 0 to 1 and corresponds to red, green, and blueness respectively. The final number dictates how long the ping should remain in twentieths of a second, up to ten seconds.$(br2)$(o)LOOK AT THIS$()",
	"hexcasting.action.hexical:crack_device": "Crack Device",
	"hexical.page.crack_device.summary": "When casted on a $(l:items/hexcasting)$(item)casting device$() without a _Hex, $(o)cracks it$(). Cracked casting devices proudly display their _Hexes. Costs about one $(l:items/amethyst)$(item)Charged Amethyst$().",
	"hexical.page.crack_device.description": "This spell will blind me for a quite a duration if I attempt to expose the innerworkings of an already-written device. For a moment though, I believe I had glimpsed the _Hex before my eyes and brain filled with _media.$(br2)$(o)Nowadays time runs by electricity and vibrating crystals of quarts and goodness know what else.$().$(br)- clearly a reference to $(l:items/amethyst)$(item)Amethyst$().",
	"hexcasting.action.hexical:place_block_type": "Construct",
	"hexical.page.place_block_type.summary": "Places a specific type of block from my inventory at a position, orientation, and horizontal orientation. Costs about one-fourth of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.place_block_type.description": "The orientation is an axis vector representing the direction I would face when placing the block. For blocks like doors and stairs, orientation should be either up or down and horizontal orientation determines direction.$(br2)$(o)In the psychology of the modern civilized human being, it is difficult to overstate the significance of the house.$()",
	"hexcasting.action.hexical:flower": "Conjure Flower",
	"hexical.page.flower.summary": "Conjures a flower of my choosing at a location. I must have identified this flower at some point before. Costs about a quarter of an $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.flower.description": "The block under the target position must have a flat top surface to allow rooting. It does not necessarily need to be able to support the flower naturally, although any little movement may cause the flower to break if conjured on an incompatible block. Alternatively, the spell will fill a flower pot if possible.$(br2)$(o)There was a fool who praised me for the magic I acquired. That's all.$()",
	"hexcasting.action.hexical:light": "Illuminate",
	"hexical.page.light.summary": "Conjures a completely invisible light with illumination strength of my choosing at a location. Costs about a quarter of an $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.light.description": "The block that it is into must be empty or extremely weak. The illumination strength can be a number between 1 and 15, inclusive. If I target a space where a light already exists, the spell is free and particleless.$(br2)By holding a $(l:items/lens)$(item)Scrying Lens$(), I can see the lights and place a block in their place to remove them.$(br2)$(o)The light blinds us. It is only in the dark that we see clearly.$()",
	"hexcasting.action.hexical:gasp": "Gasp",
	"hexical.page.gasp.summary": "Instantly replenishes a creature's air bubbles. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.gasp.description": "Regardless of amount of breath restored, this spell costs exactly one dust so I should ideally wait as long as I safely can before casting this spell. I will find it useful while diving, being teleported into a block, or even keeping sea creatures alive on land.$(br2)$(o)The best way to observe a fish is to become a fish.$()",
	"hexcasting.action.hexical:parrot": "Squawk",
	"hexical.page.parrot.summary": "Emits a sound associated with a mob near a location, as though a parrot had imitated that mob. Costs about a half of an $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.parrot.description": "This spell does nothing but still consumes my _media if a parrot can not replicate the sound.$(br2)I can already imagine this spell's use for playing practical jokes on my friends and enemies. Perhaps Nature does permit me to have fun occasionally with my _Hexes.$(br2)$(o)Hisss...$()",

	"hexical.page.break_special.title": "Specialized Breaking",
	"hexcasting.action.hexical:break_fortune": "Extract Block",
	"hexical.page.break_fortune.summary": "Targets structural faults in a block, resulting in a higher yield. Costs about one, three, and five $(l:items/amethyst)$(item)Amethyst Dust$() when power input is 0, 1, and 2 respectively.",
	"hexcasting.action.hexical:break_silk": "Collect Block",
	"hexical.page.break_silk.summary": "Breaks a block gently, perserving the block better than standard mining. Costs about half of an $(l:items/amethyst)$(item)Amethyst Dust$().",

	"hexical.page.conjurable_delights.title": "Conjurable Delights",
	"hexical.page.conjurable_delights.0": "Ancient _Hexcasters seem to have devised spells to conjure a multitude of items, to both further their Art and to convenience their collaboration. I can only link these items together by their being $(o)vaguely$() edible.$(br2)$(o)What nicer thing can you do for somebody than make them breakfast?$()",
	"hexcasting.action.hexical:conjure_gummy": "Hex Gummy",
	"hexical.page.conjure_gummy.summary": "Conjures a $(item)Hex Gummy$(): a delightful light snack that also provides about a tenth of an $(l:items/amethyst)$(item)Amethyst Dust$()'s worth of _media. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexcasting.action.hexical:conjure_hexburst": "Conjure Hexburst",
	"hexical.page.conjure_hexburst.summary": "Conjures a $(item)Hexburst$() of the given iota at the location. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$() and is subject to the Transgress Others mishap.",
	"hexical.page.conjure_hexburst.description": "$(item)Hexbursts$() are edible items created by taking an iota and wrapping _media around it, over and over until it gains size. When eaten, a $(item)Hexburst$() instantly adds its iota to the consumer's stack. I shall find this property considerably useful if I ever want to trade my entity reference. Should my stack have an unclosed $(l:patterns/patterns_as_iotas#hexcasting:open_paren)Introspection$(), it pushes it into the forming list.",
	"hexcasting.action.hexical:conjure_hextito": "Conjure Hextito",
	"hexical.page.conjure_hextito.summary": "Conjures a $(item)Hextito$() of the given _Hex at the location. Costs about two $(l:items/amethyst)$(item)Amethyst Dust$() and is subject to the Transgress Others mishap.",
	"hexical.page.conjure_hextito.description": "$(item)Hextitos$() are triangular crunchy snacks I can conjure. When consumed, the consumer immediately casts its _Hex, using their $(item)$(l:items/staff)Staff$()'s stack unlike a regular $(l:items/hexcasting)$(item)casting device$(). I shall find them useful to make simple actions like raycasts or to give out limited uses of a _Hex I have designed. If a consumer's stack has an unclosed $(l:patterns/patterns_as_iotas#hexcasting:open_paren)Introspection$(), it will not cast, making it quite safe to hand out.",
	"hexcasting.action.hexical:conjure_compass": "Conjure Compass",
	"hexical.page.conjure_compass.summary": "Conjures a $(item)Conjured Compass$() at the location pointing towards the second vector, linked to the current dimension. Costs about three $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.conjure_compass.description": "If read with $(l:patterns/readwrite#hexcasting:read)$(action)Scribe's Reflection$(), it returns a unit vector pointing towards the location inside it. In other dimensions, the $(item)Compass$() spins erratically and reading it yields only $(l:casting/influences)$(thing)Null$(). Once I am done with a $(item)Compass$(), I can eat it as a light snack.$(br2)$(o)Aye, the compass doesn't point North. But we're not trying to find North, are we?$()",

	"hexical.page.spike.title": "Conjure Spike",
	"hexical.page.spike.0": "I hear rumors of a sorcerer illager that can summon fangs from the ground. While I find it hard to believe that villagers can shift _media, I have taken inspiration from those myths and created this spell that brings forth spikes from the ground to skewer targets.",
	"hexcasting.action.hexical:spike": "Conjure Spike",
	"hexical.page.spike.summary": "Takes a non-air position, an axis vector, and a delay in seconds up to ten seconds long and conjures a spike at that location. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.spike.1": "Each spike takes about a half second to strike and deal a hefty three full hearts of damage before slowly sinking back into the ground. If I cast this spell where a spike has not yet disappeared, it will do nothing. Spikes will also throw back targets in the direction they were conjured.",

	"hexical.page.block_mimicry.title": "Block Mimicry",
	"hexical.page.block_mimicry.0": "The Art of _Hexcasting is a versatile craft; I can use _media to simulate a lot of the actions that I rely on blocks to perform without requiring any physical infrastructure. With just my staff, I can $(l:patterns/spells/block_mimicry#hexical:stonecut)cut stone into stairs$(), $(l:patterns/spells/block_mimicry#hexical:dispense)launch arrows$(), and $(l:patterns/spells/block_mimicry#hexical:smelt)cook$() my items for me.",
	"hexical.page.block_mimicry.1": "Tales speak of ancient _Hexcasters that have set up entire magical factories without placing a single block.$(br2)$(o)And I need a bigger office, I need a bigger chair$(br)A bigger desk, a bigger staff$(br)A bigger hat to wear",
	"hexcasting.action.hexical:dispense": "Dispense",
	"hexical.page.dispense.summary": "Takes an item entity, a position, and an axis vector and dispenses the item. For most applications, costs about half of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.dispense.description": "More specifically, this spell acts as though a dispenser suddenly appears with the item loaded and fires the dispenser.$(br2)If this spell is used for any type of $(item)Arrow$(), the price increases to a full $(l:items/amethyst)$(item)Charged Amethyst$(). I wonder why Nature would have such an adverse reaction to this specific application. Perhaps I would be too powerful?$(br2)$(o)Upon request, I can also perform a hug.$()",
	"hexcasting.action.hexical:smelt": "Cook",
	"hexical.page.smelt.summary": "Takes an item entity and cooks it as if in a $(item)Furnace$(). Costs about one $(l:items/amethyst)$(item)Amethyst Dust$() for every ten seconds that the $(item)Furnace$() would need to have been active.",
	"hexcasting.action.hexical:roast": "Roast",
	"hexical.page.roast.summary": "A specialized variant of $(l:patterns/spells/block_mimicry#hexical:smelt)$(action)Cook$() that simulates a $(item)Campfire$() instead. This has a much more limited set of possibilities; I am unsure why I would ever use this.",
	"hexcasting.action.hexical:smoke": "Smoke",
	"hexical.page.smoke.summary": "A specialized variant of $(l:patterns/spells/block_mimicry#hexical:smelt)$(action)Cook$() that simulates a $(item)Smoker$() instead, making it unable to process anything but foods but at a faster rate, making the spell cheaper.",
	"hexcasting.action.hexical:blast": "Blast",
	"hexical.page.blast.summary": "A specialized variant of $(l:patterns/spells/block_mimicry#hexical:smelt)$(action)Cook$() that simulates a $(item)Blast Furnace$() instead, making it unable to process anything but ores but at a faster rate, making the spell cheaper.",
	"hexcasting.action.hexical:stonecut": "Cut Stone",
	"hexical.page.stonecut.summary": "Takes an item entity and cuts the item into the shape of an item identifier. Costs about an eighth of one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.stonecut.description": "The target item must be possible to carve from the source item in a $(item)Stonecutter$(). For instance, $(item)Stone$() can be cut into all manners of stairs, slabs, and walls.$(br2)$(o)I saw the angel in the marble and carved until I set him free.$()",

	"hexical.page.circle_spells.title": "Circle Spells",
	"hexical.page.circle_spells.0": "When the _media courses through the boundaries of a $(l:greatwork/spellcircles)$(thing)circle$(), it saturates the domain inside with _media, allowing far greater magical effects and flexibility of _media manipulation than I am used to. The following are some spells which rely on that increased density of _media or properties of the $(l:greatwork/spellcircles)circle$() itself and are to only be cast by an $(l:greatwork/impetus)$(item)Impetus$().",
	"hexcasting.action.hexical:displace": "Displace",
	"hexical.page.displace.summary": "Teleports an entity within the $(l:greatwork/spellcircles)circle$() to another point within the same $(l:greatwork/spellcircles)$(thing)circle$(). Unlike $(l:patterns/great_spells/teleport)$(action)Greater Teleport$(), this spell takes in world coordinates rather than an offset. Free.",
	"hexcasting.action.hexical:absorb_arm": "Appendage",
	"hexical.page.absorb_arm.summary": "Allows a $(l:greatwork/spellcircles)circle$() to hook onto a $(l:items/pedestal)$(item)Pedestal$() within ambit to use as its $(o)other arm$(). Useful for certain spells that demand an item held in my other hand. Free.",
	"hexcasting.action.hexical:create_dust": "Export Media",
	"hexical.page.create_dust.summary": "Exports _media out of an $(l:greatwork/impetus)$(item)Impetus$() at a rate of about eleven $(l:items/amethyst)$(item)Amethyst Dust$() spent per ten $(l:items/amethyst)$(item)Amethyst Dust$() created. Takes a location and a number of up to a stack of $(l:items/amethyst)$(item)Amethyst Dust$().",

	"hexical.page.evocation.title": "Evocation",
	"hexical.page.evocation.0": "_Media is the energy of thought, so it stands to reason that I should be able to simply $(o)think$() magic into existence rather than waving around a $(item)$(l:items/staff)Staff$(). After all, I have roughly two chunks' worth of $(l:items/amethyst)$(item)Charged Amethyst$() in me at my prime, double that of my $(l:items/staff)$(item)Staff$(). While I can not yet shift arbitrary effects into reality, I can bring it forth a prepared _Hex with a mere gesture, taking _media from my inventory.",
	"hexcasting.action.hexical:set_evocation": "Inculcate",
	"hexical.page.set_evocation.summary": "Etches a _Hex, allowing me to cast it by holding $(thing)$(k:hexical.evoke)$() for one second. Costs about one $(l:items/amethyst)$(item)Charged Amethyst$().$(br2)$(o)Anthony thought at it, and it turned a flip-flop on the grass, and lay trembling, its eyes gleaming in small black terror.$()",
	"hexcasting.action.hexical:get_evocation": "Evocation Reflection",
	"hexical.page.get_evocation.summary": "Pushes the _Hex etched into my mind.",
	"hexcasting.action.hexical:is_evoking": "Evoker Reflection",
	"hexical.page.is_evoking.summary": "Pushes how long since a player has been evoking. Is -1 if they are not currently evoking.",
	"hexical.page.evocation.1": "The ancient texts I have learned this technique from reveals many other interesting trifles: _Hexcasters used to perform evocation without any a _Hex, as a greeting or group ritual by waving their arms and chanting in unison. Experiments have also been done to see if a villager could be granted the ability to shift _media but the results of those experiments were either never documented or have been lost to time.",

	"hexical.page.hotbar.title": "Hotbar",
	"hexcasting.action.hexical:get_hotbar": "Handy Reflection",
	"hexical.page.get_hotbar.summary": "Pushes a number relating to which of my current items I am currently holding.",
	"hexcasting.action.hexical:set_hotbar": "Switch",
	"hexical.page.set_hotbar.summary": "Takes a number 0 to 8 and switches my current item to it.$(br2)$(o)Remember, switching to your pistol is always faster than reloading.$()",

	"hexical.page.lesser_sentinels.title": "Lesser Sentinels",
	"hexical.page.lesser_sentinels.0": "A bit of sentinel theory: a $(l:patterns/spells/sentinels)$(thing)Sentinel$() is metaphysically-detached shard of my $(thing)Self$(). I can banish, query, and summon it via link but each interaction requires a bit of _media to facilitate the \"handshake\". I can $(l:patterns/great_spells/greater_sentinel)$(action)give even more of my $(thing)Self$(), essentially creating a separate yet near-equally conscious fragment that can cast _Hexes beyond my regular reach and even \"walk\".",
	"hexical.page.lesser_sentinels.1": "$(thing)Lesser Sentinels$() are a more diminutive construction: little more than a tagged pocket of _media blessed with a whisper of my $(thing)Self$(). They are just enough to hold their ground where deployed and to be visible to me.$(br2)Due to their lesser sentience, I can establish connections, reposition, banish, and bring forth more of them with ease. I can only have one $(l:patterns/spells/sentinels)$(thing)Sentinel$() out at once; I can have a virtually endless number of $(thing)Lesser Sentinels$().",
	"hexcasting.action.hexical:set_lesser_sentinels": "Deploy Sentinels",
	"hexical.page.set_lesser_sentinels.summary": "Dismisses any existing $(thing)Lesser Sentinels$() and deploys a $(thing)Lesser Sentinel$() at every position in the list.",
	"hexcasting.action.hexical:get_lesser_sentinels": "Infiltration Reflection",
	"hexical.page.get_lesser_sentinels.summary": "Returns a list of vectors corresponding to the positions of all my $(thing)Lesser Sentinels$().",

	"hexical.page.pyrotechnics.title": "Pyrotechnics",
	"hexical.page.pyrotechnics.0": "I have stumbled across some spells related to pyrotechnics. The _media hums quite festively around the patterns, as if they were once used for grand celebrations, although I shudder to imagine how effective they'd be as a weaponized projectile.$(br2)$(o)You don’t need to say anything. Just watch the fireworks.$()",
	"hexcasting.action.hexical:simulate_firework": "Simulate Firework",
	"hexical.page.simulate_firework.summary": "Analyzes the $(item)Firework Star$() in my other hand and conjures a firework of that star, with the position, velocity, and gunpowder amount specified. Costs about one $(l:items/amethyst)$(item)Amethyst Shard$().",
	"hexcasting.action.hexical:conjure_firework": "Conjure Firework",
	"hexical.page.conjure_firework.summary": "$(br)Conjures a firework of my $(o)exact$() specifications. It may be one of the most complex spells in existence. Costs equivalently to the other firework spell.",
	"hexical.page.conjure_firework.0": "$(o)Basic Theory$()$(br2)The first two parameters of the spell are simple position and velocity. The third parameter dictates flight duration as a number from 1 to 3. I can imagine it as being the amount of $(item)Gunpowder$() I would add to a firework rocket.$(br2)The remaining parameters can be imagined as specifications for a $(thing)virtual firework star.$()",
	"hexical.page.conjure_firework.1": "$(o)Shape$()$(br2)The fourth parameter controls the shape of the explosion, based off a number 0 to 3.$(br)- 0 is a simple, small ball-shaped explosion.$(br)- 1 is a large ball-shaped explosion.$(br)- 2 is a star-shaped explosion.$(br)- 3 is a large creeper face-shaped explosion.",
	"hexical.page.conjure_firework.2": "$(o)Colors$()$(br2)The fifth and sixth parameters are lists of $(l:patterns/spells/dyes)dyes$(). The first list controls the colors of the firework's initial burst, while the second controls the colors that the first particles fade into. There must be at least one dye specified for the first list, but the second list can be empty if I do not want any colors to fade into.",
	"hexical.page.conjure_firework.3": "$(o)Special Effects$()$(br2)The seventh parameter controls whether the particles of the firework flicker, as if adding glowstone to the $(item)virtual Firework Star$().$(br2)The eighth parameter controls whether the particles of the firework leave trails, as if adding a diamond to the $(item)virtual Firework Star$().",

	"hexical.page.rename.title": "Item Renaming",
	"hexcasting.action.hexical:item_name": "Name Item",
	"hexical.page.item_name.summary": "Takes an item and renames it to the text given. Resets name if given $(l:casting/influences)$(thing)Null$(). Free.",
	"hexcasting.action.hexical:item_lore": "Describe Item",
	"hexical.page.item_lore.summary": "Takes an item and a list of text to append as a description. Clears if given $(l:casting/influences)$(thing)Null$(). Free.",

	"hexical.page.shaders.title": "Shaders",
	"hexical.page.shaders.0": "These spells revolve around manipulating my light receptors, allowing me to alter my vision for utility and fun. These spells break upon death or me leaving this world and returning at a later date.$(br2)$(o)You sense that something is off. You feel in harmony with the magic. Maan, that color smells interesting. Usual concepts don't apply.$()",
	"hexcasting.action.hexical:shader_clear": "Clear Vision",
	"hexical.page.shader_clear.summary": "Breaks any shader spell currently applied to me. Useful for \"bleaching\" my eyes after too much experimentation.",
	"hexcasting.action.hexical:shader_owl": "Pierce Darkness",
	"hexical.page.shader_owl.summary": "Greatly augments my ability to see in the dark, although the light resultingly becomes extremely blinding.",
	"hexcasting.action.hexical:shader_lines": "Visualize Forms",
	"hexical.page.shader_lines.summary": "Transforms the world into a thin outline of black and white. Possibly useful for identifying subtle contrasts.",
	"hexcasting.action.hexical:shader_tv": "Broadcast Vision",
	"hexical.page.shader_tv.summary": "Alters my vision to contain strange lines and make objects towards the center of my vision bulge \"towards\" me. Seems to be in reference to something...",
	"hexcasting.action.hexical:shader_media": "Identify Importance",
	"hexical.page.shader_media.summary": "Transforms my vision to perceive only the most important things...",
	"hexcasting.action.hexical:shader_spider": "Split Vision",
	"hexical.page.shader_spider.summary": "Splits my vision into multiple sections, similar to what a spider might see. I am unsure whether it actually grants me more vision...",

	"hexical.page.hopper.title": "Hopper",
	"hexical.page.hopper.0": "This spell is explicitly designed for the precise and mass transport of items from place to place, supporting a wide array of blocks and entities to pull and push to.$(br2)$(o)allows arbitrary objects to be retrieved... and instantiated in reality... arbitrary information between arbitrary data sources$()",
	"hexcasting.action.hexical:hopper": "Hopper",
	"hexical.page.hopper.summary": "Instantly transports all items from $(thing)source$() to $(thing)destination$(). Costs about one $(l:items/amethyst)$(item)Amethyst Shard$() regardless of mass transferred. Numbers are optional; details later.",
	"hexical.page.hopper.1": "Entity references to the caster, an $(thing)Armor Stand$(), a $(thing)Minecart with a Chest$(), a $(thing)Hopper Minecart$(), or a $(thing)Boat with a Chest$() within ambit are valid $(thing)sources$() that refer to the respective inventory. They also serve as valid $(thing)destinations$().$(br2)Entity references to $(thing)Item Frames$() and dropped $(thing)Items$() are also valid $(thing)sources$() and $(thing)destinations$(). For $(thing)Items$(), pushes will attempt to stack onto it.",
	"hexical.page.hopper.2": "Vectors are also possible $(thing)sources$() and $(thing)destinations$(). If a block with an inventory does not exist at a location, it is a valid $(thing)destination$() to push items out into the world.$(br2)If a block with an inventory does exist, it serves as both a $(thing)source$() and a $(thing)destination$(). If the vector is closest to the center, it pushes and pulls from any inventory slot; if it is instead closer to a face, it will only push to and pull from that face, similar to $(thing)Hoppers$().",
	"hexical.page.hopper.3": "If I pass in $(l:casting/influences)$(thing)Null$(), it seems to refer to my $(thing)Ender Chest$()'s inventory. Naturally, this means it will only work for humans casting this spell.$(br2)Because $(thing)sources$() and $(thing)destinations$() can never be numbers, it is distinguishable to pass an optional number after a $(thing)source$() or $(thing)destination$(). This is the num? in the pattern signature and correlates to $(o)slot$().",
	"hexical.page.hopper.4": "Slots are a slightly esoteric way that Nature has chosen to represent specific spaces in the inventory. For example, 0, 1, 2, and 3 corresponds to boots, leggings, chestplate, and helmet spaces of an $(thing)Armor Stand$() $(thing)source$() respectively. Passing in slots allows me to dictate to $(l:patterns/spells/hopper#hexical:hopper)$(action)Hopper$() which space to take items from and move items to.$(br2)For quick reference, my hotbar is 0-8, my offhand is 40, and my $(l:patterns/spells/wristpocket)Wristpocket$() is -1.",
	"hexcasting.action.hexical:index_hopper": "Hopper Purification",
	"hexical.page.index_hopper.summary": "Applies to $(thing)sources$() that support slots; inventories. Returns a list of the item stacks contained within them, with their index in the list being their slot number.",
	"hexical.page.index_hopper.description": "While the slot number is generally fairly logical, it can feel arbitrary for storages such as a player's inventory.$(br2)This pattern will be useful in ascertaining the slot number of any given location in a $(thing)source$() or $(thing)destination$()'s inventory. It can also be useful for processing: scanning a $(thing)source$() for what items it contains, evaluating them based on some metrics, and from there deciding whether and where to move them.",

	"hexical.page.horrible.title": "Horrible",
	"hexical.page.horrible.0": "Of all the spells I have discovered in my exploration of ancient _Hexcasting notes, there has not been a single pattern remotely like this one. I believe its existence is proof of some greater force that had compelled _Hexcasters to draw it.$(br2)$(o)How does one even begin to draw this, let alone discover it?$()",
	"hexcasting.action.hexical:horrible": "Horrible",
	"hexical.page.horrible.summary": "Judging by the pattern signature, I can only imagine that it summons something.",

	"hexcasting.action.hexical:charm": "Charm",
	"hexical.page.charm.0": "The $(l:patterns/great_spells/charm)$(action)Charm$() spell transforms any item into a self-contained magical item, not unlike a $(l:items/hexcasting)$(item)Cypher$(). They have a battery of _media, disenchant when empty, and can't be recharged or reprogrammed.$(br2)$(o)Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.$()",
	"hexical.page.charm.1": "Charmed items also have a few special features that distinguish them from any other $(l:items/hexcasting)$(item)casting device$().$(br2)They have two patterns for interfacing with an internal iota storage within them. This storage can only be read from and written to within the charmed item.$(br2)They also have the power of input interception.",
	"hexical.page.charm.summary": "$(br)Charms an item. Takes the _Hex and the amount of _media to bestow in $(l:items/amethyst)$(item)Amethyst Dust$(). Consumes the battery and about three $(l:items/amethyst)$(item)Charged Amethyst$().",
	"hexical.page.charm.description": "The four booleans correspond to attacking, sneak-attacking, using, and sneak-using.$(br2)When I use a charmed item with an intent set as true, the charm casts the _Hex in place of the original function. It starts the stack with a number corresponding to the button pressed, 0 for attacking and 1 for using.$(br2)Charmed items can also pick up additional intents, pushing numbers up to seven.",
	"hexcasting.action.hexical:write_charmed": "Charmed Gambit",
	"hexical.page.write_charmed.summary": "Writes an iota to the charmed item’s internal storage. Subject to the Transgress Others mishap.",
	"hexcasting.action.hexical:read_charmed": "Charmed Reflection",
	"hexical.page.read_charmed.summary": "Pushes the stored iota from the charmed item’s internal storage.",
	"hexcasting.action.hexical:write_charmed_proxy": "Charmed Gambit II",
	"hexical.page.write_charmed_proxy.summary": "If the item charged features an iota storage by default, such as a $(l:items/focus)$(item)Focus$(), writes an iota into it.",
	"hexcasting.action.hexical:read_charmed_proxy": "Charmed Reflection II",
	"hexical.page.read_charmed_proxy.summary": "If the item charged features an iota storage by default, such as a $(l:items/focus)$(item)Focus$(), reads an iota from it.",
	"hexcasting.action.hexical:discharm": "Discharm",
	"hexical.page.discharm.summary": "Removes a charm from an item without affecting any other property. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$().",

	"hexcasting.action.hexical:greater_blink": "Greater Blink",
	"hexical.page.greater_blink.0": "Greater Blink is a significantly cheaper alternative to $(l:patterns/great_spells/teleport)$(action)Greater Teleport$(). It also does not carry the risk of splattering my items upon arrival. However, it only has pitiful range compared to $(l:patterns/great_spells/teleport)$(action)Greater Teleport$() and its destination calculations are... esoteric. Its target is also exclusively myself.",
	"hexical.page.greater_blink.summary": "Teleports me up to 128 blocks away, relative to my position and rotation. Costs about two $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.greater_blink.1": "A vector of (0, 0, 1) would teleport me one block in $(l:patterns/basics#hexcasting:get_entity_look)$(thing)the direction I'm facing$(). A vector of (0, 1, 0) would teleport me one block $(l:patterns/scrying/entities#hexpose:theodolite)$(thing)\"up\" from the top of my head$(). A vector of (0, 1, 10) would teleport me ten blocks forward in the direction I'm facing and one block upwards from the top of my head. A vector of (1, 0, 0) teleports me one block to my right.",
	"hexical.page.greater_blink.2": "$(o)I felt three numerical axes perfectly pierce all six faces of my head. For a moment, I was skewered—suspended midair—and then at my specifications, I was violently dragged along the geometrical scaffolds at speeds indistinguishable from instantaneousness.$(br2)I must have been no longer a part of the world, for I was yanked through walls without causing even the smallest disturbance.$()",

	"hexical.page.meshes.title": "Meshes",
	"hexical.page.meshes.0": "Meshes are the natural evolution of $(l:patterns/spells/specks)specks$(). Rather than being restricted to iotas and patterns on a two-dimensional plane, meshes accept a list of vectors in three-dimensional space and connect them with lines, allowing for infinite creative constructions. It's also responsive to most patterns used for manipulation of specks.",
	"hexcasting.action.hexical:conjure_mesh": "Conjure Mesh",
	"hexical.page.conjure_mesh.summary": "Conjures a mesh with the location and leaves a mesh entity on the stack. Costs about one $(l:items/amethyst)$(item)Amethyst Dust$().",
	"hexical.page.meshes.1": "When initally conjured, the mesh is invisible and must be woven to gain form. The constraints for the list of vectors provided to a mesh are quite minimal. The list must be no more than 32 vectors long, and those vectors must have magnitudes less than 10. The mesh will then connect each of those points.",
	"hexcasting.action.hexical:weave_mesh": "Weave Mesh",
	"hexical.page.weave_mesh.summary": "Takes a list of vectors, with constraints defined on the prior page, and weaves the mesh into that shape. Free.",
	"hexcasting.action.hexical:read_mesh": "Tangle Purification",
	"hexical.page.read_mesh.summary": "Pushes the shape of a mesh as a list of vectors."
}
