{
  "_comment": "General",
  "itemGroup.integrateddynamics": "Integrated Dynamics",
  "general.integrateddynamics.description": "Take full and automated control of your appliances.",
  "general.integrateddynamics.info.none": "None",
  "general.integrateddynamics.energy": "Energy",
  "general.integrateddynamics.energy_unit": "RF",
  "general.integrateddynamics.error.no_network": "No valid network found",
  "general.integrateddynamics.true": "True",
  "general.integrateddynamics.false": "False",
  "gui.integrateddynamics.part_settings": "Part Settings",
  "gui.integrateddynamics.aspect_settings": "Aspect Settings",
  "gui.integrateddynamics.keybinding": "Key Binding",
  "gui.integrateddynamics.button.save": "Save",
  "gui.integrateddynamics.button.rename": "Rename",
  "gui.integrateddynamics.button.copy": "Copy",
  "gui.integrateddynamics.button.copy.info": "Copy to clipboard",
  "gui.integrateddynamics.button.edit": "Edit",
  "gui.integrateddynamics.button.add": "Add",
  "gui.integrateddynamics.button.remove": "Remove",
  "gui.integrateddynamics.partsettings.update_interval": "Ticks/Operation",
  "gui.integrateddynamics.partsettings.priority": "Priority",
  "gui.integrateddynamics.partsettings.channel": "Energy Channel",
  "gui.integrateddynamics.partsettings.channel.disabledinfo": "Network energy consumption is disabled on this server.",
  "gui.integrateddynamics.partsettings.side": "Target Side",
  "gui.integrateddynamics.delay.capacity": "Capacity",
  "gui.integrateddynamics.part.properties": "Properties:",
  "gui.integrateddynamics.logicprogrammer.filter": "Filter",
  "gui.integrateddynamics.rewards": "Rewards",
  "gui.integrateddynamics.rewards.collect": "Collect",
  "gui.integrateddynamics.rewards.collected": "Collected",
  "gui.integrateddynamics.rewards.collectFailure": "Can't collect rewards, is your inventory full?",
  "gui.integrateddynamics.input": "Input: %s",
  "gui.integrateddynamics.output": "Output: %s",
  "gui.integrateddynamics.mechanical_squeezer.fluidautoeject": "Auto-eject Fluid",
  "gui.integrateddynamics.mechanical_squeezer.togglefluidautoeject": "Auto-eject Fluid: %s",
  "gui.integrateddynamics.mechanical_squeezer.togglefluidautoeject.info": "Push to adjacent tanks.",
  "gui.integrateddynamics.input_short": "Input",
  "gui.integrateddynamics.output_short": "Output",
  "gui.integrateddynamics.recipe.strictnbt": "Strict NBT",
  "gui.integrateddynamics.recipe.tagvariants": "Item tag variants",
  "gui.integrateddynamics.diagnostics.parts": "Parts",
  "gui.integrateddynamics.diagnostics.observers": "Storage Observers",
  "gui.integrateddynamics.diagnostics.title": "Network Diagnostics",
  "gui.integrateddynamics.diagnostics.table.network": "Network",
  "gui.integrateddynamics.diagnostics.table.cables": "Cables",
  "gui.integrateddynamics.diagnostics.table.part": "Part",
  "gui.integrateddynamics.diagnostics.table.ticktime": "Ticktime (ms)",
  "gui.integrateddynamics.diagnostics.table.dimension": "Dim",
  "gui.integrateddynamics.diagnostics.table.position": "Position",
  "gui.integrateddynamics.diagnostics.table.side": "side",
  "key.categories.integrateddynamics": "Integrated Dynamics",
  "key.integrateddynamics.logic_programmer_focus_search": "Focus Search Logic Programmer",
  "key.integrateddynamics.logic_programmer_open_rename": "Rename Variable Logic Programmer",
  "subtitles.integrateddynamics.effect.page.flipsingle": "Flip Page",
  "subtitles.integrateddynamics.effect.page.flipmultiple": "Flip Pages",
  "block.integrateddynamics.cable": "Logic Cable",
  "block.integrateddynamics.variablestore": "Variable Store",
  "block.integrateddynamics.energy_battery": "Energy Battery",
  "block.integrateddynamics.energy_battery.info": "Place in crafting grid with other Energy Batteries to increase capacity. Shift + Right click to auto-supply.",
  "block.integrateddynamics.energy_battery.info.auto_supply": "Auto-supply: %s",
  "block.integrateddynamics.energy_battery_creative": "Creative Energy Battery",
  "block.integrateddynamics.energy_battery_creative.info.auto_supply": "Auto-supply: %s",
  "block.integrateddynamics.logic_programmer": "Logic Programmer",
  "block.integrateddynamics.coal_generator": "Generator",
  "block.integrateddynamics.coal_generator.info": "Produces energy from fuel items",
  "block.integrateddynamics.proxy": "Proxy",
  "block.integrateddynamics.proxy.info": "Expose a variable reference as an aspect. Clear in a crafting grid.",
  "block.integrateddynamics.materializer": "Materializer",
  "block.integrateddynamics.materializer.info": "Materialize the value of a variable in a new variable",
  "block.integrateddynamics.menril_log": "Menril Log",
  "block.integrateddynamics.menril_log_filled": "Enriched Menril Log",
  "block.integrateddynamics.menril_log_stripped": "Stripped Menril Log",
  "block.integrateddynamics.menril_leaves": "Menril Leaves",
  "block.integrateddynamics.menril_sapling": "Menril Sapling",
  "block.integrateddynamics.menril_planks": "Menril Planks",
  "block.integrateddynamics.menril_slab": "Menril Slab",
  "block.integrateddynamics.menril_fence": "Menril Fence",
  "block.integrateddynamics.menril_fence_gate": "Menril Fence Gate",
  "block.integrateddynamics.menril_wood": "Menril Wood",
  "block.integrateddynamics.menril_wood_stripped": "Stripped Menril Wood",
  "block.integrateddynamics.crystalized_menril_block": "Block of Crystalized Menril",
  "block.integrateddynamics.crystalized_menril_brick": "Crystalized Menril Brick",
  "block.integrateddynamics.block_menril_resin": "Menril Resin",
  "block.integrateddynamics.drying_basin": "Drying Basin",
  "block.integrateddynamics.drying_basin.info": "For drying items and fluids",
  "block.integrateddynamics.squeezer": "Squeezer",
  "block.integrateddynamics.squeezer.info": "Squeezes, flattens and crushes by jumping on it. Redstone pulse to reset.",
  "block.integrateddynamics.menril_torch": "Menril Torch",
  "block.integrateddynamics.menril_torch_stone": "Menril Stone Torch",
  "block.integrateddynamics.invisible_light": "Invisible Light",
  "block.integrateddynamics.menril_door": "Menril Door",
  "block.integrateddynamics.menril_planks_stairs": "Menril Stairs",
  "block.integrateddynamics.crystalized_menril_block_stairs": "Crystalized Menril Stairs",
  "block.integrateddynamics.crystalized_menril_brick_stairs": "Crystalized Menril Brick Stairs",
  "block.integrateddynamics.delay": "Delayer",
  "block.integrateddynamics.delay.info": "Expose the history of a variable as an aspect. Clear in a crafting grid.",
  "block.integrateddynamics.block_liquid_chorus": "Liquid Chorus",
  "block.integrateddynamics.crystalized_chorus_block": "Block of Crystalized Chorus",
  "block.integrateddynamics.crystalized_chorus_brick": "Crystalized Chorus Brick",
  "block.integrateddynamics.crystalized_chorus_block_stairs": "Crystalized Chorus Stairs",
  "block.integrateddynamics.crystalized_chorus_brick_stairs": "Crystalized Chorus Brick Stairs",
  "block.integrateddynamics.mechanical_squeezer": "Mechanical Squeezer",
  "block.integrateddynamics.mechanical_squeezer.info": "Squeezes, flattens and crushes using energy.",
  "block.integrateddynamics.mechanical_drying_basin": "Mechanical Drying Basin",
  "block.integrateddynamics.mechanical_drying_basin.info": "For drying items and fluids using energy.",
  "block.integrateddynamics.crystalized_menril_block_slab": "Crystalized Menril Slab",
  "block.integrateddynamics.crystalized_menril_brick_slab": "Crystalized Menril Brick Slab",
  "block.integrateddynamics.crystalized_chorus_block_slab": "Crystalized Chorus Slab",
  "block.integrateddynamics.crystalized_chorus_brick_slab": "Crystalized Chorus Brick Slab",
  "item.integrateddynamics.general.id": "§e§lID: §r%s",
  "item.integrateddynamics.wrench": "Wrench",
  "item.integrateddynamics.variable": "Variable Card",
  "item.integrateddynamics.variable.info": "Clear or copy in a crafting grid",
  "item.integrateddynamics.variable.warning": "§4§lWARNING: Do NOT copy this item by middle-clicking!",
  "item.integrateddynamics.variable.id": "§e§oVariable ID: §r§o%s",
  "item.integrateddynamics.labeller": "Labeller",
  "item.integrateddynamics.labeller.info": "Labels your variables. Also works in the Logic Programmer.",
  "item.integrateddynamics.labeller.button.write": "Write",
  "item.integrateddynamics.facade": "Facade",
  "item.integrateddynamics.facade.info": "Combine with a block in crafting table",
  "item.integrateddynamics.bucket_liquid_chorus": "Liquid Chorus Bucket",
  "item.integrateddynamics.bucket_menril_resin": "Menril Resin Bucket",
  "item.integrateddynamics.crystalized_menril_chunk": "Crystalized Menril Chunk",
  "item.integrateddynamics.variable_transformer": "Input/Output Variable Transformers",
  "item.integrateddynamics.variable_transformer_output": "Output Variable Transformer",
  "item.integrateddynamics.variable_transformer_input": "Input Variable Transformer",
  "item.integrateddynamics.menril_berries": "Menril Berries",
  "item.integrateddynamics.menril_berries.info": "Tasty and illuminating",
  "item.integrateddynamics.portable_logic_programmer": "Portable Logic Programmer",
  "item.integrateddynamics.on_the_dynamics_of_integration": "On the Dynamics of Integration",
  "item.integrateddynamics.on_the_dynamics_of_integration.info": "A complete mod reference guide with tutorials",
  "item.integrateddynamics.crystalized_chorus_chunk": "Crystalized Chorus Chunk",
  "item.integrateddynamics.logic_director": "Logic Director",
  "item.integrateddynamics.proto_chorus": "Proto Chorus",
  "fluid.fluids.integrateddynamics.menrilresin": "Menril Resin",
  "fluid.fluids.integrateddynamics.liquidchorus": "Liquid Chorus",
  "biome.integrateddynamics.meneglin": "Meneglin",
  "advancement.integrateddynamics.meneglin_discovery": "Meneglin Discovery",
  "advancement.integrateddynamics.meneglin_discovery.desc": "Chop down a Menril tree, which can most easily be found in Meneglin biomes.",
  "advancement.integrateddynamics.squeezing": "Squeezing like a boss",
  "advancement.integrateddynamics.squeezing.desc": "Craft a Squeezer.",
  "advancement.integrateddynamics.drying": "Drying like a boss",
  "advancement.integrateddynamics.drying.desc": "Craft a Drying Basin.",
  "advancement.integrateddynamics.menril_production": "Menril Production",
  "advancement.integrateddynamics.menril_production.desc": "Process Menril Log into Menril Resin and dry it to obtain Crystalized Menril Resin.",
  "advancement.integrateddynamics.cables_logic": "Cables, for logic",
  "advancement.integrateddynamics.cables_logic.desc": "Craft a Logic Cable",
  "advancement.integrateddynamics.networks_logic": "Networks, for logic",
  "advancement.integrateddynamics.networks_logic.desc": "Build a logic network with at least 10 connected Logic Cables.",
  "advancement.integrateddynamics.menril_wrenching": "Menril Wrenching",
  "advancement.integrateddynamics.menril_wrenching.desc": "Craft a Wrench",
  "advancement.integrateddynamics.variables": "Variables, For Values",
  "advancement.integrateddynamics.variables.desc": "Craft a Variable Card",
  "advancement.integrateddynamics.variable_input": "Variable Input Transformation",
  "advancement.integrateddynamics.variable_input.desc": "Craft an Variable Input Transformer",
  "advancement.integrateddynamics.variable_output": "Variable Output Transformation",
  "advancement.integrateddynamics.variable_output.desc": "Craft Variable Output Transformer",
  "advancement.integrateddynamics.redstone_reading": "Redstone Reading",
  "advancement.integrateddynamics.redstone_reading.desc": "Craft a Redstone Reader",
  "advancement.integrateddynamics.block_reading": "Block Reading",
  "advancement.integrateddynamics.block_reading.desc": "Craft a Block Reader",
  "advancement.integrateddynamics.inventory_reading": "Inventory Reading",
  "advancement.integrateddynamics.inventory_reading.desc": "Craft an Inventory Reader",
  "advancement.integrateddynamics.machine_reading": "Machine Reading",
  "advancement.integrateddynamics.machine_reading.desc": "Craft a Machine Reader",
  "advancement.integrateddynamics.value_displaying": "Value Displaying",
  "advancement.integrateddynamics.value_displaying.desc": "Craft a Display Panel",
  "advancement.integrateddynamics.redstone_capturing": "Redstone Capturing",
  "advancement.integrateddynamics.redstone_capturing.desc": "Make a variable card for a redstone §6Integer§7 value.",
  "advancement.integrateddynamics.redstone_observement": "Redstone Observement",
  "advancement.integrateddynamics.redstone_observement.desc": "Place an §6Integer§7 variable card in a Display Panel.",
  "advancement.integrateddynamics.redstone_transmission": "Redstone Transmission",
  "advancement.integrateddynamics.redstone_transmission.desc": "Let a Redstone Writer write a maximal integer redstone level that was read by a Redstone Reader.",
  "advancement.integrateddynamics.recipe_reading": "Recipe Reading",
  "advancement.integrateddynamics.recipe_reading.desc": "Read the list of recipes from a machine (like the Crafting Table) using a Machine Reader.",
  "advancement.integrateddynamics.recipe_creation": "Recipe Creation",
  "advancement.integrateddynamics.recipe_creation.desc": "Visually create a §8Recipe§7 using the Logic Programmer.",
  "advancement.integrateddynamics.recipe_lookup": "Recipe Lookup",
  "advancement.integrateddynamics.recipe_lookup.desc": "Dynamically lookup the recipe of a Chest using a Machine Reader.",
  "advancement.integrateddynamics.lectern_data": "Lectern NBT",
  "advancement.integrateddynamics.lectern_data.desc": "Read the NBT tag from a machine using a Block Reader, such as the Lectern.",
  "advancement.integrateddynamics.lectern_book": "Lectern NBT Book",
  "advancement.integrateddynamics.lectern_book.desc": "Read the Book NBT field inside a Lectern block on the NBT tag read from a Block Reader.",
  "advancement.integrateddynamics.lectern_book_name": "Lectern NBT Book Name",
  "advancement.integrateddynamics.lectern_book_name.desc": "Read the name (id) of a book inside a Lectern block by applying an NBT Path expression on the NBT tag read from a Block Reader.",
  "advancement.integrateddynamics.logic_programming": "Logic Programming",
  "advancement.integrateddynamics.logic_programming.desc": "Open a Logic Programmer's GUI",
  "advancement.integrateddynamics.constant_definition": "Constant Definition",
  "advancement.integrateddynamics.constant_definition.desc": "Define a constant §6Integer§7 Variable Card.",
  "advancement.integrateddynamics.arithmetic_addition": "Arithmetic Addition",
  "advancement.integrateddynamics.arithmetic_addition.desc": "Add two §eNumbers§7 and display the result.",
  "advancement.integrateddynamics.variable_materialization": "Variable Materialization",
  "advancement.integrateddynamics.variable_materialization.desc": "Materialize a variable in a §lMaterializer§r.",
  "advancement.integrateddynamics.variable_proxying": "Variable Proxying",
  "advancement.integrateddynamics.variable_proxying.desc": "Create a valid proxy variable in a §lProxy§r.",
  "advancement.integrateddynamics.logical_list_building": "Logical List Building",
  "advancement.integrateddynamics.logical_list_building.desc": "Construct a static List with §6Integers§7 1, 10 and 100.",
  "advancement.integrateddynamics.item_origin_identification": "Item Origin Identification",
  "advancement.integrateddynamics.item_origin_identification.desc": "Get the mod name of an Item.",
  "advancement.integrateddynamics.what_would_i_be_looking_at": "What Would I Be Looking At?",
  "advancement.integrateddynamics.what_would_i_be_looking_at.desc": "Get the Block you are looking at.",
  "advancement.integrateddynamics.dynamic_additions": "Dynamic Additions",
  "advancement.integrateddynamics.dynamic_additions.desc": "Invoke the addition Operator dynamically",
  "advancement.integrateddynamics.dynamic_list_filtering": "Dynamic List Filtering",
  "advancement.integrateddynamics.dynamic_list_filtering.desc": "Filter an Integer list 1, 10 and 100 to 10.",
  "advancement.integrateddynamics.creeper_taming": "Creeper Taming",
  "advancement.integrateddynamics.creeper_taming.desc": "Show the HP of a Creeper in a Display Panel",
  "advancement.integrateddynamics.sponge_step_sound": "Sponge Step Sound",
  "advancement.integrateddynamics.sponge_step_sound.desc": "Play the step sound of a Wet Sponge block",
  "advancement.integrateddynamics.recursive_recursion": "Recursive Recursion",
  "advancement.integrateddynamics.recursive_recursion.desc": "Create an infinite List, and display it in a Display Panel",
  "advancement.integrateddynamics.tool_for_obsidian": "Tools for Obsidian?",
  "advancement.integrateddynamics.tool_for_obsidian.desc": "Check if a Stone Pickaxe can break an Obsidian block, and show the result in a Display Panel.",
  "advancement.integrateddynamics.smart_pressure_plate": "Smart Pressure Plate",
  "advancement.integrateddynamics.smart_pressure_plate.desc": "Create a system that automatically opens a door when you pass by an Entity Reader based on entity name matching, using a Redstone Writer directly pointing to the door. (Hint: pass an entity name as first argument into the equals operator)",
  "valuetype.integrateddynamics.error.value": "Invalid value",
  "valuetype.integrateddynamics.value_type": "Value Type",
  "valuetype.integrateddynamics.tooltip.type_name": "§eType: §r%s",
  "valuetype.integrateddynamics.tooltip.value": "§e§oValue: §r%s",
  "valuetype.integrateddynamics.operator.tooltip.signature": "§eSignature: §r",
  "valuetype.integrateddynamics.error.invalid_input": "The input \"%s\" could not be parsed for this value type.",
  "valuetype.integrateddynamics.error.invalid_input_item": "This value type requires an input item.",
  "valuetype.integrateddynamics.error.invalid_list_element": "Element %s is invalid: %s",
  "valuetype.integrateddynamics.error.invalid_list_value_type": "The list expects value type %s while %s was given.",
  "valuetype.integrateddynamics.error.invalid_operator_operator": "An operator value type was expected at position %s, while %s was given",
  "valuetype.integrateddynamics.error.invalid_operator_signature": "The operator value %s expected value types (%s), while (%s) was given.",
  "valuetype.integrateddynamics.error.block.no_block": "The inserted item is no block.",
  "valuetype.integrateddynamics.error.fluid.no_fluid": "The inserted item contains no fluid.",
  "valuetype.integrateddynamics.error.no_light_calculator": "The value type %s can not be used to derive a light level.",
  "valuetype.integrateddynamics.error.deserialize": "Something went wrong while deserializing '%s': %s",
  "valuetype.integrateddynamics.any": "Any",
  "valuetype.integrateddynamics.any.info": "Accepts any type of value.",
  "valuetype.integrateddynamics.number": "Number",
  "valuetype.integrateddynamics.number.info": "Accepts all number types.",
  "valuetype.integrateddynamics.named": "Named",
  "valuetype.integrateddynamics.named.info": "Something that has a name, such as display names of items and blocks.",
  "valuetype.integrateddynamics.uniquely_named": "Uniquely Named",
  "valuetype.integrateddynamics.uniquely_named.info": "Something that has a unique name, such as items and blocks.",
  "valuetype.integrateddynamics.boolean": "Boolean",
  "valuetype.integrateddynamics.integer": "Integer",
  "valuetype.integrateddynamics.double": "Double",
  "valuetype.integrateddynamics.long": "Long",
  "valuetype.integrateddynamics.string": "String",
  "valuetype.integrateddynamics.operator": "Operator",
  "valuetype.integrateddynamics.nbt": "NBT",
  "valuetype.integrateddynamics.list": "List",
  "valuetype.integrateddynamics.block": "Block",
  "valuetype.integrateddynamics.itemstack": "Item",
  "valuetype.integrateddynamics.entity": "Entity",
  "valuetype.integrateddynamics.fluidstack": "Fluid",
  "valuetype.integrateddynamics.ingredients": "Ingredients",
  "valuetype.integrateddynamics.recipe": "Recipe",
  "valuetype.integrateddynamics.ingredients.slot.info": "Shift click to configure",
  "parttype.integrateddynamics.error.low_energy": "Not enough energy",
  "parttype.integrateddynamics.tooltip.disabled": "Out of Energy",
  "parttype.integrateddynamics.tooltip.inactive": "Inactive",
  "parttype.integrateddynamics.tooltip.errors": "Errors:",
  "parttype.integrateddynamics.tooltip.writer.active_aspect": "Aspect: %s (%s)",
  "parttype.integrateddynamics.tooltip.display.active_value": "Value: %s (%s)",
  "parttype.integrateddynamics.tooltip.monodirectionalconnector.group": "Group: %s",
  "parttype.integrateddynamics.tooltip.noaspects": "WARNING: No aspects available. This may become usable when other mods are installed.",
  "parttype.integrateddynamics.audio_reader": "Audio Reader",
  "parttype.integrateddynamics.audio_reader.info": "Reads audio information",
  "parttype.integrateddynamics.block_reader": "Block Reader",
  "parttype.integrateddynamics.block_reader.info": "Reads block information",
  "parttype.integrateddynamics.entity_reader": "Entity Reader",
  "parttype.integrateddynamics.entity_reader.info": "Reads entity information",
  "parttype.integrateddynamics.extradimensional_reader": "Extra-Dimensional Reader",
  "parttype.integrateddynamics.extradimensional_reader.info": "Reads information that is shared for all dimensions",
  "parttype.integrateddynamics.fluid_reader": "Fluid Reader",
  "parttype.integrateddynamics.fluid_reader.info": "Reads fluid tanks",
  "parttype.integrateddynamics.inventory_reader": "Inventory Reader",
  "parttype.integrateddynamics.inventory_reader.info": "Reads data from inventories",
  "parttype.integrateddynamics.network_reader": "Network Reader",
  "parttype.integrateddynamics.network_reader.info": "Reads target network properties",
  "parttype.integrateddynamics.machine_reader": "Machine Reader",
  "parttype.integrateddynamics.machine_reader.info": "Reads machine properties",
  "parttype.integrateddynamics.redstone_reader": "Redstone Reader",
  "parttype.integrateddynamics.redstone_reader.info": "Reads redstone values",
  "parttype.integrateddynamics.world_reader": "World Reader",
  "parttype.integrateddynamics.world_reader.info": "Reads things related to the world, blocks and entities",
  "parttype.integrateddynamics.audio_writer": "Audio Writer",
  "parttype.integrateddynamics.audio_writer.info": "Outputs audio and music",
  "parttype.integrateddynamics.effect_writer": "Effect Writer",
  "parttype.integrateddynamics.effect_writer.info": "Outputs particles",
  "parttype.integrateddynamics.entity_writer": "Entity Writer",
  "parttype.integrateddynamics.entity_writer.info": "Writes entity configuration",
  "parttype.integrateddynamics.machine_writer": "Machine Writer",
  "parttype.integrateddynamics.machine_writer.info": "Writes machine configuration",
  "parttype.integrateddynamics.inventory_writer": "Inventory Writer",
  "parttype.integrateddynamics.inventory_writer.info": "Writes to inventories",
  "parttype.integrateddynamics.redstone_writer": "Redstone Writer",
  "parttype.integrateddynamics.redstone_writer.info": "Writes to redstone",
  "parttype.integrateddynamics.data_driven_panel.error.invalid_type": "This panel does not accept a %s.",
  "parttype.integrateddynamics.static_light_panel": "Static Light Panel",
  "parttype.integrateddynamics.static_light_panel.info": "A simply light panel that is always active",
  "parttype.integrateddynamics.dynamic_light_panel": "Dynamic Light Panel",
  "parttype.integrateddynamics.dynamic_light_panel.info": "Visually display a variable value in the world as light value",
  "parttype.integrateddynamics.display_panel": "Display Panel",
  "parttype.integrateddynamics.display_panel.info": "Visually display a variable value in the world as text",
  "parttype.integrateddynamics.connector_mono_directional": "Mono-Directional Connector",
  "parttype.integrateddynamics.connector_mono_directional.info": "Can connect to other Mono-Directional Connectors over a distance in a straight line",
  "parttype.integrateddynamics.connector_omni_directional": "Omni-Directional Connector",
  "parttype.integrateddynamics.connector_omni_directional.info": "Can connect to other Omni-Directional Connectors anywhere, including different dimensions.",
  "variable.integrateddynamics.error.invalid_item": "The current variable can not be used in this aspect.",
  "variable.integrateddynamics.error.part_not_in_network": "Part with id %s could not be found within the current network.",
  "variable.integrateddynamics.error.recursion": "The variable with id %s is referring to itself.",
  "proxy.integrateddynamics.tooltip.proxy_id": "§e§oProxy ID: §r§o%s",
  "proxy.integrateddynamics.error.proxy_not_in_network": "Proxy with id %s could not be found within the current network.",
  "proxy.integrateddynamics.error.proxy_invalid": "Proxy with id %s is not exposing a variable.",
  "proxy.integrateddynamics.error.proxy_invalid_type": "Proxy with id %s is expected to expose a variable with type %s while %s is found.",
  "delay.integrateddynamics.tooltip.delay_id": "§e§oDelay ID: §r§o%s",
  "delay.integrateddynamics.error.delay_not_in_network": "Delay with id %s could not be found within the current network.",
  "delay.integrateddynamics.error.delay_invalid": "Delay with id %s is not exposing a variable.",
  "delay.integrateddynamics.error.delay_invalid_type": "Delay with id %s is expected to expose a variable with type %s while %s is found.",
  "aspect.integrateddynamics.tooltip.aspect_name": "§eAspect: §r%s",
  "aspect.integrateddynamics.tooltip.value_type_name": "§eType: §r%s",
  "aspect.integrateddynamics.tooltip.part_id": "§e§oPart ID: §r§o%s",
  "aspect.integrateddynamics.error.invalid_type": "This aspect expects %s, but %s was given.",
  "aspect.integrateddynamics.error.recursion": "The aspect variable for %s is referring to itself.",
  "aspect.integrateddynamics.error.no_value_interface": "No valid value interface was found.",
  "aspect.integrateddynamics.error.no_value_interface_value": "No valid value interface value was found.",
  "aspect.integrateddynamics.name": "Aspect",
  "aspect.integrateddynamics.read.integer.audio.instrument.harp": "Harp Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.harp.info": "Reads a harp note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.basedrum": "Base Drum Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.basedrum.info": "Reads a base drum note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.snare": "Snare Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.snare.info": "Reads a snare note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.hat": "Hat Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.hat.info": "Reads a hat note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.bass": "Bass Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.bass.info": "Reads a bass note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.flute": "Flute Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.flute.info": "Reads a flute note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.bell": "Bell Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.bell.info": "Reads a bell note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.guitar": "Guitar Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.guitar.info": "Reads a guitar note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.chime": "Chime Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.chime.info": "Reads a chime note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.xylophone": "Xylophone Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.xylophone.info": "Reads a xylophone note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.iron_xylophone": "Iron Xylophone Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.iron_xylophone.info": "Reads an iron xylophone note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.cow_bell": "Cow Bell Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.cow_bell.info": "Reads a cow bell note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.didgeridoo": "Didgeridoo Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.didgeridoo.info": "Reads a didgeridoo note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.bit": "Bit Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.bit.info": "Reads a bit note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.banjo": "Banjo Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.banjo.info": "Reads a banjo note, expected range [0, 24]",
  "aspect.integrateddynamics.read.integer.audio.instrument.pling": "Pling Note",
  "aspect.integrateddynamics.read.integer.audio.instrument.pling.info": "Reads a pling note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.harp": "Harp Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.harp.info": "Output a harp note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.basedrum": "Base Drum Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.basedrum.info": "Output a base drum note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.snare": "Snare Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.snare.info": "Output a snare note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.hat": "Hat Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.hat.info": "Output a hat note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.bass": "Bass Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.bass.info": "Output a bass note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.flute": "Flute Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.flute.info": "Output a flute note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.bell": "Bell Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.bell.info": "Output a bell note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.guitar": "Guitar Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.guitar.info": "Output a guitar note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.chime": "Chime Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.chime.info": "Output a chime note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.xylophone": "Xylophone Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.xylophone.info": "Output a xylophone note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.iron_xylophone": "Iron Xylophone Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.iron_xylophone.info": "Output an iron xylophone note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.cow_bell": "Cow Bell Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.cow_bell.info": "Output a cow bell note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.didgeridoo": "Didgeridoo Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.didgeridoo.info": "Output a didgeridoo note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.bit": "Bit Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.bit.info": "Output a bit note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.banjo": "Banjo Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.banjo.info": "Output a banjo note, expected range [0, 24]",
  "aspect.integrateddynamics.write.integer.audio.instrument.pling": "Pling Note",
  "aspect.integrateddynamics.write.integer.audio.instrument.pling.info": "Output a pling note, expected range [0, 24]",
  "aspect.integrateddynamics.write.string.audio.sound": "Sound",
  "aspect.integrateddynamics.write.string.audio.sound.info": "Play the given sound name",
  "aspect.integrateddynamics.write.string.audio.text": "Text",
  "aspect.integrateddynamics.write.string.audio.text.info": "Convert the given text to speech",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_ambient_entity_effect": "Particle: Ambient Entity",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_ambient_entity_effect.info": "Emit an ambient entity particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_angry_villager": "Particle: Angry Villager",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_angry_villager.info": "Emit an angry villager with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_barrier": "Particle: Barrier",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_barrier.info": "Emit a barrier particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_bubble": "Particle: Bubble",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_bubble.info": "Emit a bubble particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_cloud": "Particle: Cloud",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_cloud.info": "Emit a cloud particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_crit": "Particle: Crit",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_crit.info": "Emit a crit particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_damage_indicator": "Particle: Damage Indicator",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_damage_indicator.info": "Emit a damage indicator with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dragon_breath": "Particle: Dragon Breath",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dragon_breath.info": "Emit a dragon breath particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dripping_lava": "Particle: Dripping Lava",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dripping_lava.info": "Emit a dripping lava with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_falling_lava": "Particle: Falling Lava",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_falling_lava.info": "Emit a falling lava particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_landing_lava": "Particle: Landing Lava",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_landing_lava.info": "Emit a landing lava with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dripping_water": "Particle: Dripping Water",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dripping_water.info": "Emit an dripping water particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_falling_water": "Particle: Falling Water",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_falling_water.info": "Emit a falling water particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_effect": "Particle: Effect",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_effect.info": "Emit an effect particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_elder_guardian": "Particle: Elder Guardian",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_elder_guardian.info": "Emit am elder guardian particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_enchanted_hit": "Particle: Enchanted Hit",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_enchanted_hit.info": "Emit am enchanted hit particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_enchant": "Particle: Enchanted",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_enchant.info": "Emit an enchanted particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_end_rod": "Particle: End Rod",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_end_rod.info": "Emit an end rod particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_entity_effect": "Particle: Entity",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_entity_effect.info": "Emit an entity particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_explosion_emitter": "Particle: Explosion Emitter",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_explosion_emitter.info": "Emit an explosion emitter particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_explosion": "Particle: Explosion",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_explosion.info": "Emit an explosion with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_firework": "Particle: Firework",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_firework.info": "Emit a firework particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_fishing": "Particle: Fishing",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_fishing.info": "Emit a fishing with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_flame": "Particle: Flame",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_flame.info": "Emit a flame particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_flash": "Particle: flash",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_flash.info": "Emit a Flash particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_happy_villager": "Particle: Happy Villager",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_happy_villager.info": "Emit a happy villager with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_composter": "Particle: Composter",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_composter.info": "Emit a composter particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_heart": "Particle: Heart",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_heart.info": "Emit a heart particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_instant_effect": "Particle: Instant Effect",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_instant_effect.info": "Emit an instant effect particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_item_slime": "Particle: Slime",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_item_slime.info": "Emit a slime particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_item_snowball": "Particle: Snowball",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_item_snowball.info": "Emit a snowball particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_large_smoke": "Particle: Large Smoke",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_large_smoke.info": "Emit a large smoke particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_lava": "Particle: Lava",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_lava.info": "Emit a lava particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_mycelium": "Particle: Mycelium",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_mycelium.info": "Emit a mycelium particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_note": "Particle: Note",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_note.info": "Emit a note particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_poof": "Particle: Poof",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_poof.info": "Emit a poof particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_portal": "Particle: Portal",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_portal.info": "Emit a portal particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_rain": "Particle: Rain",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_rain.info": "Emit a rain particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_smoke": "Particle: Smoke",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_smoke.info": "Emit a smoke particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_sneeze": "Particle: Sneeze",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_sneeze.info": "Emit a sneeze particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_spit": "Particle: Spit",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_spit.info": "Emit a spit particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_squid_ink": "Particle: Squid Ink",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_squid_ink.info": "Emit a squid ink particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_sweep_attack": "Particle: Sweep Attack",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_sweep_attack.info": "Emit a sweep attack particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_totem_of_undying": "Particle: Totem of Undying",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_totem_of_undying.info": "Emit a totem of undying particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_underwater": "Particle: Underwater",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_underwater.info": "Emit a underwater particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_splash": "Particle: Splash",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_splash.info": "Emit a splash particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_witch": "Particle: Witch",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_witch.info": "Emit a witch particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_bubble_pop": "Particle: Bubble Pop",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_bubble_pop.info": "Emit a bubble pop particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_current_down": "Particle: Downwards Current",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_current_down.info": "Emit a downwards current particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_bubble_column_up": "Particle: Upwards Current",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_bubble_column_up.info": "Emit an upwards current particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_nautilus": "Particle: Nautilus",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_nautilus.info": "Emit a nautilus particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dolphin": "Particle: Dolphin",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dolphin.info": "Emit a dolphin particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_campfire_cosy_smoke": "Particle: Cosy Campfire Smoke",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_campfire_cosy_smoke.info": "Emit a cosy campfire smoke particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_campfire_signal_smoke": "Particle: Signal Campfire Smoke",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_campfire_signal_smoke.info": "Emit a signal campfire smoke particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dripping_honey": "Particle: Dripping Honey",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_dripping_honey.info": "Emit a dripping honey particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_falling_honey": "Particle: Falling Honey",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_falling_honey.info": "Emit a falling honey particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_landing_honey": "Particle: Landing Honey",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_landing_honey.info": "Emit a landing honey particle with a certain velocity.",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_falling_nectar": "Particle: Falling Nectar",
  "aspect.integrateddynamics.write.double.effect.particle.minecraft_falling_nectar.info": "Emit a falling nectar particle with a certain velocity.",
  "aspect.integrateddynamics.read.boolean.block.block": "Has Block",
  "aspect.integrateddynamics.read.boolean.block.block.info": "If the target space has a block",
  "aspect.integrateddynamics.read.string.block.dimension": "Dimension",
  "aspect.integrateddynamics.read.string.block.dimension.info": "The id of the target world dimension",
  "aspect.integrateddynamics.read.integer.block.posx": "X Coordinate",
  "aspect.integrateddynamics.read.integer.block.posx.info": "The X coordinate of the target",
  "aspect.integrateddynamics.read.integer.block.posy": "Y Coordinate",
  "aspect.integrateddynamics.read.integer.block.posy.info": "The Y coordinate of the target",
  "aspect.integrateddynamics.read.integer.block.posz": "Z Coordinate",
  "aspect.integrateddynamics.read.integer.block.posz.info": "The Z coordinate of the target",
  "aspect.integrateddynamics.read.nbt.block.tile": "Tile Entity NBT",
  "aspect.integrateddynamics.read.nbt.block.tile.info": "The target Tile Entity as NBT",
  "aspect.integrateddynamics.read.string.block.biome": "Biome",
  "aspect.integrateddynamics.read.string.block.biome.info": "The biome name at the target",
  "aspect.integrateddynamics.read.integer.block.light": "Light Level",
  "aspect.integrateddynamics.read.integer.block.light.info": "The light level at the target",
  "aspect.integrateddynamics.read.block.block": "Block",
  "aspect.integrateddynamics.read.block.block.info": "The target block",
  "aspect.integrateddynamics.read.integer.entity.itemframerotation": "Item Frame Rotation",
  "aspect.integrateddynamics.read.integer.entity.itemframerotation.info": "The index of the rotation the item in the attached Item Frame has.",
  "aspect.integrateddynamics.read.list.entity.entities": "Entities",
  "aspect.integrateddynamics.read.list.entity.entities.info": "The entities in the target space",
  "aspect.integrateddynamics.read.list.entity.players": "Players",
  "aspect.integrateddynamics.read.list.entity.players.info": "The players that are in this world",
  "aspect.integrateddynamics.read.entity.entity": "Entity",
  "aspect.integrateddynamics.read.entity.entity.info": "The selected entity in the target space",
  "aspect.integrateddynamics.read.itemstack.entity.itemframecontents": "Item Frame",
  "aspect.integrateddynamics.read.itemstack.entity.itemframecontents.info": "The item in an Item Frame attached to the reader",
  "aspect.integrateddynamics.read.integer.extradimensional.random": "Random",
  "aspect.integrateddynamics.read.integer.extradimensional.random.info": "A random integer value",
  "aspect.integrateddynamics.read.integer.extradimensional.playercount": "Player Count",
  "aspect.integrateddynamics.read.integer.extradimensional.playercount.info": "The amount of players in the server",
  "aspect.integrateddynamics.read.integer.extradimensional.ticktime": "Tick time",
  "aspect.integrateddynamics.read.integer.extradimensional.ticktime.info": "The average tick time in nanoseconds for the server",
  "aspect.integrateddynamics.read.double.extradimensional.tps": "TPS",
  "aspect.integrateddynamics.read.double.extradimensional.tps.info": "The average number of ticks per second over all worlds",
  "aspect.integrateddynamics.read.list.extradimensional.players": "Players",
  "aspect.integrateddynamics.read.list.extradimensional.players.info": "The players that are online on this server",
  "aspect.integrateddynamics.read.boolean.fluid.empty": "Tank Empty",
  "aspect.integrateddynamics.read.boolean.fluid.empty.info": "If the target fluid tank is empty",
  "aspect.integrateddynamics.read.boolean.fluid.full": "Tank Full",
  "aspect.integrateddynamics.read.boolean.fluid.full.info": "If the target fluid tank is full",
  "aspect.integrateddynamics.read.boolean.fluid.nonempty": "Tank Not Empty",
  "aspect.integrateddynamics.read.boolean.fluid.nonempty.info": "If the target fluid tank has something in it",
  "aspect.integrateddynamics.read.boolean.fluid.applicable": "Is Tank",
  "aspect.integrateddynamics.read.boolean.fluid.applicable.info": "If the target has a fluid tank",
  "aspect.integrateddynamics.read.integer.fluid.amount": "Fluid Amount",
  "aspect.integrateddynamics.read.integer.fluid.amount.info": "The amount of fluid in mB in the active tank",
  "aspect.integrateddynamics.read.integer.fluid.totalamount": "Total Fluid Amount",
  "aspect.integrateddynamics.read.integer.fluid.totalamount.info": "The total amount of fluid in mB",
  "aspect.integrateddynamics.read.integer.fluid.capacity": "Fluid Capacity",
  "aspect.integrateddynamics.read.integer.fluid.capacity.info": "Total capacity of the active tank",
  "aspect.integrateddynamics.read.integer.fluid.totalcapacity": "Total Fluid Capacity",
  "aspect.integrateddynamics.read.integer.fluid.totalcapacity.info": "Total capacity of the tank",
  "aspect.integrateddynamics.read.integer.fluid.tanks": "Tanks",
  "aspect.integrateddynamics.read.integer.fluid.tanks.info": "The amount of tanks found at the target",
  "aspect.integrateddynamics.read.double.fluid.fillratio": "Fluid Fill Ratio",
  "aspect.integrateddynamics.read.double.fluid.fillratio.info": "The amount of fluid in the active tank divided by its capacity",
  "aspect.integrateddynamics.read.list.fluid.fluidstacks": "Tank Fluids",
  "aspect.integrateddynamics.read.list.fluid.fluidstacks.info": "The list of fluids in all tanks",
  "aspect.integrateddynamics.read.list.fluid.capacities": "Tank Capacities",
  "aspect.integrateddynamics.read.list.fluid.capacities.info": "The list of capacities of all tanks",
  "aspect.integrateddynamics.read.fluidstack.fluid": "Tank Fluid",
  "aspect.integrateddynamics.read.fluidstack.fluid.info": "The fluid in the target tank",
  "aspect.integrateddynamics.read.fluidstack.block": "Block Fluid",
  "aspect.integrateddynamics.read.fluidstack.block.info": "The fluid in the target block",
  "aspect.integrateddynamics.read.boolean.inventory.full": "Inventory Full",
  "aspect.integrateddynamics.read.boolean.inventory.full.info": "If all slots have at least one item",
  "aspect.integrateddynamics.read.boolean.inventory.empty": "Inventory Empty",
  "aspect.integrateddynamics.read.boolean.inventory.empty.info": "If all slots are empty",
  "aspect.integrateddynamics.read.boolean.inventory.nonempty": "Inventory Not Empty",
  "aspect.integrateddynamics.read.boolean.inventory.nonempty.info": "If there is at least one item",
  "aspect.integrateddynamics.read.boolean.inventory.applicable": "Is Inventory",
  "aspect.integrateddynamics.read.boolean.inventory.applicable.info": "If the target has an inventory",
  "aspect.integrateddynamics.read.integer.inventory.count": "Inventory Count",
  "aspect.integrateddynamics.read.integer.inventory.count.info": "Get the total amount of items",
  "aspect.integrateddynamics.read.integer.inventory.countslot": "Slot Stacksize",
  "aspect.integrateddynamics.read.integer.inventory.countslot.info": "Get the stack size in the active slot",
  "aspect.integrateddynamics.read.integer.inventory.slots": "Slots",
  "aspect.integrateddynamics.read.integer.inventory.slots.info": "The number of slots in the inventory",
  "aspect.integrateddynamics.read.integer.inventory.slotsfilled": "Slots Filled",
  "aspect.integrateddynamics.read.integer.inventory.slotsfilled.info": "The number of slots that have an item",
  "aspect.integrateddynamics.read.double.inventory.fillratio": "Fill Ratio",
  "aspect.integrateddynamics.read.double.inventory.fillratio.info": "The number of non-empty slots divided by the total number of slots",
  "aspect.integrateddynamics.read.list.inventory.itemstacks": "Items",
  "aspect.integrateddynamics.read.list.inventory.itemstacks.info": "Get a list of the items in the inventory",
  "aspect.integrateddynamics.read.itemstack.inventory": "Slot Item",
  "aspect.integrateddynamics.read.itemstack.inventory.info": "Get the Item in the active slot",
  "aspect.integrateddynamics.read.boolean.machine.isworker": "Is Worker",
  "aspect.integrateddynamics.read.boolean.machine.isworker.info": "If the target is a worker machine",
  "aspect.integrateddynamics.read.boolean.machine.haswork": "Has Work",
  "aspect.integrateddynamics.read.boolean.machine.haswork.info": "If the target has work to process",
  "aspect.integrateddynamics.read.boolean.machine.canwork": "Can Work",
  "aspect.integrateddynamics.read.boolean.machine.canwork.info": "If the target would be able to start working in its current state",
  "aspect.integrateddynamics.read.boolean.machine.isworking": "Is Working",
  "aspect.integrateddynamics.read.boolean.machine.isworking.info": "If the target is currently working",
  "aspect.integrateddynamics.read.boolean.temperature.istemperature": "Has Temperature",
  "aspect.integrateddynamics.read.boolean.temperature.istemperature.info": "If the target has a certain temperature",
  "aspect.integrateddynamics.read.double.temperature.temperature": "Temperature",
  "aspect.integrateddynamics.read.double.temperature.temperature.info": "The current temperature of the target in degrees Kelvin",
  "aspect.integrateddynamics.read.double.temperature.maxtemperature": "Maximum Temperature",
  "aspect.integrateddynamics.read.double.temperature.maxtemperature.info": "The maximum temperature of the target in degrees Kelvin",
  "aspect.integrateddynamics.read.double.temperature.mintemperature": "Minimum Temperature",
  "aspect.integrateddynamics.read.double.temperature.mintemperature.info": "The minimum temperature of the target in degrees Kelvin",
  "aspect.integrateddynamics.read.double.temperature.defaulttemperature": "Default Temperature",
  "aspect.integrateddynamics.read.double.temperature.defaulttemperature.info": "The default temperature of the target in degrees Kelvin",
  "aspect.integrateddynamics.read.boolean.recipehandler.applicable": "Is Recipe Handler",
  "aspect.integrateddynamics.read.boolean.recipehandler.applicable.info": "If the target can handle recipes",
  "aspect.integrateddynamics.read.list.recipehandler.recipes": "Recipes",
  "aspect.integrateddynamics.read.list.recipehandler.recipes.info": "Recipes that can be handled by the target",
  "aspect.integrateddynamics.read.operator.recipehandler.recipeoutputbyinput": "Recipe Output By Input",
  "aspect.integrateddynamics.read.operator.recipehandler.recipeoutputbyinput.info": "An operator that returns the resulting recipe output for a given input.",
  "aspect.integrateddynamics.read.operator.recipehandler.recipeinputsbyoutput": "Recipe Inputs By Output",
  "aspect.integrateddynamics.read.operator.recipehandler.recipeinputsbyoutput.info": "An operator that returns all possible recipe inputs for a given output.",
  "aspect.integrateddynamics.read.operator.recipehandler.recipesbyinput": "Recipes By Input",
  "aspect.integrateddynamics.read.operator.recipehandler.recipesbyinput.info": "An operator that returns all possible recipes for a given input.",
  "aspect.integrateddynamics.read.operator.recipehandler.recipesbyoutput": "Recipes By Output",
  "aspect.integrateddynamics.read.operator.recipehandler.recipesbyoutput.info": "An operator that returns all possible recipes for a given output.",
  "aspect.integrateddynamics.read.operator.recipehandler.recipebyinput": "Recipe By Input",
  "aspect.integrateddynamics.read.operator.recipehandler.recipebyinput.info": "An operator that returns a recipe for a given input.",
  "aspect.integrateddynamics.read.operator.recipehandler.recipebyoutput": "Recipe By Output",
  "aspect.integrateddynamics.read.operator.recipehandler.recipebyoutput.info": "An operator that returns a recipe for a given output.",
  "aspect.integrateddynamics.read.boolean.fe.applicable": "Is FE Handler",
  "aspect.integrateddynamics.read.boolean.fe.applicable.info": "If the target in some way handles FE",
  "aspect.integrateddynamics.read.boolean.fe.isreceiver": "Is FE Receiver",
  "aspect.integrateddynamics.read.boolean.fe.isreceiver.info": "If the target can receive FE",
  "aspect.integrateddynamics.read.boolean.fe.isprovider": "Is FE Provider",
  "aspect.integrateddynamics.read.boolean.fe.isprovider.info": "If the target can provide FE",
  "aspect.integrateddynamics.read.boolean.fe.canextract": "Can Extract FE",
  "aspect.integrateddynamics.read.boolean.fe.canextract.info": "If FE can really be extracted from the target, takes into account storage",
  "aspect.integrateddynamics.read.boolean.fe.caninsert": "Can Insert FE",
  "aspect.integrateddynamics.read.boolean.fe.caninsert.info": "If FE can really be inserted into the target, takes into account storage and capacity",
  "aspect.integrateddynamics.read.boolean.fe.isfull": "Is FE Buffer Full",
  "aspect.integrateddynamics.read.boolean.fe.isfull.info": "If the target's FE buffer is completely full",
  "aspect.integrateddynamics.read.boolean.fe.isempty": "Is FE Buffer Empty",
  "aspect.integrateddynamics.read.boolean.fe.isempty.info": "If the target's FE buffer is completely empty",
  "aspect.integrateddynamics.read.boolean.fe.isnonempty": "Is FE Buffer Not Empty",
  "aspect.integrateddynamics.read.boolean.fe.isnonempty.info": "If the target's FE buffer is not empty",
  "aspect.integrateddynamics.read.integer.fe.amount": "Stored FE",
  "aspect.integrateddynamics.read.integer.fe.amount.info": "The amount of FE stored in the target",
  "aspect.integrateddynamics.read.integer.fe.capacity": "FE Capacity",
  "aspect.integrateddynamics.read.integer.fe.capacity.info": "The FE capacity of the target",
  "aspect.integrateddynamics.read.double.fe.fillratio": "FE Fill Ratio",
  "aspect.integrateddynamics.read.double.fe.fillratio.info": "The amount of FE in the target divided by its capacity",
  "aspect.integrateddynamics.read.boolean.network.applicable": "Is Network",
  "aspect.integrateddynamics.read.boolean.network.applicable.info": "If the target has a network",
  "aspect.integrateddynamics.read.integer.network.elementcount": "Elements",
  "aspect.integrateddynamics.read.integer.network.elementcount.info": "The amount of elements in the target network",
  "aspect.integrateddynamics.read.integer.network.energy.batterycount": "Energy Batteries",
  "aspect.integrateddynamics.read.integer.network.energy.batterycount.info": "The amount of energy batteries in the target network",
  "aspect.integrateddynamics.read.integer.network.energy.stored": "Energy Stored",
  "aspect.integrateddynamics.read.integer.network.energy.stored.info": "The amount of energy available in the target network",
  "aspect.integrateddynamics.read.integer.network.energy.max": "Energy Capacity",
  "aspect.integrateddynamics.read.integer.network.energy.max.info": "The energy capacity of the network",
  "aspect.integrateddynamics.read.integer.network.energy.consumptionrate": "Energy Consumption Rate",
  "aspect.integrateddynamics.read.integer.network.energy.consumptionrate.info": "The current energy consumption rate of the target network per tick",
  "aspect.integrateddynamics.read.any.network.value": "Value",
  "aspect.integrateddynamics.read.any.network.value.info": "The value that is being exposed by the target",
  "aspect.integrateddynamics.read.boolean.redstone.high": "Redstone High",
  "aspect.integrateddynamics.read.boolean.redstone.high.info": "If the redstone level is at its maximum",
  "aspect.integrateddynamics.read.boolean.redstone.low": "Redstone Low",
  "aspect.integrateddynamics.read.boolean.redstone.low.info": "If there is no redstone level",
  "aspect.integrateddynamics.read.boolean.redstone.nonlow": "Redstone",
  "aspect.integrateddynamics.read.boolean.redstone.nonlow.info": "If there is a redstone level",
  "aspect.integrateddynamics.read.boolean.redstone.clock": "Redstone Clock",
  "aspect.integrateddynamics.read.boolean.redstone.clock.info": "Pulses with a configurable length and interval.",
  "aspect.integrateddynamics.read.integer.redstone.value": "Redstone",
  "aspect.integrateddynamics.read.integer.redstone.value.info": "Get the exact redstone level",
  "aspect.integrateddynamics.read.integer.redstone.comparator": "Comparator",
  "aspect.integrateddynamics.read.integer.redstone.comparator.info": "Get the comparator value",
  "aspect.integrateddynamics.write.boolean.redstone": "Redstone",
  "aspect.integrateddynamics.write.boolean.redstone.info": "Outputs a full redstone signal if true",
  "aspect.integrateddynamics.write.boolean.redstone.pulse": "Redstone Pulse",
  "aspect.integrateddynamics.write.boolean.redstone.pulse.info": "Outputs a pulse with the configured redstone value if the given value changes.",
  "aspect.integrateddynamics.write.integer.redstone": "Redstone",
  "aspect.integrateddynamics.write.integer.redstone.info": "Outputs the value as exact redstone signal",
  "aspect.integrateddynamics.write.integer.redstone.pulse": "Redstone Pulse",
  "aspect.integrateddynamics.write.integer.redstone.pulse.info": "Outputs a pulse with the configured redstone value if the given value changes.",
  "aspect.integrateddynamics.read.boolean.world.entity": "Has Entity",
  "aspect.integrateddynamics.read.boolean.world.entity.info": "If the target space has an entity",
  "aspect.integrateddynamics.read.boolean.world.mob": "Has Mob",
  "aspect.integrateddynamics.read.boolean.world.mob.info": "If the target space has a mob",
  "aspect.integrateddynamics.read.boolean.world.animal": "Has Animal",
  "aspect.integrateddynamics.read.boolean.world.animal.info": "If the target space has an animal",
  "aspect.integrateddynamics.read.boolean.world.player": "Has Player",
  "aspect.integrateddynamics.read.boolean.world.player.info": "If the target space has a player",
  "aspect.integrateddynamics.read.boolean.world.item": "Has Item",
  "aspect.integrateddynamics.read.boolean.world.item.info": "If the target space has an item",
  "aspect.integrateddynamics.read.boolean.world.weather.clear": "Weather: Clear",
  "aspect.integrateddynamics.read.boolean.world.weather.clear.info": "If there is a clear weather in the world",
  "aspect.integrateddynamics.read.boolean.world.weather.raining": "Weather: Rain",
  "aspect.integrateddynamics.read.boolean.world.weather.raining.info": "If there it is raining in the world",
  "aspect.integrateddynamics.read.boolean.world.weather.thunder": "Weather: Thunder",
  "aspect.integrateddynamics.read.boolean.world.weather.thunder.info": "If there is a thunderstorm in the world",
  "aspect.integrateddynamics.read.boolean.world.isday": "Is Day",
  "aspect.integrateddynamics.read.boolean.world.isday.info": "If it is day in the target world",
  "aspect.integrateddynamics.read.boolean.world.isnight": "Is Night",
  "aspect.integrateddynamics.read.boolean.world.isnight.info": "If it is night in the target world",
  "aspect.integrateddynamics.read.integer.world.entity": "Entities",
  "aspect.integrateddynamics.read.integer.world.entity.info": "The amount of entities at the target space",
  "aspect.integrateddynamics.read.integer.world.raincountdown": "Rain Countdown",
  "aspect.integrateddynamics.read.integer.world.raincountdown.info": "The amount of ticks until it will rain in this world",
  "aspect.integrateddynamics.read.integer.world.ticktime": "Tick time",
  "aspect.integrateddynamics.read.integer.world.ticktime.info": "The average tick time in milliseconds for this world",
  "aspect.integrateddynamics.read.integer.world.daytime": "Day Time",
  "aspect.integrateddynamics.read.integer.world.daytime.info": "The time that has passed in the target world day",
  "aspect.integrateddynamics.read.integer.world.lightlevel": "Light Level",
  "aspect.integrateddynamics.read.integer.world.lightlevel.info": "The light level at the target",
  "aspect.integrateddynamics.read.integer.world.players": "Player Count",
  "aspect.integrateddynamics.read.integer.world.players.info": "The players that are online in this world",
  "aspect.integrateddynamics.read.double.world.tps": "TPS",
  "aspect.integrateddynamics.read.double.world.tps.info": "The number of ticks per second in this world",
  "aspect.integrateddynamics.read.long.world.time": "Time",
  "aspect.integrateddynamics.read.long.world.time.info": "The world time dependent of the set time command",
  "aspect.integrateddynamics.read.long.world.totaltime": "Total Time",
  "aspect.integrateddynamics.read.long.world.totaltime.info": "The world time independent of the set time command",
  "aspect.integrateddynamics.read.string.world.worldname": "World Name",
  "aspect.integrateddynamics.read.string.world.worldname.info": "The target world name",
  "aspect.integrateddynamics.read.list.world.players": "Players",
  "aspect.integrateddynamics.read.list.world.players.info": "The players that are in this world",
  "aspect.aspecttypes.integrateddynamics.integer.tankid": "Tank ID",
  "aspect.aspecttypes.integrateddynamics.integer.slotid": "Slot ID",
  "aspect.aspecttypes.integrateddynamics.integer.listindex": "List Element",
  "aspect.aspecttypes.integrateddynamics.integer.range": "Range",
  "aspect.aspecttypes.integrateddynamics.integer.channel": "Channel",
  "aspect.aspecttypes.integrateddynamics.integer.interval": "Pulse Interval",
  "aspect.aspecttypes.integrateddynamics.integer.length": "Pulse Length",
  "aspect.aspecttypes.integrateddynamics.integer.offset": "Pulse Time Offset",
  "aspect.aspecttypes.integrateddynamics.double.volume": "Volume",
  "aspect.aspecttypes.integrateddynamics.double.frequency": "Frequency",
  "aspect.aspecttypes.integrateddynamics.double.offset_x": "X Offset",
  "aspect.aspecttypes.integrateddynamics.double.offset_y": "Y Offset",
  "aspect.aspecttypes.integrateddynamics.double.offset_z": "Z Offset",
  "aspect.aspecttypes.integrateddynamics.integer.particles": "Particle Count",
  "aspect.aspecttypes.integrateddynamics.double.spread_x": "X Spread",
  "aspect.aspecttypes.integrateddynamics.double.spread_y": "Y Spread",
  "aspect.aspecttypes.integrateddynamics.double.spread_z": "Z Spread",
  "aspect.aspecttypes.integrateddynamics.boolean.strong_power": "Strong Power",
  "aspect.aspecttypes.integrateddynamics.boolean.strong_power.info": "If a Redstone Torch should be simulated instead of regular Redstone Dust",
  "aspect.aspecttypes.integrateddynamics.integer.pulse_emit_value": "Pulse Value",
  "aspect.aspecttypes.integrateddynamics.integer.pulse_emit_value.info": "The pulse value that should be emitted.",
  "operator.integrateddynamics": "Operator",
  "operator.integrateddynamics.applied.operator_name": "Applied %s [%s]",
  "operator.integrateddynamics.applied.type": "§Applied to: §r%s",
  "operator.integrateddynamics.tooltip.operator_name": "§eOperator: §r%s (%s)",
  "operator.integrateddynamics.tooltip.operator_category": "§eCategory: §r%s",
  "operator.integrateddynamics.tooltip.variable_ids": "§eVariable IDs: §r§o%s",
  "operator.integrateddynamics.tooltip.input_type_name": "§eInput Type %s: §r%s",
  "operator.integrateddynamics.tooltip.output_type_name": "§eOutput Type: §r%s",
  "operator.integrateddynamics.error.wrong_input_length": "The operator %s received an input of length %s while it needs a length of %s.",
  "operator.integrateddynamics.error.operator_param_wrong_input_length": "An operator input length of %s is required, while %s only has an input length of %s.",
  "operator.integrateddynamics.error.null_type": "The operator %s received an input with a null variable at position %s.",
  "operator.integrateddynamics.error.wrong_type": "The operator %s received an input with type %s at position %s while the type %s was expected.",
  "operator.integrateddynamics.error.wrong_type_output": "The evaluation for operator %s returned %s instead of the expected %s.",
  "operator.integrateddynamics.error.wrong_currying_type": "The operator %s received an input with type %s at position %s while the type %s was expected for currying.",
  "operator.integrateddynamics.error.currying_overflow": "While currying the operator %s (%s inputs) with %s inputs, an operator was expected as output, but got %s.",
  "operator.integrateddynamics.error.wrong_predicate": "The operator %s received an input operator that outputs the type %s while the type %s was expected.",
  "operator.integrateddynamics.error.illegal_property": "The property is expected to output %s, while %s was found for operator %s.",
  "operator.integrateddynamics.error.variable_not_in_network": "Variable with id %s could not be found within the current network.",
  "operator.integrateddynamics.error.cyclic_reference": "Variable with id %s depends on itself, infinite recursion.",
  "operator.integrateddynamics.error.wrong_input_length_virtual": "The operator %s received the operator %s with input length %s while length %s is required.",
  "operator.integrateddynamics.error.operator_recursion_limit": "Reached the operator recursion limit of %s invocations for %s. Trying to crash the game, are you?",
  "operator.integrateddynamics.error.operator_nbt_path_expression": "Found an invalid NBT path expression '%s': %s",
  "operator.integrateddynamics.error.cast.no_mapping": "No cast mapping exists from %s to %s.",
  "operator.integrateddynamics.error.cast.illegal": "Attempted to cast %s to %s, for value \"%s\".",
  "operator.integrateddynamics.error.cast.unexpected": "The value of type %s does not correspond to the expected type %s to cast to %s.",
  "operator.integrateddynamics.error.divide_by_zero": "Division by zero is not allowed.",
  "operator.integrateddynamics.error.parse": "Value \"%s\" could not be parsed to a %s.",
  "operator.integrateddynamics.error.no_derserializer": "No serializer was found to deserialize the operator value \"%s\".",
  "operator.integrateddynamics.error.regex.invalid": "Invalid regex: \"%s\"",
  "operator.integrateddynamics.error.substring.to_greater_than_from": "The substring end position must strictly larger than the start position.",
  "operator.integrateddynamics.error.substring.index_negative": "Substring indexes must not be negative.",
  "operator.integrateddynamics.error.substring.longer_than_string": "Substring indexes must not exceed the string length.",
  "operator.integrateddynamics.error.group.index_negative": "The group index must not be negative.",
  "operator.integrateddynamics.error.group.no_match": "No group regex match was found for regex \"%s\" in \"%s\".",
  "operator.integrateddynamics.error.group.no_match_group": "No group regex match was found for regex \"%s\" in \"%s\" for group \"%s\".",
  "operator.integrateddynamics.error.regex_scan.index_negative": "The regex scan index must not be negative.",
  "operator.integrateddynamics.error.regex_scan.no_match_group": "No regex scan match was found for regex \"%s\" in \"%s\" for group \"%s\".",
  "operator.integrateddynamics.error.infinite_list.illegal": "The operator %s can not be applied on infinite lists.",
  "operator.integrateddynamics.error.index_out_of_bounds": "Index out of bounds. Tried to get element %s of a list of length %s. Use the getOrDefault operator to provide a default when an index is out of bounds.",
  "operator.integrateddynamics.error.slice.to_greater_than_from": "The slice end position must strictly larger than the start position.",
  "operator.integrateddynamics.error.slice.index_negative": "Slice indexes must not be negative.",
  "operator.integrateddynamics.error.reduce.empty": "The reduce1 operator tried to get the head of an empty list. Use the reduce operator instead to provide a base value to support empty lists.",
  "operator.integrateddynamics.error.operator_not_found": "Could not find the operator with name \"%s\".",
  "operator.integrateddynamics.logical": "Logical",
  "operator.integrateddynamics.logical.basename": "Logical %s",
  "operator.integrateddynamics.logical.and": "And",
  "operator.integrateddynamics.logical.or": "Or",
  "operator.integrateddynamics.logical.not": "Not",
  "operator.integrateddynamics.logical.nand": "Nand",
  "operator.integrateddynamics.logical.nor": "Nor",
  "operator.integrateddynamics.arithmetic": "Arithmetic",
  "operator.integrateddynamics.arithmetic.basename": "Arithmetic %s",
  "operator.integrateddynamics.arithmetic.addition": "Addition",
  "operator.integrateddynamics.arithmetic.subtraction": "Subtraction",
  "operator.integrateddynamics.arithmetic.multiplication": "Multiplication",
  "operator.integrateddynamics.arithmetic.division": "Division",
  "operator.integrateddynamics.arithmetic.maximum": "Maximum",
  "operator.integrateddynamics.arithmetic.maximum.info": "Takes the largest of two values.",
  "operator.integrateddynamics.arithmetic.minimum": "Minimum",
  "operator.integrateddynamics.arithmetic.minimum.info": "Takes the smallest of two values.",
  "operator.integrateddynamics.integer": "Integer",
  "operator.integrateddynamics.integer.basename": "Integer %s",
  "operator.integrateddynamics.integer.modulus": "Modulus",
  "operator.integrateddynamics.integer.increment": "Increment",
  "operator.integrateddynamics.integer.decrement": "Decrement",
  "operator.integrateddynamics.relational": "Relational",
  "operator.integrateddynamics.relational.basename": "Relational %s",
  "operator.integrateddynamics.relational.equals": "Equals",
  "operator.integrateddynamics.relational.equals.info": "Type one and two must be equal.",
  "operator.integrateddynamics.relational.gt": "Greater Than",
  "operator.integrateddynamics.relational.lt": "Less Than",
  "operator.integrateddynamics.relational.notequals": "Not Equals",
  "operator.integrateddynamics.relational.notequals.info": "Type one and two must be equal.",
  "operator.integrateddynamics.relational.ge": "Greater Than or Equal",
  "operator.integrateddynamics.relational.le": "Less Than or Equal",
  "operator.integrateddynamics.binary": "Binary",
  "operator.integrateddynamics.binary.basename": "Binary %s",
  "operator.integrateddynamics.binary.and": "And",
  "operator.integrateddynamics.binary.or": "Or",
  "operator.integrateddynamics.binary.xor": "Xor",
  "operator.integrateddynamics.binary.complement": "Complement",
  "operator.integrateddynamics.binary.rshift": "Right Shift",
  "operator.integrateddynamics.binary.rshift.info": "Right Shift with ones fill",
  "operator.integrateddynamics.binary.lshift": "Left Shift",
  "operator.integrateddynamics.binary.rzshift": "Right Zero Shift",
  "operator.integrateddynamics.binary.rzshift.info": "Right Shift with zeros fill",
  "operator.integrateddynamics.string": "String",
  "operator.integrateddynamics.string.basename": "String %s",
  "operator.integrateddynamics.string.length": "Length",
  "operator.integrateddynamics.string.length.info": "The length of the given String",
  "operator.integrateddynamics.string.concat": "Concat",
  "operator.integrateddynamics.string.concat.info": "Concatenate the two given Strings to one",
  "operator.integrateddynamics.string.contains": "String Contains",
  "operator.integrateddynamics.string.contains.info": "If the given substring is contained within the given string.",
  "operator.integrateddynamics.string.contains_regex": "Contains Regex",
  "operator.integrateddynamics.string.contains_regex.info": "If the regular expression given matches any substring of the given string.",
  "operator.integrateddynamics.string.matches_regex": "Matches Regex",
  "operator.integrateddynamics.string.matches_regex.info": "If the regular expression given matches the given string.",
  "operator.integrateddynamics.string.index_of": "Index Of",
  "operator.integrateddynamics.string.index_of.info": "Get the index of the first occurrence of a substring matching the search term in the given string.",
  "operator.integrateddynamics.string.index_of_regex": "Index Of Regex",
  "operator.integrateddynamics.string.index_of_regex.info": "Get the index of the first occurrence of a substring matching the pattern in the given string.",
  "operator.integrateddynamics.string.starts_with": "Starts With",
  "operator.integrateddynamics.string.starts_with.info": "If the given substring matches the start of the given string.",
  "operator.integrateddynamics.string.ends_with": "Ends With",
  "operator.integrateddynamics.string.ends_with.info": "If the string given matches the end of the given string.",
  "operator.integrateddynamics.string.split_on": "Split On",
  "operator.integrateddynamics.string.split_on.info": "Get a list containing pieces, split on the given (literal) delimiter, of the given string.",
  "operator.integrateddynamics.string.split_on_regex": "Split On Regex",
  "operator.integrateddynamics.string.split_on_regex.info": "Get a list containing pieces, split on the given regular expression, of the given string.",
  "operator.integrateddynamics.string.substring": "Substring",
  "operator.integrateddynamics.string.substring.info": "Get a substring, from the given index (inclusive) to the given index (exclusive), of the given string.",
  "operator.integrateddynamics.string.regex_group": "Regex Group",
  "operator.integrateddynamics.string.regex_group.info": "Search for the given regular expression and return in that match the group at the given index, in the given string.",
  "operator.integrateddynamics.string.regex_groups": "Regex Groups",
  "operator.integrateddynamics.string.regex_groups.info": "Search for the given regular expression and return in that match a list of all its groups, in the given string.",
  "operator.integrateddynamics.string.regex_scan": "Regex Scan",
  "operator.integrateddynamics.string.regex_scan.info": "Search for all matches of the given regular expression and return the group at the given index, in the given string.",
  "operator.integrateddynamics.string.replace": "Replace",
  "operator.integrateddynamics.string.replace.info": "Find all instances of the search term and replace them with the given string, in the given string.",
  "operator.integrateddynamics.string.replace_regex": "Replace Regex",
  "operator.integrateddynamics.string.replace_regex.info": "Find all matches of the search pattern and replace them with the given string, in the given string.",
  "operator.integrateddynamics.string.join": "Join",
  "operator.integrateddynamics.string.join.info": "Create a joined string with the given string delimiter and the given list of strings.",
  "operator.integrateddynamics.string.name": "To String",
  "operator.integrateddynamics.string.name.info": "Get the string or name of a named object or converts it to a string",
  "operator.integrateddynamics.string.unique_name": "Unique Name",
  "operator.integrateddynamics.string.unique_name.info": "Get the unique name of an object",
  "operator.integrateddynamics.double": "Double",
  "operator.integrateddynamics.double.basename": "Double %s",
  "operator.integrateddynamics.number": "Number",
  "operator.integrateddynamics.number.basename": "Number %s",
  "operator.integrateddynamics.double.round": "Round",
  "operator.integrateddynamics.double.round.info": "Round to the nearest Integer",
  "operator.integrateddynamics.double.ceil": "Ceil",
  "operator.integrateddynamics.double.ceil.info": "Round up to the nearest Integer",
  "operator.integrateddynamics.double.floor": "Floor",
  "operator.integrateddynamics.double.floor.info": "Round down to the nearest Integer",
  "operator.integrateddynamics.list": "List",
  "operator.integrateddynamics.list.basename": "List %s",
  "operator.integrateddynamics.list.length": "Length",
  "operator.integrateddynamics.list.length.info": "The length of the given list",
  "operator.integrateddynamics.list.empty": "Empty",
  "operator.integrateddynamics.list.empty.info": "If the list is empty",
  "operator.integrateddynamics.list.notempty": "Not Empty",
  "operator.integrateddynamics.list.notempty.info": "If the list is not empty",
  "operator.integrateddynamics.list.get": "Get",
  "operator.integrateddynamics.list.get.info": "Get the list element at the given position, throws an error if the index is out of bounds.",
  "operator.integrateddynamics.list.get_or_default": "Get Or Default",
  "operator.integrateddynamics.list.get_or_default.info": "Safely get the list element at the given position, if that element is not available, return the given default value.",
  "operator.integrateddynamics.list.contains": "Contains",
  "operator.integrateddynamics.list.contains.info": "If the list contains the given element.",
  "operator.integrateddynamics.list.contains_p": "Contains Predicate",
  "operator.integrateddynamics.list.contains_p.info": "If at least one of the elements of the list returns true for the given predicate.",
  "operator.integrateddynamics.list.count": "Count",
  "operator.integrateddynamics.list.count.info": "The number of times the given element is found in the list.",
  "operator.integrateddynamics.list.count_p": "Count Predicate",
  "operator.integrateddynamics.list.count_p.info": "The number of times the given predicate returns true for the elements in the list.",
  "operator.integrateddynamics.list.append": "Append",
  "operator.integrateddynamics.list.append.info": "Append to the given list the given item.",
  "operator.integrateddynamics.list.concat": "Concat",
  "operator.integrateddynamics.list.concat.info": "Concatenate the two list to each other.",
  "operator.integrateddynamics.list.lazybuilt": "Lazy List Builder",
  "operator.integrateddynamics.list.lazybuilt.info": "Build a list lazily using a start value and an operator that is applied to the previous element to get a next element.",
  "operator.integrateddynamics.list.head": "Head",
  "operator.integrateddynamics.list.head.info": "Get the first element of the given list.",
  "operator.integrateddynamics.list.tail": "Tail",
  "operator.integrateddynamics.list.tail.info": "Remove the first element from the list.",
  "operator.integrateddynamics.list.uniq_p": "Unique Predicate",
  "operator.integrateddynamics.list.uniq_p.info": "Deduplicate all elements in the list based on the given comparator predicate.",
  "operator.integrateddynamics.list.uniq": "Uniq",
  "operator.integrateddynamics.list.uniq.info": "Deduplicate all elements in the list.",
  "operator.integrateddynamics.list.slice": "Slice",
  "operator.integrateddynamics.list.slice.info": "Take a subset of the given list from the given index (inclusive) to the given index (exclusive).",
  "operator.integrateddynamics.block": "Block",
  "operator.integrateddynamics.block.basename": "Block %s",
  "operator.integrateddynamics.block.opaque": "Opaque",
  "operator.integrateddynamics.block.opaque.info": "If the given block is opaque, non-transparent",
  "operator.integrateddynamics.block.itemstack": "Item",
  "operator.integrateddynamics.block.itemstack.info": "The item representation of the given block",
  "operator.integrateddynamics.block.mod": "Mod",
  "operator.integrateddynamics.block.mod.info": "The name of the mod owning the given block",
  "operator.integrateddynamics.block.breaksound": "Block Break Sound",
  "operator.integrateddynamics.block.breaksound.info": "The break sound of the given block",
  "operator.integrateddynamics.block.placesound": "Block Place Sound",
  "operator.integrateddynamics.block.placesound.info": "The place sound of the given block",
  "operator.integrateddynamics.block.stepsound": "Block Step Sound",
  "operator.integrateddynamics.block.stepsound.info": "The step sound of the given block",
  "operator.integrateddynamics.block.isshearable": "Block Is Shearable",
  "operator.integrateddynamics.block.isshearable.info": "If the given block is shearable",
  "operator.integrateddynamics.block.isplantable": "Block Is Plant",
  "operator.integrateddynamics.block.isplantable.info": "If the given block is a plant",
  "operator.integrateddynamics.block.planttype": "Block Plant Type",
  "operator.integrateddynamics.block.planttype.info": "The plant type of the given block",
  "operator.integrateddynamics.block.plant": "Block Plant",
  "operator.integrateddynamics.block.plant.info": "The resulting block when this block is planted",
  "operator.integrateddynamics.block.cansustainplantblock": "Block Can Sustain Block Plant",
  "operator.integrateddynamics.block.cansustainplantblock.info": "If the given block can sustain the given block plant",
  "operator.integrateddynamics.block.cansustainplantitem": "Block Can Sustain Item Plant",
  "operator.integrateddynamics.block.cansustainplantitem.info": "If the given block can sustain the given item plant",
  "operator.integrateddynamics.block.plantage": "Block Plant Age",
  "operator.integrateddynamics.block.plantage.info": "The age of the given plant block",
  "operator.integrateddynamics.block.blockbyname": "Block By Name",
  "operator.integrateddynamics.block.blockbyname.info": "Get the block corresponding to the given unique name, add space+number for indicating the metadata.",
  "operator.integrateddynamics.block.blockproperties": "Block Properties",
  "operator.integrateddynamics.block.blockproperties.info": "Get the block properties as NBT compound tag.",
  "operator.integrateddynamics.block.blockfromproperties": "Block Properties",
  "operator.integrateddynamics.block.blockfromproperties.info": "Get the given block applied with the given properties.",
  "operator.integrateddynamics.block.blockpossibleproperties": "Block Properties",
  "operator.integrateddynamics.block.blockpossibleproperties.info": "Get all possible block properties as NBT compound tag with list values.",
  "operator.integrateddynamics.itemstack": "Item",
  "operator.integrateddynamics.itemstack.basename": "Item %s",
  "operator.integrateddynamics.itemstack.size": "Size",
  "operator.integrateddynamics.itemstack.size.info": "The current stack size",
  "operator.integrateddynamics.itemstack.maxsize": "Max size",
  "operator.integrateddynamics.itemstack.maxsize.info": "The maximum stack size",
  "operator.integrateddynamics.itemstack.stackable": "Stackable",
  "operator.integrateddynamics.itemstack.stackable.info": "If the item stack can hold at least two items.",
  "operator.integrateddynamics.itemstack.damageable": "Damageable",
  "operator.integrateddynamics.itemstack.damageable.info": "If the item can take damage.",
  "operator.integrateddynamics.itemstack.damage": "Damage",
  "operator.integrateddynamics.itemstack.damage.info": "The current item damage",
  "operator.integrateddynamics.itemstack.maxdamage": "Max Damage",
  "operator.integrateddynamics.itemstack.maxdamage.info": "The maximum item damage",
  "operator.integrateddynamics.itemstack.enchanted": "Enchanted",
  "operator.integrateddynamics.itemstack.enchanted.info": "If the item is enchanted",
  "operator.integrateddynamics.itemstack.enchantable": "Enchantable",
  "operator.integrateddynamics.itemstack.enchantable.info": "If the item can be enchanted",
  "operator.integrateddynamics.itemstack.repaircost": "Repair Cost",
  "operator.integrateddynamics.itemstack.repaircost.info": "The repair cost of the item",
  "operator.integrateddynamics.itemstack.rarity": "Rarity",
  "operator.integrateddynamics.itemstack.rarity.info": "The rarity of the item",
  "operator.integrateddynamics.itemstack.strength": "Strength vs Block",
  "operator.integrateddynamics.itemstack.strength.info": "The strength this item has against the given block",
  "operator.integrateddynamics.itemstack.canharvest": "Can Harvest",
  "operator.integrateddynamics.itemstack.canharvest.info": "If the item can harvest the given block",
  "operator.integrateddynamics.itemstack.block": "Block",
  "operator.integrateddynamics.itemstack.block.info": "The block from the given item",
  "operator.integrateddynamics.itemstack.isfluidstack": "Has Fluid",
  "operator.integrateddynamics.itemstack.isfluidstack.info": "If the given item has a fluid",
  "operator.integrateddynamics.itemstack.fluidstack": "Fluid",
  "operator.integrateddynamics.itemstack.fluidstack.info": "The fluid from the given item",
  "operator.integrateddynamics.itemstack.fluidstackcapacity": "Fluid Capacity",
  "operator.integrateddynamics.itemstack.fluidstackcapacity.info": "The fluid capacity of the given item in mB",
  "operator.integrateddynamics.itemstack.isnbtequal": "NBT equals",
  "operator.integrateddynamics.itemstack.isnbtequal.info": "If the NBT tags of the given items are equal",
  "operator.integrateddynamics.itemstack.isitemequalnonbt": "Raw item equals no NBT",
  "operator.integrateddynamics.itemstack.isitemequalnonbt.info": "If the raw items of the given stacks are equal, ignoring NBT but including damage value.",
  "operator.integrateddynamics.itemstack.israwitemequal": "Raw item equals",
  "operator.integrateddynamics.itemstack.israwitemequal.info": "If the raw items of the given items are equal, ignoring NBT and damage value.",
  "operator.integrateddynamics.itemstack.mod": "Mod",
  "operator.integrateddynamics.itemstack.mod.info": "The name of the mod owning the given item",
  "operator.integrateddynamics.itemstack.burntime": "Fuel Burn Time",
  "operator.integrateddynamics.itemstack.burntime.info": "The fuel burn time in ticks of the given item",
  "operator.integrateddynamics.itemstack.canburn": "Is Fuel",
  "operator.integrateddynamics.itemstack.canburn.info": "If the given item can be used as fuel",
  "operator.integrateddynamics.itemstack.tag": "Tag Names",
  "operator.integrateddynamics.itemstack.tag.info": "The Tag names (strings) of the given item",
  "operator.integrateddynamics.string.tag": "Tag Values",
  "operator.integrateddynamics.string.tag.info": "The Tag values (items) of the given name",
  "operator.integrateddynamics.itemstack.hasinventory": "Item Has Inventory",
  "operator.integrateddynamics.itemstack.hasinventory.info": "If the given item has an inventory",
  "operator.integrateddynamics.itemstack.inventorysize": "Item Inventory Size",
  "operator.integrateddynamics.itemstack.inventorysize.info": "Retrieve the inventory size of the given item handler contents",
  "operator.integrateddynamics.itemstack.inventory": "Item Inventory",
  "operator.integrateddynamics.itemstack.inventory.info": "Retrieve the inventory of the given item handler contents",
  "operator.integrateddynamics.itemstack.withsize": "Item With Stacksize",
  "operator.integrateddynamics.itemstack.withsize.info": "Set the stacksize for the given item",
  "operator.integrateddynamics.itemstack.isplantable": "Item Is Plant",
  "operator.integrateddynamics.itemstack.isplantable.info": "If the given item is a plant",
  "operator.integrateddynamics.itemstack.planttype": "Item Plant Type",
  "operator.integrateddynamics.itemstack.planttype.info": "The plant type of the given item",
  "operator.integrateddynamics.itemstack.plant": "Item Plant",
  "operator.integrateddynamics.itemstack.plant.info": "The resulting block when this item is planted",
  "operator.integrateddynamics.itemstack.itembyname": "Item By Name",
  "operator.integrateddynamics.itemstack.itembyname.info": "Get the item corresponding to the given unique name, add space+number for indicating the metadata.",
  "operator.integrateddynamics.itemstack.itemlistcount": "Item List Count",
  "operator.integrateddynamics.itemstack.itemlistcount.info": "Get the total item count of exactly the given item in a list.",
  "operator.integrateddynamics.itemstack.nbt": "Item NBT",
  "operator.integrateddynamics.itemstack.nbt.info": "Get the NBT tag of the given item.",
  "operator.integrateddynamics.itemstack.hasnbt": "Has NBT",
  "operator.integrateddynamics.itemstack.hasnbt.info": "If the item stack has an NBT tag.",
  "operator.integrateddynamics.entity": "Entity",
  "operator.integrateddynamics.entity.basename": "Entity %s",
  "operator.integrateddynamics.entity.ismob": "Is Mob",
  "operator.integrateddynamics.entity.ismob.info": "If the entity is a mob",
  "operator.integrateddynamics.entity.isanimal": "Is Animal",
  "operator.integrateddynamics.entity.isanimal.info": "If the entity is an animal",
  "operator.integrateddynamics.entity.isitem": "Is Item",
  "operator.integrateddynamics.entity.isitem.info": "If the entity is an item",
  "operator.integrateddynamics.entity.isplayer": "Is Player",
  "operator.integrateddynamics.entity.isplayer.info": "If the entity is a player",
  "operator.integrateddynamics.entity.isminecart": "Is Minecart",
  "operator.integrateddynamics.entity.isminecart.info": "If the entity is a minecart",
  "operator.integrateddynamics.entity.item": "Item",
  "operator.integrateddynamics.entity.item.info": "The item from the item entity",
  "operator.integrateddynamics.entity.health": "Health",
  "operator.integrateddynamics.entity.health.info": "The entity health",
  "operator.integrateddynamics.entity.width": "Width",
  "operator.integrateddynamics.entity.width.info": "The entity width",
  "operator.integrateddynamics.entity.height": "Height",
  "operator.integrateddynamics.entity.height.info": "The entity height",
  "operator.integrateddynamics.entity.isburning": "Is Burning",
  "operator.integrateddynamics.entity.isburning.info": "If the entity is burning",
  "operator.integrateddynamics.entity.iswet": "Is Wet",
  "operator.integrateddynamics.entity.iswet.info": "If the entity is wet",
  "operator.integrateddynamics.entity.iscrouching": "Is Crouching",
  "operator.integrateddynamics.entity.iscrouching.info": "If the entity is crouching",
  "operator.integrateddynamics.entity.iseating": "Is Eating",
  "operator.integrateddynamics.entity.iseating.info": "If the entity is eating",
  "operator.integrateddynamics.entity.armorinventory": "Armor Inventory",
  "operator.integrateddynamics.entity.armorinventory.info": "The list of items the entity is carrying as armor.",
  "operator.integrateddynamics.entity.inventory": "Player Inventory",
  "operator.integrateddynamics.entity.inventory.info": "The list of items the player is carrying.",
  "operator.integrateddynamics.entity.mod": "Mod",
  "operator.integrateddynamics.entity.mod.info": "The name of the mod owning the given entity",
  "operator.integrateddynamics.entity.targetblock": "Target Block",
  "operator.integrateddynamics.entity.targetblock.info": "The block the given entity is currently looking at.",
  "operator.integrateddynamics.entity.targetentity": "Target Entity",
  "operator.integrateddynamics.entity.targetentity.info": "The entity the given entity is currently looking at.",
  "operator.integrateddynamics.entity.hasguiopen": "Has Gui Open",
  "operator.integrateddynamics.entity.hasguiopen.info": "If the given player has an external gui open.",
  "operator.integrateddynamics.entity.helditem": "Held Item Mainhand",
  "operator.integrateddynamics.entity.helditem.info": "The item the given entity is currently holding in its main hand.",
  "operator.integrateddynamics.entity.helditemoffhand": "Held Item Offhand",
  "operator.integrateddynamics.entity.helditemoffhand.info": "The item the given entity is currently holding in its off hand.",
  "operator.integrateddynamics.entity.mounted": "Mounted Entities",
  "operator.integrateddynamics.entity.mounted.info": "The entities that are currently mounted on the given entity.",
  "operator.integrateddynamics.entity.itemframecontents": "Item Frame Contents",
  "operator.integrateddynamics.entity.itemframecontents.info": "The contents from the given Item Frame.",
  "operator.integrateddynamics.entity.itemframerotation": "Item Frame Rotation",
  "operator.integrateddynamics.entity.itemframerotation.info": "The rotation from the given Item Frame.",
  "operator.integrateddynamics.entity.hurtsound": "Entity Hurt Sound",
  "operator.integrateddynamics.entity.hurtsound.info": "The hurt sound of the given entity.",
  "operator.integrateddynamics.entity.deathsound": "Entity Death Sound",
  "operator.integrateddynamics.entity.deathsound.info": "The death sound of the given entity.",
  "operator.integrateddynamics.entity.age": "Entity Age",
  "operator.integrateddynamics.entity.age.info": "The age of the given entity.",
  "operator.integrateddynamics.entity.ischild": "Entity Is Child",
  "operator.integrateddynamics.entity.ischild.info": "If the given entity is a child.",
  "operator.integrateddynamics.entity.canbreed": "Entity Can Breed",
  "operator.integrateddynamics.entity.canbreed.info": "If the given entity is ready to be bred.",
  "operator.integrateddynamics.entity.isinlove": "Entity Is In Love",
  "operator.integrateddynamics.entity.isinlove.info": "If the given entity is in love and is ready to breed.",
  "operator.integrateddynamics.entity.canbreedwith": "Entity Can Breed With",
  "operator.integrateddynamics.entity.canbreedwith.info": "If the given entity can be breed using the given item.",
  "operator.integrateddynamics.entity.isshearable": "Entity Is Shearable",
  "operator.integrateddynamics.entity.isshearable.info": "If the given entity is shearable",
  "operator.integrateddynamics.entity.nbt": "Entity NBT",
  "operator.integrateddynamics.entity.nbt.info": "Get the given entity as NBT.",
  "operator.integrateddynamics.entity.entitytype": "Entity Type",
  "operator.integrateddynamics.entity.entitytype.info": "The entity type name.",
  "operator.integrateddynamics.entity.entityitems": "Entity Items",
  "operator.integrateddynamics.entity.entityitems.info": "The items that are contained within this entity.",
  "operator.integrateddynamics.entity.entityfluids": "Entity Fluids",
  "operator.integrateddynamics.entity.entityfluids.info": "The fluids that are contained within this entity.",
  "operator.integrateddynamics.entity.entityenergystored": "Entity Energy Stored",
  "operator.integrateddynamics.entity.entityenergystored.info": "The amount of energy that is stored in this entity.",
  "operator.integrateddynamics.entity.entityenergycapacity": "Entity Energy Capacity",
  "operator.integrateddynamics.entity.entityenergycapacity.info": "The energy capacity of this entity.",
  "operator.integrateddynamics.itemstack.isfecontainer": "Is FE Container",
  "operator.integrateddynamics.itemstack.isfecontainer.info": "If the given item can hold FE",
  "operator.integrateddynamics.itemstack.storedfe": "FE Stored",
  "operator.integrateddynamics.itemstack.storedfe.info": "The amount of FE stored in this item",
  "operator.integrateddynamics.itemstack.fecapacity": "FE Capacity",
  "operator.integrateddynamics.itemstack.fecapacity.info": "The maximum amount of FE that can be stored in this item",
  "operator.integrateddynamics.fluidstack": "Fluid",
  "operator.integrateddynamics.fluidstack.basename": "Fluid %s",
  "operator.integrateddynamics.fluidstack.amount": "Amount",
  "operator.integrateddynamics.fluidstack.amount.info": "The amount of mB",
  "operator.integrateddynamics.fluidstack.block": "Block",
  "operator.integrateddynamics.fluidstack.block.info": "The block of the fluid",
  "operator.integrateddynamics.fluidstack.luminosity": "Luminosity",
  "operator.integrateddynamics.fluidstack.luminosity.info": "The fluid luminosity",
  "operator.integrateddynamics.fluidstack.density": "Density",
  "operator.integrateddynamics.fluidstack.density.info": "The fluid density",
  "operator.integrateddynamics.fluidstack.viscosity": "Viscosity",
  "operator.integrateddynamics.fluidstack.viscosity.info": "The fluid viscosity",
  "operator.integrateddynamics.fluidstack.isgaseous": "Is Gaseous",
  "operator.integrateddynamics.fluidstack.isgaseous.info": "If the fluid is gaseous",
  "operator.integrateddynamics.fluidstack.rarity": "Rarity",
  "operator.integrateddynamics.fluidstack.rarity.info": "The fluid rarity",
  "operator.integrateddynamics.fluidstack.israwfluidequal": "Raw fluid equals",
  "operator.integrateddynamics.fluidstack.israwfluidequal.info": "If the raw fluids are equal",
  "operator.integrateddynamics.fluidstack.mod": "Mod",
  "operator.integrateddynamics.fluidstack.mod.info": "The name of the mod owning the given fluid",
  "operator.integrateddynamics.fluidstack.nbt": "Fluid NBT",
  "operator.integrateddynamics.fluidstack.nbt.info": "Get the NBT tag of the given fluid.",
  "operator.integrateddynamics.fluidstack.with_amount": "Fluid With Amount",
  "operator.integrateddynamics.fluidstack.with_amount.info": "Copy the given fluid with the given amount",
  "operator.integrateddynamics.nbt": "NBT",
  "operator.integrateddynamics.nbt.basename": "NBT %s",
  "operator.integrateddynamics.nbt.compound_size": "NBT Compound Size",
  "operator.integrateddynamics.nbt.compound_size.info": "The number of entries inside the given NBT compound tag",
  "operator.integrateddynamics.nbt.compound_keys": "NBT Compound Keys",
  "operator.integrateddynamics.nbt.compound_keys.info": "The list of keys inside the given NBT compound tag",
  "operator.integrateddynamics.nbt.compound_haskey": "NBT Compound Has Key",
  "operator.integrateddynamics.nbt.compound_haskey.info": "If the given NBT compound tag contains the given key",
  "operator.integrateddynamics.nbt.compound_type": "NBT Compound Entry Type",
  "operator.integrateddynamics.nbt.compound_type.info": "The value type in the given NBT compound tag corresponding to the given key",
  "operator.integrateddynamics.nbt.compound_value_tag": "NBT Compound Value",
  "operator.integrateddynamics.nbt.compound_value_tag.info": "The value of any type in the given NBT compound tag with the given key",
  "operator.integrateddynamics.nbt.compound_value_boolean": "NBT Compound Value Boolean",
  "operator.integrateddynamics.nbt.compound_value_boolean.info": "The Boolean value in the given NBT compound tag with the given key",
  "operator.integrateddynamics.nbt.compound_value_integer": "NBT Compound Value Integer",
  "operator.integrateddynamics.nbt.compound_value_integer.info": "The Integer value in the given NBT compound tag with the given key",
  "operator.integrateddynamics.nbt.compound_value_long": "NBT Compound Value Long",
  "operator.integrateddynamics.nbt.compound_value_long.info": "The Long value in the given NBT compound tag with the given key",
  "operator.integrateddynamics.nbt.compound_value_double": "NBT Compound Value Double",
  "operator.integrateddynamics.nbt.compound_value_double.info": "The Double value in the given NBT compound tag with the given key",
  "operator.integrateddynamics.nbt.compound_value_string": "NBT Compound Value String",
  "operator.integrateddynamics.nbt.compound_value_string.info": "The String value in the given NBT compound tag with the given key",
  "operator.integrateddynamics.nbt.compound_value_compound": "NBT Compound Value Compound",
  "operator.integrateddynamics.nbt.compound_value_compound.info": "The Compound value in the given NBT compound tag with the given key",
  "operator.integrateddynamics.nbt.compound_value_list_tag": "NBT Compound Value List NBT",
  "operator.integrateddynamics.nbt.compound_value_list_tag.info": "The NBT List value in the given NBT compound tag with the given key",
  "operator.integrateddynamics.nbt.compound_value_list_byte": "NBT Compound Value Byte Array",
  "operator.integrateddynamics.nbt.compound_value_list_byte.info": "The Byte Array in the given NBT compound tag with the given key as Integer List",
  "operator.integrateddynamics.nbt.compound_value_list_int": "NBT Compound Value Integer Array",
  "operator.integrateddynamics.nbt.compound_value_list_int.info": "The Integer Array in the given NBT compound tag with the given key as Integer List",
  "operator.integrateddynamics.nbt.compound_value_list_long": "NBT Compound Value Long Array",
  "operator.integrateddynamics.nbt.compound_value_list_long.info": "The Long Array in the given NBT compound tag with the given key as Long List",
  "operator.integrateddynamics.nbt.compound_without": "NBT Compound Without",
  "operator.integrateddynamics.nbt.compound_without.info": "Get a copy of the given NBT compound tag without the given key",
  "operator.integrateddynamics.nbt.compound_with_boolean": "NBT Compound With Boolean",
  "operator.integrateddynamics.nbt.compound_with_boolean.info": "Get a copy of the given NBT compound tag with the given Boolean entry",
  "operator.integrateddynamics.nbt.compound_with_short": "NBT Compound With Short",
  "operator.integrateddynamics.nbt.compound_with_short.info": "Get a copy of the given NBT compound tag with the given Integer as a short entry",
  "operator.integrateddynamics.nbt.compound_with_integer": "NBT Compound With Integer",
  "operator.integrateddynamics.nbt.compound_with_integer.info": "Get a copy of the given NBT compound tag with the given Integer entry",
  "operator.integrateddynamics.nbt.compound_with_long": "NBT Compound With Long",
  "operator.integrateddynamics.nbt.compound_with_long.info": "Get a copy of the given NBT compound tag with the given Long entry",
  "operator.integrateddynamics.nbt.compound_with_double": "NBT Compound With Double",
  "operator.integrateddynamics.nbt.compound_with_double.info": "Get a copy of the given NBT compound tag with the given Double entry",
  "operator.integrateddynamics.nbt.compound_with_float": "NBT Compound With Float",
  "operator.integrateddynamics.nbt.compound_with_float.info": "Get a copy of the given NBT compound tag with the given Double as a float entry",
  "operator.integrateddynamics.nbt.compound_with_string": "NBT Compound With String",
  "operator.integrateddynamics.nbt.compound_with_string.info": "Get a copy of the given NBT compound tag with the given String entry",
  "operator.integrateddynamics.nbt.compound_with_tag": "NBT Compound With NBT",
  "operator.integrateddynamics.nbt.compound_with_tag.info": "Get a copy of the given NBT compound tag with the given NBT entry",
  "operator.integrateddynamics.nbt.compound_with_list_tag": "NBT Compound With NBT List",
  "operator.integrateddynamics.nbt.compound_with_list_tag.info": "Get a copy of the given NBT compound tag with the given NBT List entry",
  "operator.integrateddynamics.nbt.compound_with_list_byte": "NBT Compound With Byte List",
  "operator.integrateddynamics.nbt.compound_with_list_byte.info": "Get a copy of the given NBT compound tag with the given Integer List as an NBT Byte Array entry",
  "operator.integrateddynamics.nbt.compound_with_list_int": "NBT Compound With Int List",
  "operator.integrateddynamics.nbt.compound_with_list_int.info": "Get a copy of the given NBT compound tag with the given NBT Integer Array entry",
  "operator.integrateddynamics.nbt.compound_with_list_long": "NBT Compound With Long List",
  "operator.integrateddynamics.nbt.compound_with_list_long.info": "Get a copy of the given NBT compound tag with the given NBT Long Array entry",
  "operator.integrateddynamics.nbt.compound_subset": "NBT Compound Subset",
  "operator.integrateddynamics.nbt.compound_subset.info": "If the first NBT compound tag is a subset of, or equal to the second NBT compound tag. This will recursively check nested tags.",
  "operator.integrateddynamics.nbt.compound_union": "NBT Compound Union",
  "operator.integrateddynamics.nbt.compound_union.info": "The union of the given NBT compound tags. Nested tags will be joined recusively.",
  "operator.integrateddynamics.nbt.compound_intersection": "NBT Compound Intersection",
  "operator.integrateddynamics.nbt.compound_intersection.info": "The intersection of the given NBT compound tags. Nested tags will be intersected recusively.",
  "operator.integrateddynamics.nbt.compound_minus": "NBT Compound Minus",
  "operator.integrateddynamics.nbt.compound_minus.info": "The difference of the given NBT compound tags. Nested tags will be subtracted recusively.",
  "operator.integrateddynamics.nbt.as_boolean": "NBT Byte As Boolean",
  "operator.integrateddynamics.nbt.as_boolean.info": "Get the Boolean value of the given NBT Byte tag",
  "operator.integrateddynamics.nbt.as_byte": "NBT Byte As Integer",
  "operator.integrateddynamics.nbt.as_byte.info": "Get the Integer value of the given NBT Byte tag",
  "operator.integrateddynamics.nbt.as_short": "NBT Short as Integer",
  "operator.integrateddynamics.nbt.as_short.info": "Get the Integer value of the given NBT Short tag",
  "operator.integrateddynamics.nbt.as_int": "NBT Integer As Integer",
  "operator.integrateddynamics.nbt.as_int.info": "Get the Integer value of the given NBT Integer tag",
  "operator.integrateddynamics.nbt.as_long": "NBT Long As Long",
  "operator.integrateddynamics.nbt.as_long.info": "Get the Long value of the given NBT Long tag",
  "operator.integrateddynamics.nbt.as_double": "NBT Double As Double",
  "operator.integrateddynamics.nbt.as_double.info": "Get the Double value of the given NBT Double tag",
  "operator.integrateddynamics.nbt.as_float": "NBT Float As Double",
  "operator.integrateddynamics.nbt.as_float.info": "Get the Double value of the given NBT Float tag",
  "operator.integrateddynamics.nbt.as_string": "NBT String As String",
  "operator.integrateddynamics.nbt.as_string.info": "Get the String value of the given NBT String tag",
  "operator.integrateddynamics.nbt.as_tag_list": "NBT List As NBT List",
  "operator.integrateddynamics.nbt.as_tag_list.info": "Get the NBT List value of the given NBT List tag",
  "operator.integrateddynamics.nbt.as_byte_list": "NBT Byte Array As Byte List",
  "operator.integrateddynamics.nbt.as_byte_list.info": "Get the Byte List value of the given NBT Byte Array tag",
  "operator.integrateddynamics.nbt.as_int_list": "NBT Integer Array As Integer List",
  "operator.integrateddynamics.nbt.as_int_list.info": "Get the Integer List value of the given NBT Integer Array tag",
  "operator.integrateddynamics.nbt.as_long_list": "NBT Long Array As Long List",
  "operator.integrateddynamics.nbt.as_long_list.info": "Get the Long List value of the given NBT Long Array tag",
  "operator.integrateddynamics.nbt.from_boolean": "NBT Byte From Boolean",
  "operator.integrateddynamics.nbt.from_boolean.info": "Create an NBT Byte tag from the given Boolean value",
  "operator.integrateddynamics.nbt.from_short": "NBT Short From Integer",
  "operator.integrateddynamics.nbt.from_short.info": "Create an NBT Short tag from the given Integer value",
  "operator.integrateddynamics.nbt.from_byte": "NBT Byte From Integer",
  "operator.integrateddynamics.nbt.from_byte.info": "Create an NBT Byte tag from the given Integer value",
  "operator.integrateddynamics.nbt.from_int": "NBT Integer From Integer",
  "operator.integrateddynamics.nbt.from_int.info": "Create an NBT Integer tag from the given Integer value",
  "operator.integrateddynamics.nbt.from_long": "NBT Long From Long",
  "operator.integrateddynamics.nbt.from_long.info": "Create an NBT Long tag from the given Long value",
  "operator.integrateddynamics.nbt.from_double": "NBT Double From Double",
  "operator.integrateddynamics.nbt.from_double.info": "Create an NBT Double tag from the given Double value",
  "operator.integrateddynamics.nbt.from_float": "NBT Float From Double",
  "operator.integrateddynamics.nbt.from_float.info": "Create an NBT Double tag from the given Float value",
  "operator.integrateddynamics.nbt.from_string": "NBT String From String",
  "operator.integrateddynamics.nbt.from_string.info": "Create an NBT String tag from the given String value",
  "operator.integrateddynamics.nbt.from_tag_list": "NBT List From Tag List",
  "operator.integrateddynamics.nbt.from_tag_list.info": "Create an NBT List tag from the given NBT List value",
  "operator.integrateddynamics.nbt.from_byte_list": "NBT Byte Array From Byte List",
  "operator.integrateddynamics.nbt.from_byte_list.info": "Create an NBT Byte Array tag from the given Integer List value",
  "operator.integrateddynamics.nbt.from_int_list": "NBT Integer Array From Integer List",
  "operator.integrateddynamics.nbt.from_int_list.info": "Create an NBT Integer Array tag from the given Integer List value",
  "operator.integrateddynamics.nbt.from_long_list": "NBT Long Array From Long List",
  "operator.integrateddynamics.nbt.from_long_list.info": "Create an NBT Long Array tag from the given Long List value",
  "operator.integrateddynamics.nbt.path_match_first": "NBT Path Match First",
  "operator.integrateddynamics.nbt.path_match_first.info": "Apply the given NBT Path expression on the given NBT value, and return the first match",
  "operator.integrateddynamics.nbt.path_match_all": "NBT Path Match All",
  "operator.integrateddynamics.nbt.path_match_all.info": "Apply the given NBT Path expression on the given NBT value, and return all matches as a list",
  "operator.integrateddynamics.nbt.path_test": "NBT Path Test",
  "operator.integrateddynamics.nbt.path_test.info": "Test if the given NBT Path expression matches with the given NBT value",
  "operator.integrateddynamics.operator": "Operator",
  "operator.integrateddynamics.operator.basename": "Operator %s",
  "operator.integrateddynamics.operator.apply": "Apply",
  "operator.integrateddynamics.operator.apply.info": "Apply for a given operator a given value.",
  "operator.integrateddynamics.operator.apply2": "Apply 2",
  "operator.integrateddynamics.operator.apply2.info": "Apply for a given operator the given two values.",
  "operator.integrateddynamics.operator.apply3": "Apply 3",
  "operator.integrateddynamics.operator.apply3.info": "Apply for a given operator the given three value.",
  "operator.integrateddynamics.operator.map": "Map",
  "operator.integrateddynamics.operator.map.info": "Apply the given operator on all elements of a list, resulting in a new list of mapped values.",
  "operator.integrateddynamics.operator.filter": "Filter",
  "operator.integrateddynamics.operator.filter.info": "Filter a list of elements by matching them all with the given predicate.",
  "operator.integrateddynamics.operator.conjunction": "Conjunction",
  "operator.integrateddynamics.operator.conjunction.info": "Takes the conjunction of two predicates.",
  "operator.integrateddynamics.operator.disjunction": "Disjunction",
  "operator.integrateddynamics.operator.disjunction.info": "Takes the disjunction of two predicates.",
  "operator.integrateddynamics.operator.negation": "Negation",
  "operator.integrateddynamics.operator.negation.info": "Takes the negation of a predicate.",
  "operator.integrateddynamics.operator.pipe": "Pipe",
  "operator.integrateddynamics.operator.pipe.info": "Create a new operator that pipes the output from the first operator to the second operator.",
  "operator.integrateddynamics.operator.pipe2": "Pipe 2",
  "operator.integrateddynamics.operator.pipe2.info": "Create a new operator that gives its input to the first and second operators, and pipes the outputs from both of them to the third operator.",
  "operator.integrateddynamics.operator.flip": "Flip",
  "operator.integrateddynamics.operator.flip.info": "Flip the two first input parameters of an operator.",
  "operator.integrateddynamics.virtual.flipped": "Flipped",
  "operator.integrateddynamics.operator.reduce": "Reduce",
  "operator.integrateddynamics.operator.reduce.info": "Apply the given operator on all elements of a list to reduce the list to one value.",
  "operator.integrateddynamics.operator.reduce1": "Reduce 1",
  "operator.integrateddynamics.operator.reduce1.info": "Apply the given operator on all elements of a list to reduce the list to one value. reduce1(op, list) is equivalent to reduce(op, tail(list), head(list)).",
  "operator.integrateddynamics.operator.by_name": "Operator By Name",
  "operator.integrateddynamics.operator.by_name.info": "Get the operator that has the given unique name.",
  "operator.integrateddynamics.virtual.recipeoutputbyinput": "Recipe Output By Input",
  "operator.integrateddynamics.virtual.recipeinputsbyoutput": "Recipe Inputs By Output",
  "operator.integrateddynamics.virtual.recipesbyinput": "Recipes By Input",
  "operator.integrateddynamics.virtual.recipesbyoutput": "Recipes By Output",
  "operator.integrateddynamics.ingredients": "Ingredients",
  "operator.integrateddynamics.ingredients.basename": "Ingredients %s",
  "operator.integrateddynamics.ingredients.items": "Ingredient items",
  "operator.integrateddynamics.ingredients.items.info": "The list of items",
  "operator.integrateddynamics.ingredients.fluids": "Ingredient fluids",
  "operator.integrateddynamics.ingredients.fluids.info": "The list of fluids",
  "operator.integrateddynamics.ingredients.energies": "Ingredient energy elements",
  "operator.integrateddynamics.ingredients.energies.info": "The list of energy elements",
  "operator.integrateddynamics.ingredients.with_item": "Ingredients With Item",
  "operator.integrateddynamics.ingredients.with_item.info": "Get a copy of the given ingredients with the given item at the given ingredient position",
  "operator.integrateddynamics.ingredients.with_fluid": "Ingredients With Fluid",
  "operator.integrateddynamics.ingredients.with_fluid.info": "Get a copy of the given ingredients with the given fluid at the given ingredient position",
  "operator.integrateddynamics.ingredients.with_energy": "Ingredients With Energy",
  "operator.integrateddynamics.ingredients.with_energy.info": "Get a copy of the given ingredients with the given energy at the given ingredient position",
  "operator.integrateddynamics.ingredients.with_items": "Ingredients With Items",
  "operator.integrateddynamics.ingredients.with_items.info": "Get a copy of the given ingredients with the given list of items at the given ingredient position",
  "operator.integrateddynamics.ingredients.with_fluids": "Ingredients With Fluids",
  "operator.integrateddynamics.ingredients.with_fluids.info": "Get a copy of the given ingredients with the given list of fluids at the given ingredient position",
  "operator.integrateddynamics.ingredients.with_energies": "Ingredients With Energy Elements",
  "operator.integrateddynamics.ingredients.with_energies.info": "Get a copy of the given ingredients with the given list of energy elements at the given ingredient position",
  "operator.integrateddynamics.recipe": "Recipe",
  "operator.integrateddynamics.recipe.basename": "Recipe %s",
  "operator.integrateddynamics.recipe.input": "Recipe Input Ingredients",
  "operator.integrateddynamics.recipe.input.info": "The input ingredients of the given recipe",
  "operator.integrateddynamics.recipe.output": "Recipe Output Ingredients",
  "operator.integrateddynamics.recipe.output.info": "The output ingredients of the given recipe",
  "operator.integrateddynamics.recipe.with_input": "Recipe With Input Ingredients",
  "operator.integrateddynamics.recipe.with_input.info": "Get a copy of the given recipe with the given ingredients as input",
  "operator.integrateddynamics.recipe.with_output": "Recipe With Output Ingredients",
  "operator.integrateddynamics.recipe.with_output.info": "Get a copy of the given recipe with the given ingredients as input",
  "operator.integrateddynamics.recipe.with_input_output": "Recipe With Input and Output Ingredients",
  "operator.integrateddynamics.recipe.with_input_output.info": "Create a recipe with the first ingredients as input, and the second ingredients as output",
  "operator.integrateddynamics.general": "General",
  "operator.integrateddynamics.general.basename": "General %s",
  "operator.integrateddynamics.general.choice": "Choice",
  "operator.integrateddynamics.general.choice.info": "If the first value is true, the second value is taken, otherwise the third value.\\nType two and three must be equal.",
  "operator.integrateddynamics.general.identity": "Identity",
  "operator.integrateddynamics.general.identity.info": "A copy of the input value.",
  "operator.integrateddynamics.general.constant": "Constant",
  "operator.integrateddynamics.general.constant.info": "A copy of the first input value.",
  "operator.integrateddynamics.general.isnull": "Is Null",
  "operator.integrateddynamics.general.isnull.info": "If the given value is null",
  "operator.integrateddynamics.general.isnotnull": "Is Not Null",
  "operator.integrateddynamics.general.isnotnull.info": "If the given value is not null",
  "operator.integrateddynamics.virtual": "Virtual Operator",
  "operator.integrateddynamics.virtual.basename": "Virtual %s",
  "operator.integrateddynamics.virtual.p_conjunction": "Predicate Conjunction",
  "operator.integrateddynamics.virtual.p_conjunction.info": "The conjunction of two predicates",
  "operator.integrateddynamics.virtual.p_disjunction": "Predicate Disjunction",
  "operator.integrateddynamics.virtual.p_disjunction.info": "The disjunction of two predicates",
  "operator.integrateddynamics.virtual.p_negation": "Predicate Negation",
  "operator.integrateddynamics.virtual.p_negation.info": "The disjunction of a predicate",
  "operator.integrateddynamics.virtual.piped": "Piped Operator",
  "operator.integrateddynamics.virtual.piped.info": "A chain of operators",
  "operator.integrateddynamics.virtual.piped2": "Piped 2 Operator",
  "operator.integrateddynamics.virtual.piped2.info": "A chain of piped 2 operators",
  "operator.integrateddynamics.cast": "Cast",
  "operator.integrateddynamics.cast.basename": "Cast",
  "operator.integrateddynamics.cast.tooltip": "Cast %s to %s",
  "operator.integrateddynamics.parse": "Parse",
  "operator.integrateddynamics.parse.basename": "Parse",
  "operator.integrateddynamics.parse.tooltip": "Parse %s",
  "info_book.integrateddynamics.section.main": "On the Dynamics of Integration",
  "info_book.integrateddynamics.tag_index": "&oIndex&r",
  "info_book.integrateddynamics.introduction": "Introduction",
  "info_book.integrateddynamics.introduction.text1": "For too long, automation possibilities have been too limited. &1Integrated Dynamics&0 aims to be the go-to mod for automating your logic systems. It does this by providing an expressive immersive logic programming experience with hooks and support for most elements of &lMinecraft&r and its modifications.",
  "info_book.integrateddynamics.introduction.text2": "Redstone circuits have always been a very basic, but workable and easily understandable method for automation. The basicness of redstone is however also an inconvenience. For automation networks with higher complexities, redstone circuits can become very large and consequently also difficult to manage. Furthermore, one small water-leak can cause major headaches to every redstoner.",
  "info_book.integrateddynamics.introduction.text3": "The goal of this book is twofold. First, a &ltutorial&r is provided for learning the most important concepts behind this mod. Secondly, a detailed &lmanual&r of all elements and mechanisms are explained for players that are not not interested in the tutorial.",
  "info_book.integrateddynamics.introduction.text4": "You can navigate through this book by clicking on the arrows at the bottom, shift clicking will flip through whole sections instead of single pages. At the start of large sections you will see a content table which will contain hyperlinks to its subsections for faster browsing. When you come across recipes, the items that are explained in this book are clickable as a fast reference to the section they are explained in. You will also notice a button at the top left of this book, which will take you to the section above your current one. The button at the top right corner will go back to the previously visited page each time when clicked.",
  "info_book.integrateddynamics.tutorials": "Tutorials",
  "info_book.integrateddynamics.tutorials.introduction": "Introduction",
  "info_book.integrateddynamics.tutorials.introduction.text1": "This part of the book contains several tutorials that will help you understand the basics of the mod. Furthermore, it will allow you to earn some &lrewards&r while accomplishing the achievements of each tutorial.",
  "info_book.integrateddynamics.tutorials.menrilBasics": "Menril Basics",
  "info_book.integrateddynamics.tutorials.menrilBasics.text1": "To get started with this mod, you will need to find some &lMenril Trees&r which can most easily be found in &lMeneglin Biomes&r.",
  "info_book.integrateddynamics.tutorials.menrilBasics.text2": "After that, you’ll need to craft a &lSqueezer&r and &lDrying Basin&r for processing &lMenril Log&r. This can be done by placing a block of wood in the &lSqueezer&r and jumping on it until it's flat. Once that has been done, the &lMenril Resin&r will try to go to the two sides of the &lSqueezer&r. Next, place a &lDrying Basin&r next to the &lSqueezer&r to make it fill with the &lMenril Resin&r you just squeezed.",
  "info_book.integrateddynamics.tutorials.menrilBasics.text3": "If you want to repeat the process, you can reset the &lSqueezer&r by applying a redstone pulse.",
  "info_book.integrateddynamics.tutorials.menrilBasics.text4": "In the future, you will also be able to craft upgraded variants of these machines that are more easily automatable, but are more costly: the &lMechanical Squeezer&r and the &lMechanical Drying Basin&r.",
  "info_book.integrateddynamics.tutorials.networkFoundations": "Network Foundations",
  "info_book.integrateddynamics.tutorials.networkFoundations.text1": "The main goal of this mod is for building control networks for automation. This is done using &lLogic Cables&r. Try making a network with ten of those cables.",
  "info_book.integrateddynamics.tutorials.networkFoundations.text2": "The next step will be to craft some &lVariable Cards&r and &lVariable Transformers&r. &lVariable Cards&r are used to store references to values in the network. &lVariable Transformers&r are crafting elements for components that can be placed on &lLogic Cables&r for reading and writing these values.",
  "info_book.integrateddynamics.tutorials.basicNetworkComponents": "Basic Network Components",
  "info_book.integrateddynamics.tutorials.basicNetworkComponents.text1": "One of the methods for binding &lVariable Cards&r to certain values, is by reading in values from &lReaders&r. Let’s start by crafting some basic readers. After that, craft a &lDisplay Panel&r, which is useful for displaying the values of &lVariable Cards&r.",
  "info_book.integrateddynamics.tutorials.aspects": "Aspects",
  "info_book.integrateddynamics.tutorials.aspects.text1": "As a simple example, let’s try reading in a redstone value and displaying it.",
  "info_book.integrateddynamics.tutorials.aspects.text2": "Do this by attaching a &lRedstone Reader&r to a &lLogic Cable&r in the world. Make sure that the reading is targeting something with a redstone value, like a &lRedstone Torch&r.",
  "info_book.integrateddynamics.tutorials.aspects.text3": "After that, right-click on the &lRedstone Reader&r to open the gui, after which you have to insert a &lVariable Card&r into the &6Integer&0 &lRedstone Value&r aspect, to bind the target’s redstone value to that &lVariable Card&r.",
  "info_book.integrateddynamics.tutorials.aspects.text4": "Next, place a &lDisplay Panel&r in the same network as the &lRedstone Reader&r, and insert your bound &lVariable Card&r to display it value.",
  "info_book.integrateddynamics.tutorials.aspects.text5": "As a next step, craft a &lRedstone Writer&r and let it write a maximal integer redstone value that was read by a Redstone Reader.",
  "info_book.integrateddynamics.tutorials.logicOperations": "Logic Operations",
  "info_book.integrateddynamics.tutorials.logicOperations.text1": "While displaying values that originate from readers can be useful, things get really interesting when you start combining certain values with other values using &2Operators&0. All &2Operators&0 can be found in the &lLogic Programmer&r.",
  "info_book.integrateddynamics.tutorials.logicOperations.text2": "Start by crafting a &lLogic Programmer&r, which exists in both item and block-form. Open its gui to see the list of all &loperators&r.",
  "info_book.integrateddynamics.tutorials.logicOperations.text3": "Next, search for the &6Integer&0 operator, and click on it. This will open a window in which you should type a number. When you have done this, insert an empty &lVariable Card&r to bind that &6Integer&0 to the &lVariable Card&r. When you’re done, do that once more for another &6Integer&0.",
  "info_book.integrateddynamics.tutorials.logicOperations.text4": "Finally, search for the &lAddition&r operator and open it. This allows you to add two &eNumbers&0. Insert your two &6Integer&0 &lVariable Cards&r into these slots, and bind it to a new &lVariable Card&r.",
  "info_book.integrateddynamics.tutorials.logicOperations.text5": "As &1Integrated Dynamics&0 evaluates variables in a &olazy&r manner, this &lAddition&r &lVariable Card&r does not contain the addition of these &6Integers&0 directly, but the addition will only be performed when the value is needed in the network, based on the variable references. For this, the network has to be able to find these referenced &lVariable Card&r. For this, you will need to craft and place a &lVariable Store&r. Insert the two &6Integer&0 &lVariable Cards&r into this store to make them available to the network.",
  "info_book.integrateddynamics.tutorials.logicOperations.text6": "Finally, you can now connect a cable to the &lVariable Store&r, attach a &lDisplay Panel&r, and insert the &lAddition&r &lVariable Card&r to display the addition.",
  "info_book.integrateddynamics.tutorials.logicOperations.text7": "The &lLogic Programmer&r and &lVariable Stores&r are going to be your best friends when you want to do more complex automation.",
  "info_book.integrateddynamics.tutorials.recipe_handling": "Recipe Handling",
  "info_book.integrateddynamics.tutorials.recipe_handling.text1": "&oRecipes&r are a big part of &lMinecraft&r. That is why this mod offers first-class support for them via &8Recipe&0 values, and &lIngredients&r values to represent their input and output collections. In this tutorial, we will have a look at how recipes can be obtained and used.",
  "info_book.integrateddynamics.tutorials.recipe_handling.text2": "The easiest way to obtain &8Recipes&0 is simply by reading it from a machine that can handle recipes. So let's start by reading all crafting recipes by placing a &lMachine Reader&r against a &lCrafting Table&r and reading the list of recipes.",
  "info_book.integrateddynamics.tutorials.recipe_handling.text3": "If you want some more fine-grained control over recipes, or if you are working with a machine that does not expose its recipes via the &lMachine Reader&r, you can visually create a &8Recipe&0 yourself in the &lLogic Programmer&r. Let's try creating a simple recipe, for example for crafting a &lChest&r.",
  "info_book.integrateddynamics.tutorials.recipe_handling.text4": "In this last part of the tutorial, we'll take recipe reading one step further. Using the &lRecipe By Output&r aspect, we can retrieve an operator that, when applied to an &8Ingredients&0 instance, will return the first &8Recipe&0 that returns the given &8Ingredients&0 as output. We will use this to look up the recipe of a &lChest&r.",
  "info_book.integrateddynamics.tutorials.recipe_handling.text5": "Let's start by creating an &8Ingredients&0 instance with a single &8Chest&0 in your &lLogic Programmer&r. Next, read the &lRecipe By Output&r aspect from a &lMachine Reader&r that targets a &lCrafting Table&r. After that, use the &oApply&r operator to apply your &lChest&r &8Ingredient&0 to the operator you got from the &lMachine Reader&r. Finally, insert the resulting variable into a &lDisplay Panel&r to see the &lChest&r's recipe. (Don't forget to insert all your used variables into a &lVariable Store&r).",
  "info_book.integrateddynamics.tutorials.recipe_handling.text6": "Obviously, there is much more you can do with &8Recipes&0 and &8Ingredients&0. Have a look in the &lMachine Reader&r and &lLogic Programmer&r to find out what other advanced functionality is available to you.",
  "info_book.integrateddynamics.tutorials.nbt": "NBT",
  "info_book.integrateddynamics.tutorials.nbt.text1": "&4NBT&0 tags are used to represent complex datastructures. These are typically used internally in Minecraft to store machine and entity information. In this tutorial, we will go over simple NBT tag reading and manipulation",
  "info_book.integrateddynamics.tutorials.nbt.text2": "As a first step, use a &lBlock Reader&r on a lectern, read its &4NBT&0 data, and visualize it in a &lDisplay Panel&r.",
  "info_book.integrateddynamics.tutorials.nbt.text3": "Next, from the read &lLectern&r &4NBT&0 tag, read the &3Book&0 sub-tag as a compound tag, and visualize it.",
  "info_book.integrateddynamics.tutorials.nbt.text4": "As a final step, we will read the &3id&0 field from this &3Book&0 sub-tag. However, instead of starting from our last read sub-tag, we will start from the root, and apply an &lNBT Path&r expression. Such expressions are useful to get deeply nested &4NBT&0 values. For example, applying the expression &4”.root.child1.child2”&0 on the &3NBT&0 tag &3{ root: { child1: { child2: ”some value” } }}&0 will output &3”some value”&0. More advanced features of &lNBT Path&r are described later in the advanced part of the manual.",
  "info_book.integrateddynamics.tutorials.nbt.text5": "To accomplish the final advancement, create an &lNBT Path&r expression that selects the &3Book&0/&3id&0 field, apply it on our &lLectern&r tag, and visualize it in a &lDisplay Panel&r.",
  "info_book.integrateddynamics.tutorials.advancedNetworkComponents": "Advanced Network Components",
  "info_book.integrateddynamics.tutorials.advancedNetworkComponents.text1": "Now that you are familiar with basic logic, we can have a look at the more advanced network components: the &lMaterializer&r and the &lProxy&r.",
  "info_book.integrateddynamics.tutorials.advancedNetworkComponents.text2": "As you may remember, the &lLogic Programmer&r allows you to create variables with &ostatic&r values, or you can create more complex variables based on &odynamic&r value evaluation.",
  "info_book.integrateddynamics.tutorials.advancedNetworkComponents.text3": "The &lMaterializer&r can be used for converting a &odynamic&r value to a &ostatic&r one. This can be done by inserting the &odynamic&r &lVariable Card&r in the top slot of the &lMaterializer&r. Every &lVariable Card&r that is inserted into the left slot, will be set with the value the top variable has at that moment.",
  "info_book.integrateddynamics.tutorials.advancedNetworkComponents.text4": "The &lProxy&r allows you to add an extra level of indirection for your variables. You may for example have a logic program that requires a &ostatic&r value in there. If at any point in the future, you want to change that value, you would have to rewrite your program, unless that value was &oproxied&r, in which case you would simply have to update the value in the &lProxy&r.",
  "info_book.integrateddynamics.tutorials.advancedNetworkComponents.text5": "For this tutorial, create materialized and proxied &lVariable Cards&r.",
  "info_book.integrateddynamics.tutorials.advancedOperations": "Advanced Operations",
  "info_book.integrateddynamics.tutorials.advancedOperations.text1": "As you may have noticed during the last tutorial, the &lLogic Programmer&r allows you to do way more than just adding numbers. In this tutorial, we’ll look into the more advanced datastructures and chaining of operators.",
  "info_book.integrateddynamics.tutorials.advancedOperations.text2": "Let’s start by creating a static &7List&0 of the &6Integers&0 &61&0, &610&0 and &6100&0, and visualize it in a &lDisplay Panel&r.",
  "info_book.integrateddynamics.tutorials.advancedOperations.text3": "&7Items&0 are one of the possible value types in this mod. Let’s make a static &7Item&0 &lVariable Card&r, dynamically retrieve the mod name from that item, and visualize it in a &lDisplay Panel&r.",
  "info_book.integrateddynamics.tutorials.advancedOperations.text4": "Remember that you’ll have to use a &lVariable Store&r to store your referenced variable.",
  "info_book.integrateddynamics.tutorials.advancedOperations.text5": "For the final, part of this tutorial, we’ll combine dynamic variables with operators. Attach an &lEntity Reader&r to a network, read the target &7Entity&0, retrieve the &7Block&0 the target &7Entity&0 is looking at, and visualize that &7Block&0 in a &lDisplay Panel&r.",
  "info_book.integrateddynamics.tutorials.theValueOfOperators": "The Value of Operators",
  "info_book.integrateddynamics.tutorials.theValueOfOperators.text1": "In &1Integrated Dynamics&0, &2Operators&0 are first-class citizens. Up until now, we have only used manually using the &lLogic Programmer&r, but in this tutorial, we’ll look into how they can be used in a more dynamic way, by storing &2Operators&0 in &lVariable Cards&r, and invoking them dynamically.",
  "info_book.integrateddynamics.tutorials.theValueOfOperators.text2": "As a first step, go to the &lLogic Programmer&r, and create a new static &2Operator&0, by starting to type &oArithmetic Addition&r &2Operator&0 in the autocomplete dropdown-list and clicking it, and write it to a &lVariable Card&r. After that, create two &6Integer&0 variables. Next, find the &oApply&r operator, and apply the first &6Integer&0 to the &2Operator&0, which will &obind&r the first input argument of the addition &2Operator&0 to that &6Integer&0, and will output a new &2Operator&0 with one remaining input argument. Next, use the &oApply&r operator again to &obind&r the final input argument of the newly created &2Operator&0. Finally, use a &lDisplay Panel&r to visualize your dynamically invoked addition.",
  "info_book.integrateddynamics.tutorials.theValueOfOperators.text3": "Next to applying &2Operators&0, there are a lot of other advanced &2Operator&0 operations. We’ll now look into using &2Operators&0 on &7Lists&0, more specifically the &oFilter&r &2Operator&0 that takes a &7List&0 and a &oPredicate&r (an &2Operator&0 with one input argument and a &9Boolean&0 output value). Start by creating a &7List&0 of the &6Integers&0 &61&0, &610&0 and &6100&0. Next, store the &oRelational Equals&r &2Operator&0 in a variable. Next, apply this operator on the &6Integer&0 &610&0. Next, use the &oFilter&r &2Operator&0 with your &7List&0 and the applied &2Operator&0. This will filter away all the items from the &7List&0 that return &9False&0 by applying them on the given operator, which in this case means that all elements that are not equal to &610&0 will be removed from the list. Visualize the result in a &lDisplay Panel&r.",
  "info_book.integrateddynamics.tutorials.theValueOfOperators.text4": "There are plenty of other operations on &2Operators&0, such as combining &oPredicates&r, flipping &2Operator&0 arguments, and more operations on &7Lists&0.",
  "info_book.integrateddynamics.tutorials.challenges": "Challenges",
  "info_book.integrateddynamics.tutorials.challenges.text1": "This final tutorial section contains several non-trivial challenges to show that you understand the basics of &1Integrated Dynamics&0. No further information will be given for each challenge, so good luck!",
  "info_book.integrateddynamics.manual": "Manual",
  "info_book.integrateddynamics.manual.introduction": "Introduction",
  "info_book.integrateddynamics.manual.introduction.text1": "This part of the book contains detail descriptions of all parts of the mod.",
  "info_book.integrateddynamics.manual.prerequisites": "Prerequisites",
  "info_book.integrateddynamics.manual.prerequisites.menril_trees": "Menril Trees",
  "info_book.integrateddynamics.manual.prerequisites.menril_trees.text1": "You may occasionally encounter tall blue trees. Such trees are called &lMenril Trees&r, and have some very interesting properties. First, the leaves give off light. This is caused by the illuminating berries, which are also very tasty! Secondly, the nice-looking wood of the tree contains a lot of resin, which can be used for crafting most of the things in this mod.",
  "info_book.integrateddynamics.manual.prerequisites.meneglin_biome": "Meneglin Biome",
  "info_book.integrateddynamics.manual.prerequisites.meneglin_biome.text1": "&lMenril Trees&r are unfortunately quite hard to find. Luckily, there is one biome, the &lMeneglin Biome&r in which these trees thrive. The large amount of &lMenril Trees&r causes some things in this biome to become blue, which is because of the &lMenril Resin&r that is given off by these trees to the environment.",
  "info_book.integrateddynamics.manual.prerequisites.squeezer": "Squeezer",
  "info_book.integrateddynamics.manual.prerequisites.squeezer.text1": "The &lSqueezer&r is an early-game machine that allows you to jump on blocks and items to break or squeeze them. Not only players, but any kind of entity can jump or fall on it to perform the squeezing process. Resulting items will either fall into any adjacent inventory or on the ground. Resulting fluids will remain in the machine and will flow to one of the two sides when there is a target tank. The machine contains a small suspension that can enabled with a redstone pulse to reset it. Most notably, this machine can be used to squeeze the resin out of &lMenril Log&r.",
  "info_book.integrateddynamics.manual.prerequisites.drying_basin": "Drying Basin",
  "info_book.integrateddynamics.manual.prerequisites.drying_basin.text1": "Drying out blocks and items can be done using the &lDrying Basin&r. This can for instance be useful when you want to let your &lMenril Resin&r dry into &lCrystalized Menril&r.",
  "info_book.integrateddynamics.manual.prerequisites.drying_basin.text2": "Whatever you do, don’t insert hot fluids!",
  "info_book.integrateddynamics.manual.networks": "Networks",
  "info_book.integrateddynamics.manual.networks.text1": "&lIntegrated Dynamics&r &lnetworks&r are the basis of any good automation system. A network consists of a collection of connected &lLogic Cables&r and parts can be placed on them. These cables should be managed using a &lWrench&r. Shift+right-clicking a cable or part will remove it, while a regular right-click will disconnect it from other cables.",
  "info_book.integrateddynamics.manual.networks.text2": "Even though &lLogic Cables&r may look nice, in some cases you’ll probably want to hide them. You can do this using &lFacades&r, which can be resemble any material. Furthermore, these cables are also compatible with &lMC MultiPart&r, which means that you can hide your cables in more complex facade structures.",
  "info_book.integrateddynamics.manual.logic": "Logic",
  "info_book.integrateddynamics.manual.logic.value_types": "Value Types",
  "info_book.integrateddynamics.manual.logic.value_types.boolean": "Boolean",
  "info_book.integrateddynamics.manual.logic.value_types.boolean.text1": "The simplest value type, its values can be either &9True&0 or &9False&0.",
  "info_book.integrateddynamics.manual.logic.value_types.integer": "Integer",
  "info_book.integrateddynamics.manual.logic.value_types.integer.text1": "A value type for representing positive and negative numbers. For example &6-20&0, &60&0, &61000&0, &6333&0, ...",
  "info_book.integrateddynamics.manual.logic.value_types.integer.text2": "The values can range between &6–2147483648&0 and &62147483647&0.",
  "info_book.integrateddynamics.manual.logic.value_types.integer.text3": "This value type is part of the &lNumber&r category.",
  "info_book.integrateddynamics.manual.logic.value_types.double": "Double",
  "info_book.integrateddynamics.manual.logic.value_types.double.text1": "Real numbers, which can also be positive or negative. For example &e3.1415&0, &e4815162342&0, &e3.33333333&0, ...",
  "info_book.integrateddynamics.manual.logic.value_types.double.text2": "This value type is part of the &lNumber&r category.",
  "info_book.integrateddynamics.manual.logic.value_types.long": "Long",
  "info_book.integrateddynamics.manual.logic.value_types.long.text1": "The same as &6Integers&0, but with a larger value range, which goes from &e-9223372036854775808&0 to &e9223372036854775807&0",
  "info_book.integrateddynamics.manual.logic.value_types.long.text2": "This value type is part of the &lNumber&r category.",
  "info_book.integrateddynamics.manual.logic.value_types.string": "String",
  "info_book.integrateddynamics.manual.logic.value_types.string.text1": "A sequence of characters, for example &4”aaa”&0, &4“Hi!”&0, &4“x!(àà)ç”&0, ...",
  "info_book.integrateddynamics.manual.logic.value_types.list": "List",
  "info_book.integrateddynamics.manual.logic.value_types.list.text1": "A list containing values of a certain &lValue Type&r. All elements in a certain can only contain values of the same value types. For example &8(0, 1, 2, 3)&0, &8(“a”, “b”, “c”)&0, &8(3,33, 1,14, 5, 6)&0",
  "info_book.integrateddynamics.manual.logic.value_types.operator": "Operator",
  "info_book.integrateddynamics.manual.logic.value_types.operator.text1": "A value containing a reference to an &2Operator&0. Operators can be partially applied for more flexible evaluations based on the concept of &lCurrying&r. This is part of the concept of &lmetaprogramming&r (look it up, it's a thing!), where operators are treated as data by other operators. This basically allows you to create new operators yourself, which can then be used for more complex operations.",
  "info_book.integrateddynamics.manual.logic.value_types.operator.text2": "You can for example store the addition &2Operator&0 in a variable card. Do this by starting to type the operator name and selecting it from the autocomplete dropdown-list and clicking it. You can then partially apply it with one &6Integer&0 &lVariable Card&r, which will result in a new virtual operator with one input type and one output type, which internally contains a reference to that applied &6Integer&0. Applying another &6Integer&0 will result in an &6Integer&0.",
  "info_book.integrateddynamics.manual.logic.value_types.operator.text3": "Other operations of &2Operators&0 are present in the &lLogic Programmer&r for more advanced evaluations, such as reducing a list to a single value, or filtering a list based on a &lPredicate&r.",
  "info_book.integrateddynamics.manual.logic.value_types.nbt": "NBT",
  "info_book.integrateddynamics.manual.logic.value_types.nbt.text1": "Certain things in &lMinecraft&r internally use the &3NBT&0 datastructure. An &3NBT&0 tag is a special kind of object that can hold multiple values of different types. For example the NBT representation of a &8Chest&0 containing all its items, the enchantment information of an &8Pickaxe&0, ...",
  "info_book.integrateddynamics.manual.logic.value_types.nbt.text2": "Variables can hold references to such &3NBT&0 tags, and corresponding operators exist to read or extend these tags.",
  "info_book.integrateddynamics.manual.logic.value_types.nbt.text3": "&3NBT&0 tags are typically used in this mod as a low-level fallback mechanism, in case you can not read certain information using dedicated operators.",
  "info_book.integrateddynamics.manual.logic.value_types.block": "Block",
  "info_book.integrateddynamics.manual.logic.value_types.block.text1": "A reference to a &lMinecraft&r block. For example &8Dirt&0, &8Cobblestone&0, &8Red Stained Clay&0, &8Chest&0, ....",
  "info_book.integrateddynamics.manual.logic.value_types.item": "Item",
  "info_book.integrateddynamics.manual.logic.value_types.item.text1": "A reference to a &lMinecraft&r item. For example &8Apple&0, &8Cobblestone&0, &8Diamond Pickaxe&0, &8Enchanted Sword&0, ....",
  "info_book.integrateddynamics.manual.logic.value_types.entity": "Entity",
  "info_book.integrateddynamics.manual.logic.value_types.entity.text1": "A reference to a certain &lMinecraft&r entity. For example &8Zombie&0, &8Cow&0, &8Player_abc&0 ....",
  "info_book.integrateddynamics.manual.logic.value_types.fluid": "Fluid",
  "info_book.integrateddynamics.manual.logic.value_types.fluid.text1": "A reference to a &lMinecraft&r fluid. For example &8Lava@1000mB&0, &8Water@3mB&0, &8Menril Resin@3030mB&0, ....",
  "info_book.integrateddynamics.manual.logic.value_types.ingredients": "Ingredients",
  "info_book.integrateddynamics.manual.logic.value_types.ingredients.text1": "A collection of &lItems&r, &lFluids&r and &lEnergy amounts&r (&6Integer&0). Its main use is for representing the input and output of &8Recipes&0.",
  "info_book.integrateddynamics.manual.logic.value_types.recipe": "Recipe",
  "info_book.integrateddynamics.manual.logic.value_types.recipe.text1": "An abstract crafting recipe, that takes &8Ingredients&0 as input and outputs another &8Ingredients&0 value.",
  "info_book.integrateddynamics.manual.logic.value_types.recipe.text2": "Recipes can be created visually using the &lLogic Programmer&r, or they can be read from (supported) machines using the &lMachine Reader&r.",
  "info_book.integrateddynamics.manual.logic.value_types.recipe.text3": "These recipes can be used for autocrafting mods such as &lIntegrated Crafting&r.",
  "info_book.integrateddynamics.manual.logic.value_types.recipe.text4": "To quickly find specific recipes among existing &lVariable Cards&r inside a GUI, you can hold shift to temporarily display what the output item of the recipe is.",
  "info_book.integrateddynamics.manual.logic.variables": "Variables",
  "info_book.integrateddynamics.manual.logic.variables.variable_card": "Variable Card",
  "info_book.integrateddynamics.manual.logic.variables.variable_card.text1": "&lVariable Cards&r are the primary mode of logic transport in this mod. A variable contains a reference to a certain &lValue&r with a certain &lValue Type&r.",
  "info_book.integrateddynamics.manual.logic.variables.variable_card.text2": "Variables can either contain be either static or dynamic. Static variables are defined once, and will never change afterwards. Dynamic variables are the result of some form of &lLogic Evaluation&r, which are done by &lOperators&r or &lReader Aspects&r. An example of a dynamic variable is the time in the &lMinecraft&r world, which changes continuously.",
  "info_book.integrateddynamics.manual.logic.variables.variable_card.text3": "Dynamic variables will only be evaluated when their value is requested in some way, such as displaying the value in a &lDisplay Panel&r, or using it being requested as part of the evaluation of another dynamic variable.",
  "info_book.integrateddynamics.manual.logic.variables.variable_card.text4": "Each &lVariable Card&r has a unique ID, which is used internally in networks for &lLogic Evaluation&r. When an error occurs in the network, these ID’s will be shown to the player to help with debugging. For better usability, a label can be given to &lVariable Cards&r using a &lLabeler&r, which will allow players to see the label instead of the ID’s.",
  "info_book.integrateddynamics.manual.logic.variables.variable_store": "Variable Store",
  "info_book.integrateddynamics.manual.logic.variables.variable_store.text1": "Some dynamic variables are evaluated based on other variables, where access to those referenced variables must be possible. A dynamic variable representing the addition of two other variables must be able to access those two other variables when it is evaluated. Access to those other variables must be possible within the same network as where the dynamic variable is being evaluated, which can be done by placing the other variable cards in a &lVariable Store&r. Multiple &lVariable Stores&r can be present in a network. Those other variables may also reference certain variables, which should also be present in that same network.",
  "info_book.integrateddynamics.manual.logic.advanced": "Advanced",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path": "NBT Path",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text1": "When working with complex &3NBT&0 tags, you can quickly require complex operator chains for reading deeply nested NBT values. In order to to simplify this task, &4String&0-based &lNBT Path expressions&r can be used to determine the path within an &3NBT&0 tag.",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text2": "The simplest NBT Path expression is made up of a chain of &lfield selectors&r, such as &4.fieldName&0 or &4.[”fieldName”]&0.",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text3": "For example, applying the expression &4”.root.child1.child2”&0 on the &3NBT&0 tag &3{ root: { child1: { child2: ”some value” } }}&0 will output &3”some value”&0.",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text4": "Multiple fields can be selected by providing an array of field names or a wildcard, for example &4[fieldA,fieldB]&0 or &4*&0",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text5": "For example, applying the expression &4”.a[b1,b2]*”&0 on the &3NBT&0 tag &3{ a: { b1: { c: ”some value” } }}&0 will output &3”some value”&0.",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text6": "When working with NBT lists, specific entries can be selected by specifying an index, such as &4[1]&0.",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text7": "For example, applying the expression &4”.a[1]”&0 on the &3NBT&0 tag &3{ a: [10,20] }&0 will output &3”20”&0.",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text8": "Multiple list indexes can be selected using the slice operator: &4[start:end:step]&0. (Only start is required, the other elements may be omitted)",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text9": "For example, applying the expression &4”.a[1:4:2]”&0 on the &3NBT&0 tag &3{ a: [0,1,2,3,4,5] }&0 will output &3[1,3]&0.",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text10": "More advanced filter expressions are also possible using the filter syntax, for example &4[?(@.childName < 10)]&0 (@ refers to the current tag, .. refers to the parent tag, $ refers to the root tag)",
  "info_book.integrateddynamics.manual.logic.advanced.nbt_path.text11": "For example, applying the expression &4”$.a[?(@ == 3)]”&0 on the &3NBT&0 tag &3{ a: [0,1,2,3,4,5] }&0 will output &3[3]&0.",
  "info_book.integrateddynamics.manual.parts": "Parts",
  "info_book.integrateddynamics.manual.parts.introduction": "Introduction",
  "info_book.integrateddynamics.manual.parts.introduction.text1": "Parts can be placed on each side of a &lLogic Cable&r. This section describes parts that can read &lValues&r and place them available as a &lVariable Card&r, and parts that can perform actions based on the &lValues&r within &lVariable Cards&r.",
  "info_book.integrateddynamics.manual.parts.introduction.text2": "Most parts have configurable settings, which can be accessed using the top-right button in the GUI of a part. This allows you to change the part &lTicks/Operation&r, meaning per how many ticks this part should perform its actions. Secondly, the &lPriority&r of part can be changed, which indicates the order in which this part can act relative to the other parts in the same network in the same tick. If part A has a priority of -1, and part B has a priority of 1, then part B will always perform its actions before part A. If priorities of parts are the same, then the relative order is random.",
  "info_book.integrateddynamics.manual.parts.introduction.text3": "A part's &lEnergy Channel&r determines where it can draw its energy from. -1 is the wildcard channel (it will match all channels), and 0 is the default channel (used by parts such as energy cells that don't have a channel setting). Finally, &lTarget Side&r determines which side of its target block will be interacted with. This defaults to the side that it's actually placed against.",
  "info_book.integrateddynamics.manual.parts.introduction.text4": "Some reader and writer parts only contain aspects when certain other mods are present. If no aspects are present for a certain part, a warning will be added to the item tooltip whenever you attempt to craft it.",
  "info_book.integrateddynamics.manual.parts.reader": "Readers",
  "info_book.integrateddynamics.manual.parts.reader.introduction": "Introduction",
  "info_book.integrateddynamics.manual.parts.reader.introduction.text1": "The simplest method for creating a dynamic variable is done using &lReaders&r. Different types of readers exist for reading information from the world as storing it inside a &lVariable Card&r. Each &lReader&r contains one or more &lAspects&r for reading different things with different &lValue Types&r.",
  "info_book.integrateddynamics.manual.parts.reader.audio": "Audio",
  "info_book.integrateddynamics.manual.parts.reader.audio.text1": "Information about music and audio that is playing in the enviroment.",
  "info_book.integrateddynamics.manual.parts.reader.block": "Block",
  "info_book.integrateddynamics.manual.parts.reader.block.text1": "Information about the block the part is facing.",
  "info_book.integrateddynamics.manual.parts.reader.entity": "Entity",
  "info_book.integrateddynamics.manual.parts.reader.entity.text1": "Information about the entity or entities that are inside the square that the part is facing.",
  "info_book.integrateddynamics.manual.parts.reader.extra_dimensional": "Extra-Dimensional",
  "info_book.integrateddynamics.manual.parts.reader.extra_dimensional.text1": "Information about the server, such as the list of online players.",
  "info_book.integrateddynamics.manual.parts.reader.fluid": "Fluid",
  "info_book.integrateddynamics.manual.parts.reader.fluid.text1": "Read values from the fluid tank this part is facing.",
  "info_book.integrateddynamics.manual.parts.reader.inventory": "Inventory",
  "info_book.integrateddynamics.manual.parts.reader.inventory.text1": "Read information from the facing inventory, like the amount of slots and items. This will not transfer items itself.",
  "info_book.integrateddynamics.manual.parts.reader.machine": "Machine",
  "info_book.integrateddynamics.manual.parts.reader.machine.text1": "The machine this part is facing can be read, such as the work they are doing.",
  "info_book.integrateddynamics.manual.parts.reader.network": "Network",
  "info_book.integrateddynamics.manual.parts.reader.network.text1": "Read information about the &lIntegrated Dynamics&r network this part is facing. This does not have to be the same network as the network this part is on.",
  "info_book.integrateddynamics.manual.parts.reader.redstone": "Redstone",
  "info_book.integrateddynamics.manual.parts.reader.redstone.text1": "Read redstone information from the facing block.",
  "info_book.integrateddynamics.manual.parts.reader.world": "World",
  "info_book.integrateddynamics.manual.parts.reader.world.text1": "Information about the world this part is in, like the current weather and time.",
  "info_book.integrateddynamics.manual.parts.writer": "Writers",
  "info_book.integrateddynamics.manual.parts.writer.audio": "Audio",
  "info_book.integrateddynamics.manual.parts.writer.audio.text1": "Play sounds and music.",
  "info_book.integrateddynamics.manual.parts.writer.effect": "Effect",
  "info_book.integrateddynamics.manual.parts.writer.effect.text1": "Emit particles based on certain values and settings.",
  "info_book.integrateddynamics.manual.parts.writer.entity": "Entity",
  "info_book.integrateddynamics.manual.parts.writer.entity.text1": "Configure and control entities.",
  "info_book.integrateddynamics.manual.parts.writer.machine": "Machine",
  "info_book.integrateddynamics.manual.parts.writer.machine.text1": "Configure and control machines.",
  "info_book.integrateddynamics.manual.parts.writer.inventory": "Inventory",
  "info_book.integrateddynamics.manual.parts.writer.inventory.text1": "Perform actions related to inventories and pipes. This will not transfer items itself.",
  "info_book.integrateddynamics.manual.parts.writer.redstone": "Redstone",
  "info_book.integrateddynamics.manual.parts.writer.redstone.text1": "Output a certain redstone level.",
  "info_book.integrateddynamics.manual.parts.other": "Others",
  "info_book.integrateddynamics.manual.parts.other.light": "Light",
  "info_book.integrateddynamics.manual.parts.other.light.text1": "A simple light that is either always on, or can be controlled using a &1Boolean&0 or &6Integer&0 &lVariable Card&r.",
  "info_book.integrateddynamics.manual.parts.other.display": "Display",
  "info_book.integrateddynamics.manual.parts.other.display.text1": "A useful monitoring or debugging tool that simply shows the value of a &lVariable Card&r. &lDisplays&r can be rotated by right-clicking with a &lWrench&r.",
  "info_book.integrateddynamics.manual.parts.other.display.text2": "Inside the gui, a &lCopy&r button is available to copy the currently displayed value to your clipboard so that it can be used outside of the game. You can also just use the default copy hotkey of your OS to copy this value.",
  "info_book.integrateddynamics.manual.parts.other.connector_mono_directional": "Mono-Directional Connector",
  "info_book.integrateddynamics.manual.parts.other.connector_mono_directional.text1": "Sometimes, your logic networks will span large distances. While regular cables will do the trick, it may not be very convenient to place cables across a long distance.",
  "info_book.integrateddynamics.manual.parts.other.connector_mono_directional.text2": "&lMono-Directional Connectors&r allow you to connect networks wirelessly over a long distance. This can be done by placing a first connector on one network, and a second connector on another network. These two connectors must be in a straight line to each other, with a distance less than or equal to 512 blocks. The connectors will appear active when a valid connection has been made.",
  "info_book.integrateddynamics.manual.parts.other.connector_omni_directional": "Omni-Directional Connector",
  "info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text1": "While &lMono-Directional&r connectors are useful for long-distance connections in a single direction, in some cases this might be a bit too limited.",
  "info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text2": "You may for example want to connect more than two networks together using a single connector or connect with networks in other dimensions. For these cases, you can use the &lOmni-Directional&r connectors.",
  "info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text3": "These connectors will have a unique group id when first crafted, which identifies the group in which networks can be connected. Each connector group has a unique color of particles when placed in the world, the group id can be seen in the item tooltip or by right-clicking on the connector when placed. Additional connectors can be added to a group by crafting a new one using an existing connector within a group.",
  "info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text4": "You can also change the group of existing connectors in two ways. Crafting one alone in a crafting table will assign it to a new group with no other members, and crafting two together will copy the first one's group to the second one.",
  "info_book.integrateddynamics.manual.machines": "Machines",
  "info_book.integrateddynamics.manual.machines.materializer": "Materializer",
  "info_book.integrateddynamics.manual.machines.materializer.text1": "In order to make a dynamic &lVariable Card&r static, a &lMaterializer&r can be used. The dynamic &lVariable Card&r must be inserted, and a new empty &lVariable Card&r must be inserted, which will cause it to contain the current value of the dynamic &lVariable Card&r as a static value.",
  "info_book.integrateddynamics.manual.machines.materializer.text2": "This can be useful in situations where you want to log the values of a certain dynamic &lVariable Card&r, or when you don’t need the dynamic evaluation of a &lVariable Card&r anymore.",
  "info_book.integrateddynamics.manual.machines.materializer.text3": "&lVariable Cards&r can be piped in and out the &lMaterializer&r.",
  "info_book.integrateddynamics.manual.machines.proxy": "Proxy",
  "info_book.integrateddynamics.manual.machines.proxy.text1": "A &lProxy&r can be used to make a dynamic reference to a certain &lVariable Card&r. It allows you to insert a &lVariable Card&r in the top slot, and write a new &lVariable Card&r, which will dynamically take the value of the &lVariable Card&r that is present in the proxy. Note that the referenced (or any other) &lVariable Card&r must remain in the top slot for the proxy to work.",
  "info_book.integrateddynamics.manual.machines.proxy.text2": "This is useful in situations where you have a chain of &lVariable Cards&r, but you still would like to be able to change one value manually. You could then proxy that variable, which will allow it to be swapped with another variable at any time.",
  "info_book.integrateddynamics.manual.machines.proxy.text3": "Just as with the &lMaterializer&r, &lVariable Cards&r can be piped in and out of it.",
  "info_book.integrateddynamics.manual.machines.delay": "Delay",
  "info_book.integrateddynamics.manual.machines.delay.text1": "In some situations, you might need to maintain some kind of history of variable values. When you for instance want to take the average or difference over the last values.",
  "info_book.integrateddynamics.manual.machines.delay.text2": "For this, you can use a &lDelay&r, with which you can maintain the history of the values of a given variable. You can do this by inserting a &lVariable Card&r in the top slot for which you want to maintain the history. You can now create now &lVariable Cards&r that will refer to a list of values, which corresponds to the history. The referenced (or any other) &lVariable Card&r must remain in the top slot for the delay to work.",
  "info_book.integrateddynamics.manual.machines.delay.text3": "The oldest values correspond to the last elements in the list. You can choose the maximum length of the history from within the gui.",
  "info_book.integrateddynamics.manual.machines.energy_battery": "Energy Battery",
  "info_book.integrateddynamics.manual.machines.energy_battery.text1": "&lIntegrated Dynamics&r networks can be configured to consume energy. For this, you can attach &lEnergy Batteries&r to the network to add energy storage capacity for it.",
  "info_book.integrateddynamics.manual.machines.energy_battery.text2": "These batteries accept both &lRF&r and &lTesla&r power.",
  "info_book.integrateddynamics.manual.machines.energy_battery.text3": "Applying a redstone signal will enable auto-export mode of energy to all sides.",
  "info_book.integrateddynamics.manual.machines.energy_battery.text4": "When this battery is held in your inventory, &lauto-supply&r mode can be enabled by shift+right clicking. When enabled, this battery will automatically try to fill the items you are holding in your two hands with energy.",
  "info_book.integrateddynamics.manual.machines.generator": "Generator",
  "info_book.integrateddynamics.manual.machines.generator.text1": "When you need &lRF&r or &lTesla&r energy, you can use the &lGenerator&r to create energy from &oburnable&r items.",
  "info_book.integrateddynamics.manual.machines.mechanical_squeezer": "Mechanical Squeezer",
  "info_book.integrateddynamics.manual.machines.mechanical_squeezer.text1": "There will come a time, when you will have had enough of all this jumping on &lSqueezers&r. If you haven't automated your &lSqueezers&r by then, perhaps it's time to look into making a &lMechanical Squeezers&r. It does not require any manual effort, but it requires energy to run. This also makes it significantly faster than the regular &lSqueezers&r and allows more things to be squeezed with a higher yield.",
  "info_book.integrateddynamics.manual.machines.mechanical_drying_basin": "Mechanical Drying Basin",
  "info_book.integrateddynamics.manual.machines.mechanical_drying_basin.text1": "Drying with the &lDrying Basin&r can take a while. If you want things to go faster, or if you want to be able to dry more things, you can use the &lMechanical Drying Basin&r, which requires energy to run.",
  "info_book.integrateddynamics.manual.logic_programming": "Logic Programming",
  "info_book.integrateddynamics.manual.logic_programming.text1": "Another method for creating dynamic variable cards, is by applying an &lOperator&r on one or more &lVariable Cards&r to produce a new &lVariable Card&r. An example of an &lOperator&r is the addition of two &lNumbers&r, resulting in a new &lNumber&r.",
  "info_book.integrateddynamics.manual.logic_programming.text2": "An &lOperator&r can have one or more input values, and has one output value. In most cases the input and outputs have a certain &lValue Type&r, otherwise, they will have the &lAny&r value type. An &lOperator&r with a single input and one output &lBoolean&r is called a &lPredicate&r.",
  "info_book.integrateddynamics.manual.logic_programming.text3": "The &lLogic Programmer&r contains a large collection of &lOperators&r. It also allows you to create static &lVariable Cards&r for all &lValue Types&r. After selecting an &lOperator&r, valid &lVariable Cards&r should be inserted in the expected input slots. Finally, another &lVariable Card&r should be inserted in the output slot. If the &lOperator&r is valid, a new dynamic variable will be written to the card. Remember that the referenced &lVariable Cards&r have to be present in a &lVariable Store&r in the same network where the &lOperator&r will be evaluated.",
  "info_book.integrateddynamics.manual.logic_programming.text4": "The &lLogic Programmer&r allows you to search through the list of &lOperators&r by name using the textbox on the top. It also allows you to filter on input or output value types, by inserting a &lVariable Card&r of those types in the bottom-left slots.",
  "info_book.integrateddynamics.manual.logic_programming.text5": "If a &lLabeller&r is present in the player’s inventory. The resulting &lVariable Card&r can be labelled immediately by clicking on the ‘E’ button next to the output slot.",
  "info_book.integrateddynamics.manual.logic_programming.text6": "The &lLogic Programmer&r exists both in block-form and item-form. Both can be interchanged by placing them in a crafting grid."
}