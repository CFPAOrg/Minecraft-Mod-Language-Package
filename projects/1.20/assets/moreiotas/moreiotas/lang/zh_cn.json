{
  "hexcasting.mishap.invalid_value.matrix.nonsingular": "一个非奇异矩阵",

  "hexcasting.iota.moreiotas:string": "字符串",
  "hexcasting.iota.moreiotas:matrix": "矩阵",
  "hexcasting.iota.moreiotas:iota_type": "Iota类型",
  "hexcasting.iota.moreiotas:entity_type": "实体类型",
  "hexcasting.iota.moreiotas:item_type": "物品类型",
  "hexcasting.iota.moreiotas:item_stack": "物品组",

  "moreiotas.spelldata.entity_type": "类型",

  "moreiotas.tooltip.stack.empty": "空物品组",
  "moreiotas.tooltip.stack.format": "%dx %s",

  "moreiotas.tooltip.string": "\"%s\"",

  "hexcasting.action.moreiotas:string/empty": "空串之精思",
  "hexcasting.action.moreiotas:string/space": "空格之精思",
  "hexcasting.action.moreiotas:string/comma": "逗点之精思",
  "hexcasting.action.moreiotas:string/newline": "断句之精思",
  "hexcasting.action.moreiotas:string/block/get": "读者之纯化",
  "hexcasting.action.moreiotas:string/block/set": "书写",
  "hexcasting.action.moreiotas:string/chat/caster": "耳语之精思",
  "hexcasting.action.moreiotas:string/chat/all": "听者之精思",
  "hexcasting.action.moreiotas:string/chat/prefix/set": "筛具之策略",
  "hexcasting.action.moreiotas:string/chat/prefix/get": "筛具之精思",
  "hexcasting.action.moreiotas:string/iota": "代笔人之纯化",
  "hexcasting.action.moreiotas:string/action": "图案师之纯化",
  "hexcasting.action.moreiotas:string/name/get": "名号之纯化",
  "hexcasting.action.moreiotas:string/name/set": "命名",
  "hexcasting.action.moreiotas:string/add": "接串之馏化",
  "hexcasting.action.moreiotas:string/split": "分串之馏化",
  "hexcasting.action.moreiotas:string/parse": "输入之纯化",
  "hexcasting.action.moreiotas:string/find": "发现者之馏化",
  "hexcasting.action.moreiotas:string/sub": "簸具之提整",
  "hexcasting.action.moreiotas:string/case": "大小写之馏化",

  "hexcasting.action.moreiotas:altadd": "加法之馏化，第二型",
  "hexcasting.action.moreiotas:altmul": "乘法之馏化，第二型",
  "hexcasting.action.moreiotas:altdiv": "除法之馏化，第二型",
  "hexcasting.action.moreiotas:altpow": "乘方之馏化，第二型",

  "hexcasting.action.moreiotas:matrix/make": "组阵之纯化",
  "hexcasting.action.moreiotas:matrix/unmake": "解阵之纯化",
  "hexcasting.action.moreiotas:matrix/unmake/direct": "解阵之纯化，第二型",
  "hexcasting.action.moreiotas:matrix/identity": "单位阵之纯化",
  "hexcasting.action.moreiotas:matrix/zero": "零阵之馏化",
  "hexcasting.action.moreiotas:matrix/rotation": "旋转阵之馏化",
  "hexcasting.action.moreiotas:matrix/transpose": "转置之纯化",
  "hexcasting.action.moreiotas:matrix/inverse": "逆阵之纯化",
  "hexcasting.action.moreiotas:matrix/determinant": "行列式之纯化",
  "hexcasting.action.moreiotas:matrix/concat/vert": "纵接之馏化",
  "hexcasting.action.moreiotas:matrix/concat/hori": "横拼之馏化",
  "hexcasting.action.moreiotas:matrix/split/vert": "倒坠之策略",
  "hexcasting.action.moreiotas:matrix/split/hori": "有丝分裂之策略",

  "hexcasting.action.moreiotas:type/iota": "分类学家之纯化",
  "hexcasting.action.moreiotas:type/entity": "内科医师之纯化",
  "hexcasting.action.moreiotas:type/to_item": "分拣员之纯化",
  "hexcasting.action.moreiotas:type/item_held": "分拣员之精思",

  "hexcasting.action.moreiotas:get_entity/type": "实体之馏化：类型",
  "hexcasting.action.moreiotas:zone_entity/type": "区域之提整：类型",
  "hexcasting.action.moreiotas:zone_entity/not_type": "区域之提整：非类型",


  "hexcasting.action.moreiotas:item/main_hand": "决斗士之纯化",
  "hexcasting.action.moreiotas:item/off_hand": "持盾士之纯化",
  "hexcasting.action.moreiotas:item/inventory/stacks": "囤积者之馏化",
  "hexcasting.action.moreiotas:item/inventory/items": "收集者之馏化",
  "hexcasting.action.moreiotas:item/prop/size/set": "司库之馏化",

  "hexcasting.action.book.moreiotas:string/action": "图案师之纯化",

  "hexcasting.action.book.moreiotas:altadd": "加法之馏化，第二型",
  "hexcasting.action.book.moreiotas:altmul": "乘法之馏化，第二型",
  "hexcasting.action.book.moreiotas:altdiv": "除法之馏化，第二型",

  "hexcasting.action.book.moreiotas:matrix/make": "组阵之纯化",
  "hexcasting.action.book.moreiotas:matrix/unmake": "解阵之纯化",
  "hexcasting.action.book.moreiotas:matrix/unmake/direct": "解阵之纯化，第二型",

  "moreiotas.entry.strings": "字符串",
  "moreiotas.page.strings.string/empty": "压入一个空字符串。其在连接其他字符串方面十分有用。",
  "moreiotas.page.strings.string/space": "压入一个仅含单个空格的字符串。其在连接其他字符串方面十分有用。",
  "moreiotas.page.strings.string/comma": "压入一个仅含单个半角逗号的字符串。其在连接其他字符串方面十分有用。",
  "moreiotas.page.strings.string/newline": "压入一个仅含单个换行符的字符串。其在连接其他字符串方面十分有用。",
  "moreiotas.page.strings.string/block/get": "移除栈顶向量，若该向量坐标处有一告示牌或讲台，返回其上文本。否则返回 Null。",
  "moreiotas.page.strings.string/block/set": "移除栈顶向量和字符串。若该向量坐标处有一告示牌或讲台，则会将所给字符串写至其上。消耗 1/100 个$(l:items/amethyst)$(item)紫水晶粉/$。",
  "moreiotas.page.strings.string/chat/caster": "将施法者发至聊天框的最后一条消息作为字符串压入栈顶。",
  "moreiotas.page.strings.string/chat/all": "将任何人发至聊天框的最后一条消息作为字符串压入栈顶。",
  "moreiotas.page.strings.string/chat/prefix/set": "接受一个字符串。所有此后发出的以此字符串起始的消息将不再对他人可见。同时，$(l:patterns/strings#moreiotas:string/chat/caster)$(action)耳语之精思/$也将只能读取上述消息。",
  "moreiotas.page.strings.string/chat/prefix/get": "返回上一次传给$(l:patterns/strings#moreiotas:string/chat/prefix/set)$(action)筛具之策略/$的字符串。",
  "moreiotas.page.strings.string/iota": "将栈顶元素转换为字符串。",
  "moreiotas.page.strings.string/action": "将栈顶图案转换为其名字。如果该图案不对应任何操作，或对应的操作是卓越法术，则返回 Null。",
  "moreiotas.page.strings.string/name/get": "接受栈顶实体，并返回其名称。若为物品实体，则返回物品的名称。",
  "moreiotas.page.strings.string/name/set": "接受栈顶字符串和实体，并将该实体的名称设定为该字符串。若为物品实体，则会同时更改物品的名称。消耗 1/100 个$(l:items/amethyst)$(item)紫水晶粉/$。",
  "moreiotas.page.strings.string/add": "移除栈顶两字符串，并将其连接。",
  "moreiotas.page.strings.string/split": "移除栈顶两字符串，并以第二个字符串为分隔符拆分第一个字符串，结果作为列表返回。",
  "moreiotas.page.strings.string/parse": "移除栈顶字符串，并返回字符串所解析得的数（若无法解析则返回 Null）。",
  "moreiotas.page.strings.string/find": "移除栈顶两字符串，并返回第二个字符串在第一个字符串中第一次出现的位置下标。",
  "moreiotas.page.strings.string/sub": "移除栈顶字符串和两个数，并返回字符串中下标从第一个数（含）到第二个数（不含）间的子串。",
  "moreiotas.page.strings.string/len": "移除栈顶字符串，并返回其长度。",
  "moreiotas.page.strings.string/case": "移除栈顶字符串和布尔值（Null 也可）。若为 True，将字符串改为全大写并返回；若为 False，则改为全小写；若为 Null，则切换所有字符的大小写。",



  "moreiotas.entry.item_iotas": "物品 Iota",
  "moreiotas.page.item_iotas.0": "我发现了可供操控的两种全新 iota 类型。$(br2)物品类型 iota 代表一个不包含额外属性的物品，如耐久度和魔咒就不包含在内。$(br2)物品组 iota 代表任意个物品的物品组，包含物品数量、名称、魔咒等，并以其在物品栏时的格式表现。",
  "moreiotas.page.item_iotas.1": "但似乎代表着存有物品组 iota 的核心的物品组 iota 会出些错误。看来我自己的意识和思维深度也有些限制。",


  "moreiotas.entry.matrices": "矩阵",
  "moreiotas.page.matrices.0": "矩阵是操纵向量的好帮手，它们能表示任何可作用于向量的线性变换。需注明的是，本条目里的图案能接受许多种 iota，矩阵参数能接受可直接映射为矩阵的任何 iota，如数和向量。",
  "moreiotas.page.matrices.1": "例如，将 3×3 矩阵与向量相乘不会产生事故，而是会返回一个新向量。更多有关发掘矩阵潜能的信息可参见下方链接（译注：B 站官方账号同视频见$(l:https://www.bilibili.com/video/BV1ns41167b9)此/$和$(l:https://www.bilibili.com/video/BV1ys411472E?p=4)此/$）。",
  "moreiotas.page.matrices.1.link_text": "3blue1brown",
  "moreiotas.page.matrices.matrix/make.0": "将栈顶元素转换为矩阵。接受数、向量和列表。",
  "moreiotas.page.matrices.matrix/make.1": "若该 iota 为数，其将变为 1×1 的矩阵。若该 iota 为向量，其将变为 3×1 的矩阵。若该 iota 为列表，则其需为一完全由数组成，或完全由向量组成，或完全由仅含数的列表（所有列表需等长）组成的列表。若组成元素为数，其将变为 1×n 的矩阵；若组成元素为向量，其将变为 3×n 的矩阵；若组成元素为列表，则变为 n×m 的矩阵，其中 n 为内层列表长度，m 为外层列表长度。",
  "moreiotas.page.matrices.matrix/unmake.0": "将栈顶矩阵依其长宽转换为数、向量或列表。",
  "moreiotas.page.matrices.matrix/unmake.1": "1×1 矩阵会变成数。1×3 或 3×1 矩阵会变成向量。3×n 或 n×3 矩阵会变成由向量组成的列表。所有其余矩阵会变成由仅含数的列表组成的列表，内层列表长度为矩阵列数。",
  "moreiotas.page.matrices.matrix/unmake/direct": "与$(l:patterns/matrices#moreiotas:matrix/unmake)$(action)解阵之纯化/$类似，但此图案只会返回由仅含数的列表组成的列表。",
  "moreiotas.page.matrices.matrix/identity": "接受一个正整数 n，返回 n 阶单位矩阵（即主对角线处为 1，其余各处为 0 的方阵）。",
  "moreiotas.page.matrices.matrix/zero": "接受两个正整数 n 和 m，返回 n×m 的零矩阵（即处处为 0 的矩阵）。",
  "moreiotas.page.matrices.matrix/rotation": "接受向量 v 与数 θ，返回对应以 v 为轴正向旋转 θ 弧度的旋转矩阵。",
  "moreiotas.page.matrices.matrix/add": "将两矩阵相加。两矩阵的长宽必须一致。",
  "moreiotas.page.matrices.matrix/mul": "将第一个 n×m 矩阵与 m×p 矩阵相乘，所得为 n×p 矩阵。",
  "moreiotas.page.matrices.matrix/div": "将第一个 n×m 矩阵与 m×m 矩阵的逆相乘，所得为 n×m 矩阵。",
  "moreiotas.page.matrices.matrix/pow": "接受方阵和整数，并计算指数为所给数的方阵幂。",
  "moreiotas.page.matrices.matrix/mul/elem": "将第一个 n×m 矩阵中各元素与另一个 n×m 矩阵中相应元素相乘。",
  "moreiotas.page.matrices.matrix/div/elem": "将第一个 n×m 矩阵中各元素与另一个 n×m 矩阵中相应元素相除。",
  "moreiotas.page.matrices.matrix/pow/elem": "计算第一个 n×m 矩阵中各元素为底数，另一个 n×m 矩阵中相应元素为指数的幂矩阵。",
  "moreiotas.page.matrices.matrix/transpose": "接受一个 n×m 矩阵并返回一个 m×n 矩阵，其中所有元素按主对角线对称翻转。",
  "moreiotas.page.matrices.matrix/inverse": "接受一个 n×n 矩阵并返回一个 n×n 矩阵，使得原矩阵和返回矩阵相乘得单位矩阵。",
  "moreiotas.page.matrices.matrix/determinant": "接受一方阵并返回其行列式。若对 4×4 以上方阵使用，则会产生事故。",
  "moreiotas.page.matrices.matrix/concat/vert": "接受一个 m×n 矩阵与一个 p×n 矩阵，返回一个 (m+p)×n 矩阵，其中第一个矩阵位于第二个矩阵上方。",
  "moreiotas.page.matrices.matrix/concat/hori": "接受一个 n×m 矩阵与一个 n×p 矩阵，返回一个 n×(m+p) 矩阵，其中第一个矩阵位于第二个矩阵左方。",
  "moreiotas.page.matrices.matrix/split/vert": "接受一个 n×m 矩阵与一个 0 到 n 间的整数，返回由原矩阵在所给整数行处上下分割所得的两个矩阵。",
  "moreiotas.page.matrices.matrix/split/hori": "接受一个 n×m 矩阵与一个 0 到 m 间的整数，返回由原矩阵在所给整数列处左右分割所得的两个矩阵。",

  "moreiotas.entry.types": "类型",
  "moreiotas.page.types.type/iota": "移除栈顶元素，并返回该 iota 的类型。",
  "moreiotas.page.types.type/entity": "移除栈顶实体，并返回该实体的类型。",
  "moreiotas.page.types.type/to_item": "移除栈顶位置向量，物品实体或物品展示框。并返回该处方块的类型或对应物品类型。（如草方块、石头、木棍等。）",
  "moreiotas.page.types.type/item_held": "若施法者副手中有物品，则将其类型压入栈顶；若无，则压入施法用手中物品的类型。",

  "moreiotas.page.types.get_entity/type": "从栈顶获取实体类型和位置向量，返回该位置符合该类型的实体（若有）。",
  "moreiotas.page.types.zone_entity/type": "从栈顶获取实体类型、位置向量及最大距离，返回该位置给定距离范围内所有符合给定类型的实体的列表。",
  "moreiotas.page.types.zone_entity/not_type": "从栈顶获取实体类型、位置向量及最大距离，返回该位置给定距离范围内所有不符合给定类型的实体的列表。",

  "moreiotas.entry.items": "物品",
  "moreiotas.page.items.item/prop/item": "接受栈顶$(l:casting/item_iotas)物品组$()，返回对应物品类型。",
  "moreiotas.page.items.item/prop/size": "接受栈顶物品组，返回其中物品数量。",
  "moreiotas.page.items.item/prop/size/set": "接受栈顶物品组，返回其中物品数量。",
  "moreiotas.page.items.item/main_hand": "接受栈顶实体，返回其主手中的物品组。对物品展示框和物品实体同样有效。",
  "moreiotas.page.items.item/off_hand": "接受栈顶实体，返回其副手中的物品组。",
  "moreiotas.page.items.item/inventory/stacks": "移除栈顶位置向量和面向量，并返回与该位置处方块对应面交互时可获得的物品组列表（若面向量为零向量则检索所有面）。",
  "moreiotas.page.items.item/inventory/items": "移除栈顶位置向量和面向量，并返回与该位置处方块对应面交互时可获得的物品类型列表（若面向量为零向量则检索所有面）。",

  "hexcasting.mishap.invalid_value.class.string": "一个字符串",
  "hexcasting.mishap.invalid_value.class.matrix": "一个矩阵",
  "hexcasting.mishap.invalid_value.class.matrix.square": "一个方阵",
  "hexcasting.mishap.invalid_value.class.numvecmat": "一个数、向量或矩阵",
  "hexcasting.mishap.invalid_value.class.possible_matrix": "一个可转换为矩阵的iota",
  "hexcasting.mishap.invalid_value.matrix.wrong_size": "一个%s×%s的矩阵",
  "hexcasting.mishap.invalid_value.matrix.max_size": "一个小于%1$d×%1$d的矩阵，而实际为%2$d×%3$d",
  "hexcasting.mishap.invalid_value.string.max_size": "一个长度小于%d字符的字符串，而实际长度为%d",
  "hexcasting.mishap.bad_item.item.read.offhand": "一个拥有副手的实体",
  "hexcasting.mishap.bad_item.item.read.any": "一个能持有物品的实体"
}