{
    "itemGroup.storagenetwork": "Simple Storage Network",
    
    "item.storagenetwork.network_book":"Network Guide Book",
    "storagenetwork.network_book.landing_text":"Simple storage network will manage all your inventories.  See $(l:gs_setup)Getting started$(/l) or look up an item ",
    "block.storagenetwork.kabel": "Network Cable",
    "block.storagenetwork.kabel.guide": "Network cable basic only connects to network blocks",
    "block.storagenetwork.storage_kabel": "Link Cable",
    "block.storagenetwork.storage_kabel.guide": "Each Link Cable connects one inventory to the network.  These are the main connection point for inventories in your network, with no controls for priority or automation.  Upgrade to  $(l:filter_kabel)Filtered version$(/l) ",
    "block.storagenetwork.export_kabel": "Export Cable",
    "block.storagenetwork.export_kabel.guide": "While connected to an inventory, these export items from the network to the target inventory.  Has priority settings for sort order among other export cables, and optional redstone control.  Accepts upgrades.  ",
    "block.storagenetwork.import_kabel": "Import Cable",
    "block.storagenetwork.import_kabel.guide": "These constantly import from the connected inventory into the network.  Upgrade to  $(l:import_filter_kabel)filtered version$(/l) for more automation",
    "block.storagenetwork.import_filter_kabel": "Filtered Import Cable",
    "block.storagenetwork.import_filter_kabel.guide": "These constantly import from the connected inventory into the network.  They can be customized with upgrades, an item filter, and redstone controls in the GUI control screen.  Item Filter Allow means only items matching the filter will pass, Ignore mode means pull anything but ignore what is in the list.  Importing the filter wipes and replaces it with inventory contents",
    "block.storagenetwork.filter_kabel": "Filtered Link Cable",
    "block.storagenetwork.filter_kabel.guide": "Each Link Cable connects one inventory to the network.  Has priority settings for sort order among other export cables, and accepts upgrades.  ",
    
    "page.storagenetwork.gs_chunks":"Chunks",
    "page.storagenetwork.gs_setup":"Network Setup",
    "page.storagenetwork.gs_priority":"Priority",
    "storagenetwork.guide.getstarted":"Getting Started",
    "storagenetwork.guide.upgrades":"Upgrades",
    "storagenetwork.guide.upgrades.desc":"Upgrades are used in slots of the $(l:export_kabel)Export Cable$(/l) and $(l:import_filter_kabel)Filtered Import cable$(/l)",
    "storagenetwork.guide.remotes":"Remotes",
    "storagenetwork.guide.remotes.desc":"Use your new remote on the $(l:master)Root$(/l) to set up its network binding.  Each Remote is bound to a root nodes exact (x,y,z,d) position, and can access the network inventory as long as the root not is unbroken and in a loaded chunk.  They are wireless with an unbound range.  ",
    "storagenetwork.guide.blocks":"Blocks",
    "storagenetwork.guide.blocks.desc":"All the network blocks connect normally to any network cable or block, and provide different access or functions of the network.  ",
    "storagenetwork.guide.cables":"Cables",
    "storagenetwork.guide.cables.desc":"Cables join blocks and nodes to the network.  A valid network needs at exactly one $(l:master)Root$(/l) node.  Then you will need at least one inventory with a $(l:storage_kabel)Link$(/l) cable",
    "storagenetwork.guide.getstarted.desc":"Various guide pages",
    "page.storagenetwork.gs_setup.left":"A short guide to getting started with Simple Storage Network. Once you gather some ingredients, some $(l:kabel)Link Cables$(/l) and a $(l:master)Network Root$(/l).  Your Network is running once these are placed in your world.  The $(l:storage_kabel)Link Cables$(/l) will connect a chest or other inventory to your network.  For access, look into $(l:inventory_remote)Remotes$(/l) or $(l:request)Tables$(/l). ",
 		"page.storagenetwork.gs_setup.right":"Try using bookmarks feature",
 		"page.storagenetwork.gs_priority.left":"Cables are sorted by priority.  If no GUI is provided, for example with $(l:storge_kabel)Link Cables$(/l), the value for that cable is zero.  When user is doing an insert/extract request to the network, it will keep attempting to use smallest-prioritynodes until the request is complete.  For import/export automation, all cables are processed and priority determines the order each time, one stack-action per-tick per-cable. ",
 		"page.storagenetwork.gs_priority.right":"$(li)Sort cables by priority so lowest numbers are first$(li)equal numbers are together$(li)ex: [-2, -2, 0, 0, 1, 2, 4]$(li)One by one use the nodes in this order ",

	  "page.storagenetwork.gs_chunks.left":"Any network is only running in the world if its $(l:master)Root Node$(/l) is in a loaded chunk of the world.  Endpoint cables in the network such as $(l:storage_kabel)Link cables$(/l) may be in a different chunk than the network root, and may be individually disconnected depending on their own chunk.  You can have multiple networks per chunk, world, or dimension.   ",
 		"page.storagenetwork.gs_chunks.right":"$(li)Spread Example: so its possible for a network to have 20 link cables but 5 are in an unloaded chunk.  Network screens/remotes will still open since the root is loaded, any contents from those unloaded cables are not seen. $(li)Remote example: I build my storage network far away from $(t:which are always loaded)spawn chunks$(/t), in a distant ocean base.  When I go to the nether, the overworld chunks with the Root block are unloaded, so my $(l:inventory_remote)Remotes$(/l) cannot connect",
 	
    "block.storagenetwork.master": "Storage Network Root",
    "block.storagenetwork.master.tooltip": "Use only one per network",
    "block.storagenetwork.master.guide": "The main heart of the network. Only ONE per network, Placing more will cause one of them to break, and may cause network connection issues for remotes and cables.  Moving the root node to a new place will break the network, interrupting imports, exports, and remotes.  Multiple networks per world and dimension are fine as long as they are not connected to each other",
    
    "block.storagenetwork.request": "Storage Request Table",
    "block.storagenetwork.request.guide": "Views the network inventory with full access to scroll, withdraw, and deposit items.  Custom crafting grid that pulls ingredients from the network.   See the $(l:crafting_remote)Remote version here$(/l)  ",
    "block.storagenetwork.request.tooltip": "Used to overview and request items from the network",
    
    "block.storagenetwork.inventory": "Storage Inventory",
    "block.storagenetwork.inventory.guide":  "Views the network inventory with full access to scroll, withdraw, and deposit items.  See the $(l:inventory_remote)Remote version here$(/l)  ",
    "block.storagenetwork.inventory.tooltip": "Inventory access without a crafting grid",
    
    "block.storagenetwork.exchange": "Network Exchange Interface",
    "block.storagenetwork.exchange.guide": "This exposes the network and acts as a controller for other automation systems or storage solutions.  For example, a normal Hopper placed pointing at an Exchange Interface on a network, and it will insert the items into valid network slots as normal, similar to the  $(l:import_kabel)Import Cable$(/l).  A Hopper below will export arbitrary items.  Try this with other storage mods!  ",
    "block.storagenetwork.exchange.tooltip": "Endpoint of the network for inventory connections",

    "block.storagenetwork.collector": "Network Collection Interface",
    "block.storagenetwork.collector.guide":  "This exposes the network and acts as an insert-only controller for other automation systems or storage solutions.  For example, a normal Hopper placed pointing at an Exchange Interface on a network, and it will insert the items into valid network slots as normal, similar to the  $(l:import_kabel)Import Cable$(/l).  Does not allow any item extraction.  Try this with other storage mods!  ",
    "block.storagenetwork.collector.tooltip": "Items inserted enter the network",
    
    "item.storagenetwork.speed_upgrade": "Speed Upgrade",
    "item.storagenetwork.speed_upgrade.guide": "This upgrade can be placed in cables.  Increases the speed of imports, which normally do not happen every tick. by decreasing the tick delay between operations.  Will cause any Slowness upgrades to be ignored if both are present.  ",
    "item.storagenetwork.speed_upgrade.tooltip": "Increases the speed of importing/exporting",
    
    "item.storagenetwork.operation_upgrade": "Operation Upgrade",
    "item.storagenetwork.operation_upgrade.tooltip": "Process the amount of items in the filter; can override other upgrades",
    "item.storagenetwork.operation_upgrade.guide": "If this is in a filtering cable with AllowMode on, it will try to import or export the exact number of items set in the filter and ignore Stack and Stock upgrades.  For example, a filter with 7 stone and 3 dirt allowed will export that many per cycle instead of the default 4. ",
    
    "item.storagenetwork.stack_upgrade": "Stack Upgrade",
    "item.storagenetwork.stack_upgrade.tooltip": "Increases the stack size of task",
    "item.storagenetwork.stack_upgrade.guide": "This upgrade can be placed in the import or exporting cables.  Increases it to pulling a full stack up to 64 every time the cable fires, instead of 4",
        
    "item.storagenetwork.single_upgrade": "Singleton Upgrade",
    "item.storagenetwork.single_upgrade.tooltip": "Sets stack size of the task to 1",
    "item.storagenetwork.single_upgrade.guide": "This upgrade can be placed in the import or exporting cables.  Decreases it to pulling 1 every time the cable fires instead of 4. Will override the Stack upgrade if both are present",
     
    "item.storagenetwork.slow_upgrade": "Slowness Upgrade",
    "item.storagenetwork.slow_upgrade.tooltip": "Slows down the speed of importing/exporting ",
    "item.storagenetwork.slow_upgrade.guide": "This upgrade can be placed in the import or exporting cables.  Increases ticks between each operation which slows down the overall process. ",
     
    "item.storagenetwork.stock_upgrade": "Stock Upgrade",
    "item.storagenetwork.stock_upgrade.tooltip": "Keeps a a consistent stock of items in the attached inventory",
    "item.storagenetwork.stock_upgrade.guide": "If this is in an export cable, then for each unique item in the filter, it will only export until the target inventory has less then the stack size of the filter to fill it up to the target size from the filter.  In the opposite way, Import cables with a stock upgrade will keep a consistent stock in the linked chest based, reducing it down and stopping at the filter stack sizes. ",

    "item.storagenetwork.builder_remote": "Network Builder Remote",
    "item.storagenetwork.builder_remote.tooltip": "Bind to a network and a block to build",
    "item.storagenetwork.builder_remote.guide": "This remote binds as normal but does not have a screen.  Instead, it searches for the block you clicked on, and tries to build a copy of it using a matching item in the network",
    "item.storagenetwork.builder_remote.blockstate": "No blockstate selected; attack to select",
   
    "item.storagenetwork.inventory_remote": "Storage Remote",
    "item.storagenetwork.inventory_remote.tooltip": "Use on the Network Root for remote inventory access",
    "item.storagenetwork.inventory_remote.guide": "Full remote network access, not limited by range or dimension.  Similar to the $(l:inventory)Storage Inventory$(/l).  Open this also using the Key Binding",
    
    "item.storagenetwork.crafting_remote": "Crafting Remote",
    "item.storagenetwork.crafting_remote.tooltip": "Use on the Network Root for remote inventory access",
    "item.storagenetwork.crafting_remote.guide": "Full network access, not limited by range or dimension.  Has an integrated crafting grid.  Similar to the $(l:request)Request Table$(/l)",
    
    "item.storagenetwork.picker_remote": "Network Picker Remote",
    "item.storagenetwork.picker_remote.tooltip": "Tapping on a block will pull matching blocks from the network",
    "item.storagenetwork.picker_remote.guide": "This remote binds as normal but does not have a screen.  Instead, tap this item in the world on a block.  This will request either 1 or a full stack of that block, depending on if you are crouching.  ",
    "item.storagenetwork.collector_remote": "Network Collector Remote",
    "item.storagenetwork.collector_remote.tooltip": "Items picked up are moved into the network",
    "item.storagenetwork.collector_remote.guide": "Bind this to the network as normal.  This remote works anywhere in your inventory (including curios but not ender chest), no need to hold it in hand or hotbar.  When you pickup any item, this will insert that item into the network if possible",

    "block.storagenetwork.recipe.invalid": "Transaction invalid:",
    "block.storagenetwork.recipe.invalidleft": "Set Input on left",
    "block.storagenetwork.recipe.invalidright": "Set Output on right",
    "block.storagenetwork.recipe.valid": "Transaction valid",

    "item.remote.found": "Item found, extracting..",
    "item.remote.notfound.item": "Item not found in network",
    "item.remote.notfound": "Network not found, make sure chunk is loaded",
    "item.remote.notconnected": "Remote is not connected, bind it to the Main network node first",
    "item.remote.connected": "Remote has connected to network",
    "item.remote.outofrange": "Out of range",
    "item.remote.notloaded": "Chunk not loaded",



    "gui.storagenetwork.refresh": "Refresh processing transactions, so if it is stuck waiting for a result, this will swap it back to recipe mode to gather ingredients",

    "gui.storagenetwork.checkbox.meta": "Meta",
    "gui.storagenetwork.checkbox.ore": "OreDict",
    "gui.storagenetwork.checkbox.nbt": "NBT",

    "gui.storagenetwork.import": "Import contents as Filter",
    "gui.storagenetwork.allowlist": "Allow List",
    "gui.storagenetwork.ignorelist": "Ignore List",
    
    "gui.storagenetwork.redstone.false":"Always On",
    "gui.storagenetwork.redstone.true":"Requires Redstone",

    "gui.storagenetwork.sort": "Sort Direction",
    "gui.storagenetwork.priority.up": "Demote Priority (smaller goes first)",
    "gui.storagenetwork.priority.down": "Promote Priority (smaller goes first)",

    "gui.storagenetwork.req.tooltip_name": "Sort by name",
    "gui.storagenetwork.req.tooltip_mod": "Sort by mod",
    "gui.storagenetwork.req.tooltip_amount": "Sort by amount",

    "gui.storagenetwork.shift": "Hold shift for more information",
    "gui.storagenetwork.fil.tooltip_in": "Only input",
    "gui.storagenetwork.fil.tooltip_out": "Only output",
    "gui.storagenetwork.fil.tooltip_both": "Input and output",  
    "gui.storagenetwork.fil.tooltip_mod": "Prefix @: Search for mod",
    "gui.storagenetwork.fil.tooltip_tooltip": "Prefix #: Search for tooltip",
    "gui.storagenetwork.fil.tooltip_tags": "Prefix $: Search for block tags",
    "gui.storagenetwork.fil.tooltip_clear": "Clear text with right-click",
 	"gui.storagenetwork.autofocus.tooltip.true":"Auto-Focus search bar",
 	"gui.storagenetwork.autofocus.tooltip.false":"No auto-focus",
    "gui.storagenetwork.tooltip_clear": "Clear Search",
    "gui.storagenetwork.fil.tooltip_jei_on": "JEI search enabled",
    "gui.storagenetwork.fil.tooltip_jei_off": "JEI search disabled",

    "block.storagenetwork.kabel.tooltip": "Basic network cable ",
    "block.storagenetwork.storage_kabel.tooltip": "Used to connect inventory to the network",
    "block.storagenetwork.export_kabel.tooltip": "Exports items from the network into attached inventory",
    "block.storagenetwork.import_kabel.tooltip": "Imports all items from attached inventory into the network",
    "block.storagenetwork.filter_kabel.tooltip": "Inventory link with filtering options",
    "block.storagenetwork.import_filter_kabel.tooltip": "Imports items with filtering options",
    
    
    "tooltip.storagenetwork.kabel_P": "Can automate simple processing transactions",
         
    "block.storagenetwork.controller": "Controller",
    "block.storagenetwork.controller.tooltip": "Manage all Processing Cables in the network",

    "chat.main.emptyslots": "Potential Empty Slots: ",
    "chat.main.connectables": "Connectables: ",
    
    "key.storagenetwork.remote":"Network Remote Curio",
 
 
 
	"gui.storagenetwork.operate.tooltip":"Operations disabled if the logic check fails",
	"gui.storagenetwork.operate.tooltip.more":"Item count must be more than value",
	"gui.storagenetwork.operate.tooltip.less":"Item count must be less than value",

    "processing.buttons.toggle.true": "Always Active",
    "processing.buttons.toggle.false": "Only process the requested number",
    "processing.buttons.minus": "Reduce requested",
    "processing.buttons.plus": "Increase requested",
    "processing.empty.ingredients": "Empty Ingredients",

    "gui.storagenetwork.processing.recipe": "Ingredients for each cycle will be sent as if coming from this block-side",
    "gui.storagenetwork.processing.extract": "When pulling processing results it will be taken as if from this block-side"
}
