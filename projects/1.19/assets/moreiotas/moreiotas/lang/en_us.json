{
  "hexcasting.iota.moreiotas:string": "String",
  "hexcasting.iota.moreiotas:matrix": "Matrix",

  "hexal.tooltip.string": "\"%s\"",

  "hexcasting.spell.moreiotas:string/empty": "Blank Reflection",
  "hexcasting.spell.moreiotas:string/space": "Spacing Reflection",
  "hexcasting.spell.moreiotas:string/comma": "Comma Reflection",
  "hexcasting.spell.moreiotas:string/newline": "Breaking Reflection",
  "hexcasting.spell.moreiotas:string/block/get": "Reader's Purification",
  "hexcasting.spell.moreiotas:string/block/set": "Write",
  "hexcasting.spell.moreiotas:string/chat/caster": "Whisper Reflection",
  "hexcasting.spell.moreiotas:string/chat/all": "Listener's Reflection",
  "hexcasting.spell.moreiotas:string/chat/prefix/get": "Sifter's Reflection",
  "hexcasting.spell.moreiotas:string/chat/prefix/set": "Sifter's Gambit",
  "hexcasting.spell.moreiotas:string/iota": "Scrivener's Purification",
  "hexcasting.spell.moreiotas:string/action": "Patternmaster's Purification",
  "hexcasting.spell.moreiotas:string/name/get": "Moniker Purification",
  "hexcasting.spell.moreiotas:string/name/set": "Name",
  "hexcasting.spell.moreiotas:string/add": "Concatenation Distillation",
  "hexcasting.spell.moreiotas:string/split": "Separation Distillation",
  "hexcasting.spell.moreiotas:string/parse": "Input Purification",
  "hexcasting.spell.moreiotas:string/find": "Discoverer's Distillation",
  "hexcasting.spell.moreiotas:string/sub": "Winnowing Distillation",
  "hexcasting.spell.moreiotas:string/len": "Length Distillation: Str",
  "hexcasting.spell.moreiotas:string/case": "Case Distillation",

  "hexcasting.spell.moreiotas:matrix/make": "Transformation Purification",
  "hexcasting.spell.moreiotas:matrix/unmake": "Restoration Purification",
  "hexcasting.spell.moreiotas:matrix/identity": "Identity Purification",
  "hexcasting.spell.moreiotas:matrix/zero": "Zero Distillation",
  "hexcasting.spell.moreiotas:matrix/rotation": "Rotation Distillation",
  "hexcasting.spell.moreiotas:matrix/add": "Addition Distillation: Matrix",
  "hexcasting.spell.moreiotas:matrix/mul": "Multiplication Distillation: Matrix",
  "hexcasting.spell.moreiotas:matrix/transpose": "Transpose Purification",
  "hexcasting.spell.moreiotas:matrix/inverse": "Inverse Purification",
  "hexcasting.spell.moreiotas:matrix/determinant": "Determinant Purification",
  "hexcasting.spell.moreiotas:matrix/concat/vert": "Tower Distillation",
  "hexcasting.spell.moreiotas:matrix/concat/hori": "Sprawling Distillation",
  "hexcasting.spell.moreiotas:matrix/split/vert": "Toppling Gambit",
  "hexcasting.spell.moreiotas:matrix/split/hori": "Mitosis Gambit",

  "hexcasting.spell.book.moreiotas:string/action": "Patternmaster's Prfct.",
  "hexcasting.spell.book.moreiotas:string/len": "Length Dstl.: Str",

  "hexcasting.spell.book.moreiotas:matrix/make": "Transformation Prfct.",
  "hexcasting.spell.book.moreiotas:matrix/unmake": "Restoration Prfct.",
  "hexcasting.spell.book.moreiotas:matrix/add": "Add. Dstl.: Matrix",
  "hexcasting.spell.book.moreiotas:matrix/mul": "Mul. Dstl.: Matrix",

  "moreiotas.entry.strings": "Strings",
  "moreiotas.page.strings.string/empty": "Add an empty string to the stack, useful for combining with other strings.",
  "moreiotas.page.strings.string/space": "Add a blank space string to the stack, useful for combining with other strings.",
  "moreiotas.page.strings.string/comma": "Add a comma string to the stack, useful for combining with other strings.",
  "moreiotas.page.strings.string/newline": "Add a string to the stack representing a break between lines, useful for combining with other strings.",
  "moreiotas.page.strings.string/block/get": "Removes a vector from the stack. If that vector is pointing at a sign or lectern, it returns that sign or lectern's text to the stack. Otherwise, it returns null.",
  "moreiotas.page.strings.string/block/set": "Removes a vector and a string from the stack. If that vector is pointing at a sign or lectern, it writes that string to that sign or lectern. Costs a hundredth of an $(l:items/amethyst)$(item)Amethyst Dust/$.",
  "moreiotas.page.strings.string/chat/caster": "Adds the last message the caster sent to the stack as a string.",
  "moreiotas.page.strings.string/chat/all": "Adds the last message anyone sent to the stack as a string.",
  "moreiotas.page.strings.string/chat/prefix/set": "Accepts a string; All future chat messages starting with that string won't be seen by others, and only messages prefixed with that string can be read by $(l:moreiotas:patterns/strings#moreiotas:string/chat/caster)$(action)Whisper Reflection/$.",
  "moreiotas.page.strings.string/chat/prefix/get": "Returns the last string you passed to $(l:moreiotas:patterns/strings#moreiotas:string/chat/prefix/set)$(action)Sifter's Gambit/$.",
  "moreiotas.page.strings.string/iota": "Converts the iota on top of the stack into a string.",
  "moreiotas.page.strings.string/action": "Converts the pattern on top of the stack into the string for that pattern's name. If there is no action associated with that pattern, or if the associated pattern is a Great Spell, it returns null.",
  "moreiotas.page.strings.string/name/get": "Takes an entity and returns that entity's name. If it is an item entity, return the item's name.",
  "moreiotas.page.strings.string/name/set": "Takes a string and an entity, and sets that entities name to the given string. If the entity is an item entity, also set the item's name. Costs a hundredth of an $(l:items/amethyst)$(item)Amethyst Dust/$.",
  "moreiotas.page.strings.string/add": "Removes the top two strings from the stack and combines them together.",
  "moreiotas.page.strings.string/split": "Removes the top two strings from the stack and splits the first string, using the second string as the delimiter and returning as a list.",
  "moreiotas.page.strings.string/parse": "Removes a string from the top of the stack and returns the number that string parses as (or null if it doesn't parse).",
  "moreiotas.page.strings.string/find": "Removes two strings from the top of the stack, and returns the first index of the first string where the second string is a substring.",
  "moreiotas.page.strings.string/sub": "Removes a string and two positive integers from the top of the stack, and returns the substring from the first to the second (inclusive first, exclusive second).",
  "moreiotas.page.strings.string/len": "Removes a string and returns its length.",
  "moreiotas.page.strings.string/case": "Removes a string and a bool or null. If it was true, return the string in upper case. If false, lowercase. If null, toggle each character's case.",

  "moreiotas.entry.matrices": "Matrices",
  "moreiotas.page.matrices.0": "Matrices are a helpful tool for manipulating vectors to do as I wish, able to represent any linear transformation that can be applied to a vector. Of note with these patterns is that many are forgiving with their inputs, accepting in place of matrices things that can be easily mapped to matrices, namely numbers and vectors.",
  "moreiotas.page.matrices.1": "For example, attempting to multiply a 3x3 matrix with a vector, rather than mishapping, will return a new vector. For more information on how to make use of matrices to their fullest potential, the below is a helpful resource.",
  "moreiotas.page.matrices.1.link_text": "3blue1brown",
  "moreiotas.page.matrices.matrix/make.0": "Converts the iota on top of the stack into a matrix. This iota can be a number, vector, or list.",
  "moreiotas.page.matrices.matrix/make.1": "If it is a number, it becomes a 1x1 matrix. If it's a vector, it becomes a 3x1 matrix. If it's a list, it must be a list of purely numbers, purely vectors, or purely lists of numbers (each of which must be the same length). If it's a list of numbers it'll be 1 by n, if it's a list of vectors it'll be 3 by n, and if it's a list of lists it'll be n by m, where n is the inner list length and m is the outer list length.",
  "moreiotas.page.matrices.matrix/unmake.0": "Converts the iota on top of the stack back from a matrix into a number, vector, or list depending on the vector's size.",
  "moreiotas.page.matrices.matrix/unmake.1": "A 1x1 matrix will become a number. A 1x3 or 3x1 matrix will become a vector. A 3 by n or n by 3 matrix will become a list of vectors, and any matrix not covered by the previous will become a list of list of numbers, with each inner list being one column of the matrix.",
  "moreiotas.page.matrices.matrix/identity": "Accepts a positive integer n, and returns an n by n matrix with 1 along the diagonal and 0 elsewhere.",
  "moreiotas.page.matrices.matrix/zero": "Accepts positive integers n and m, and returns an n by m matrix of zeros.",
  "moreiotas.page.matrices.matrix/rotation": "Accepts a vec v and number θ, and returns a matrix representing rotating by θ radians around v.",
  "moreiotas.page.matrices.matrix/add": "Adds two matrices together; they must have the same number of columns and rows.",
  "moreiotas.page.matrices.matrix/mul": "Multiplies the first n by m matrix with an m by p matrix.",
  "moreiotas.page.matrices.matrix/transpose": "Accepts an n by m matrix and returns an m by n matrix where every entry has been flipped along the diagonal.",
  "moreiotas.page.matrices.matrix/inverse": "Accepts an n by n matrix and returns the n by n matrix such that in*out = identity.",
  "moreiotas.page.matrices.matrix/determinant": "Accepts a square matrix and returns the determinant of that matrix. Mishaps for matrices larger than 4x4.",
  "moreiotas.page.matrices.matrix/concat/vert": "Accepts an n by m matrix and an n by p matrix and produces an n by (m+p) matrix by putting the first matrix on top of the second.",
  "moreiotas.page.matrices.matrix/concat/hori": "Accepts an m by n matrix and a p by n matrix and produces an (m+p) by n matrix by putting the first matrix to the left of the second.",
  "moreiotas.page.matrices.matrix/split/vert": "Accepts an n by m matrix and an int from 0 to n, and returns two matrices created by splitting the input matrix vertically at the inputted int.",
  "moreiotas.page.matrices.matrix/split/hori": "Accepts an n by m matrix and an int from 0 to m, and returns two matrices created by splitting the input matrix horizontally at the inputted int.",


  "hexcasting.mishap.invalid_value.class.string": "a string",
  "hexcasting.mishap.invalid_value.class.matrix": "a matrix",
  "hexcasting.mishap.invalid_value.class.matrix.square": "a square matrix",
  "hexcasting.mishap.invalid_value.class.numvecmat": "a number, vector, or matrix",
  "hexcasting.mishap.invalid_value.class.possible_matrix": "an iota able to be converted to a matrix",
  "hexcasting.mishap.invalid_value.matrix.wrong_size": "a matrix %s by %s",
  "hexcasting.mishap.invalid_value.matrix.max_size": "a final matrix less than %1$d by %1$d, was %2$d by %3$d",
  "hexcasting.mishap.invalid_value.string.max_size": "a string less than %d chars long, was %d"
}