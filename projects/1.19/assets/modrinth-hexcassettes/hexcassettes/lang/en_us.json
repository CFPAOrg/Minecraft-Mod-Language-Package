{
	"advancements.hexcassettes.quinio.title": "QUINIO",
	"advancements.hexcassettes.quinio.description": "Make a Hex cast a Hex.",
	"advancements.hexcassettes.tape_worm.title": "Tape Worm?",
	"advancements.hexcassettes.tape_worm.description": "Consume a cassette tape.",
	"advancements.hexcassettes.full_arsenal.title": "Full Album",
	"advancements.hexcassettes.full_arsenal.description": "Acquire a full arsenal of cassettes.",

	"subtitles.hexcassettes.cassette_eject": "Cassette ejects",
	"subtitles.hexcassettes.cassette_fail": "Cassette clicks",
	"subtitles.hexcassettes.cassette_insert": "Cassette inserted",
	"subtitles.hexcassettes.cassette_loop": "Cassette whirrs",

	"item.hexcassettes.cassette": "Cassette",

	"hexcasting.mishap.hexcassettes:too_many_cassettes": "Attempted to schedule more Hexes than owned cassettes.",

	"hexcassettes.page.async.title": "Asynchronous Hexes",
	"hexcassettes.page.async.0": "As part of their nature, _Hexes evaluate in their entirety instantly. To delay _Hexes, Nature has devised a quite the whimsical solution: a cassette tape that must be crafted and then \"consumed\". Each _Hex I request to delay takes up one cassette \"slot\" until it fires. These cassettes slots can be viewed when chatting or casting with a staff and I can simply click them to abort the _Hex.",
	"hexcassettes.page.async.craft": "After crafting it by plating a music disc with a hefty amount of charged amethyst to facilitate the assimilation, I can $(o)consume$() it to add it to my mind's collection. I can only have six cassettes at a time and any more eaten will simply be wasted.",
    "hexcasting.spell.hexcassettes:enqueue": "Enqueue",
    "hexcassettes.page.enqueue.summary": "Enqueues a _Hex to cast after that many twentieths of a second. It takes an iota to use as the label for the cassette.",
	"hexcassettes.page.async.1": "The label iota is used to distinguish cassettes from each other and only the first 32 characters are kept. Enqueuing two _Hexes with the same label overwrites the older one. If I attempt to enqueue more _Hexes than I have cassettes, I incur the Parallel Processing mishap which kills all my currently active cassettes.$(br2)$(o)Ibra oniki ra. QUINIO QUINIO QUINIO QUINIO alef a ra.$()",
    "hexcassettes.page.async.2": "Once a _Hex has been enqueued, I can open my chat screen to see all the cassettes I have eaten. Queued _Hexes are represented as inserted cassettes with their label rendered to the side, and by pressing an cassette, I can cancel the corresponding _Hex.$(br2)Dying also forcibly kills all of my cassettes so I can rest easy that I will not trap myself in an endless death cycle.",
	"hexcassettes.page.async.3": "If a _Hex casts a near-identical copy of itself, a phenomenon emerges that ancient _Hexcasters call a daemon, which allow for passive _Hexcasting. Study into this branch of _Hexcasting seems limited and I shall be careful if I want to delve in: this type of casting uses exclusively the media from my inventory and if left unchecked, rapid automated casting can easily drain all my media and with nothing else to consume, my life.",
    "hexcasting.spell.hexcassettes:dequeue": "Dequeue",
    "hexcassettes.page.dequeue.summary": "I can also automate killing cassettes with this pattern. It takes an iota and dequeues the cassette with that label if it exists.",
	"hexcasting.spell.hexcassettes:killall": "Disqueue",
	"hexcassettes.page.killall.summary": "Terminates all cassettes, similar to the effects of the Parallel Processing mishap.",
	"hexcasting.spell.hexcassettes:specs": "Threading Reflection",
	"hexcassettes.page.specs.summary": "Pushes the total number of cassettes slots that I currently have.",
	"hexcasting.spell.hexcassettes:free": "Threading Reflection II",
	"hexcassettes.page.free.summary": "Pushes the number of non-busy cassette slots that I currently have.",
	"hexcasting.spell.hexcassettes:inspect": "Program Purification",
	"hexcassettes.page.inspect.summary": "Pushes null if I do not have an active cassette with that label, or the cassette's _Hex if I do. I hear rumors of this being used for iota storage and passing information between _Hexes.",
	"hexcasting.spell.hexcassettes:foretell": "Program Purification II",
	"hexcassettes.page.foretell.summary": "Pushes null if I do not have an active cassette with that label, or how many twentieths of a second until that cassette fires if I do.",
	"hexcassettes.page.async.4": "I shall also note that rapidly changing cassette names (for example a cassette that enqueues itself with a different name) may be difficult to terminate. I can always resort to $(l:hexcassettes:async#hexcassettes:killall)$(action)Disqueue$() in such cases."
}